// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();
    let _1: St;
    let mut _2: bool;
    let mut _3: bool;
    let mut _4: u32;
    let mut _5: u32;
    let mut _6: u32;
    let mut _7: !;
    scope 1 {
        debug s => _1;
    }

    bb0: {
        _1 = St { a: const 1_u32, b: const 2_u32 };
        _5 = (_1.0: u32);
        _4 = Add(move _5, const 1_u32);
        _6 = (_1.1: u32);
        _3 = Eq(move _4, move _6);
        _2 = Not(move _3);
        switchInt(move _2) -> [0: bb2, otherwise: bb1];
    }

    bb1: {
        _7 = core::panicking::panic(const "assertion failed: s.a + 1 == s.b");
    }

    bb2: {
        return;
    }
}
