// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();
    let _1: usize;
    let mut _5: bool;
    let mut _6: usize;
    let mut _7: bool;
    let mut _8: usize;
    let mut _9: !;
    scope 1 {
        debug a => _1;
        let _2: usize;
        scope 2 {
            debug b => _2;
            let _3: usize;
            scope 3 {
                debug c => _3;
                let _4: usize;
                scope 4 {
                    debug d => _4;
                }
            }
        }
    }

    bb0: {
        _1 = const 1_usize;
        _2 = const 2_usize;
        _3 = const 3_usize;
        _6 = Add(_1, _2);
        _5 = Eq(move _6, _3);
        switchInt(move _5) -> [0: bb2, otherwise: bb1];
    }

    bb1: {
        _4 = _1;
        goto -> bb3;
    }

    bb2: {
        _4 = _2;
        goto -> bb3;
    }

    bb3: {
        _8 = _4;
        _7 = Ne(move _8, _1);
        switchInt(move _7) -> [0: bb5, otherwise: bb4];
    }

    bb4: {
        _9 = begin_panic::<&str>(const "explicit panic") -> unwind continue;
    }

    bb5: {
        return;
    }
}
