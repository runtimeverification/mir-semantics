fn main() -> () {
  let _1: [usize; -a.b];
  let _2: [usize; *a.b];
  let _2: [usize; !a.b];
  let _2: [usize; &a.b];
  let _2: [usize; &mut a.b];
  let _1: [usize; -a()];
  let _2: [usize; *a()];
  let _2: [usize; !a()];
  let _2: [usize; &a()];
  let _2: [usize; &mut a()];
  // let _2: [usize; -a[1]];
  // let _2: [usize; *a[1]];
  // let _2: [usize; !a[1]];
  // let _2: [usize; &a[1]];
  // let _2: [usize; &mut a[1]];
  let _2: [usize; -a as usize];
  let _2: [usize; *a as usize];
  let _2: [usize; !a as usize];
  let _2: [usize; &a as usize];
  let _2: [usize; &mut a as usize];
  let _2: [usize; a as usize as usize];
  let _2: [usize; a * b as usize];
  let _2: [usize; a / b as usize];
  let _2: [usize; a % b as usize];
  let _2: [usize; a * b * c];
  let _2: [usize; a / b / c];
  let _2: [usize; a % b % c];
  let _2: [usize; a * b / c % d];
  let _2: [usize; a * b + c];
  let _2: [usize; a / b + c];
  let _2: [usize; a % b + c];
  let _2: [usize; a * b - c];
  let _2: [usize; a / b - c];
  let _2: [usize; a % b - c];
  let _2: [usize; a + b + c];
  let _2: [usize; a - b - c];
  let _2: [usize; a + b - c];
  let _2: [usize; a >> b + c];
  let _2: [usize; a << b + c];
  let _2: [usize; a >> b - c];
  let _2: [usize; a << b - c];
  let _2: [usize; a >> b >> c];
  let _2: [usize; a << b << c];
  let _2: [usize; a >> b << c];
  let _2: [usize; a & b << c];
  let _2: [usize; a & b >> c];
  let _2: [usize; a & b & c];
  let _2: [usize; a ^ b & c];
  let _2: [usize; a ^ b ^ c];
  let _2: [usize; a | b ^ c];
  let _2: [usize; a | b | c];
  let _2: [usize; a == b | c];
  let _2: [usize; a != b | c];
  let _2: [usize; a < b | c];
  let _2: [usize; a > b | c];
  let _2: [usize; a <= b | c];
  let _2: [usize; a >= b | c];
  let _2: [usize; a == b && c];
  let _2: [usize; a != b && c];
  let _2: [usize; a < b && c];
  let _2: [usize; a > b && c];
  let _2: [usize; a <= b && c];
  let _2: [usize; a >= b && c];
  let _2: [usize; a && b && c];
  let _2: [usize; a && b || c];
  let _2: [usize; a || b || c];
}
