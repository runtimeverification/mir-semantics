<kmir>
  <k>
    #ProgramError ( AssertError ( assertMessageMisalignedPointerDereference (... required: operandCopy ( place (... local: local ( 6 ) , projection: .ProjectionElems ) ) , found: operandCopy ( place (... local: local ( 5 ) , projection: .ProjectionElems ) ) ) ) ) ~> #execBlockIdx ( basicBlockIdx ( 1 ) ) ~> .K
  </k>
  <retVal>
    noReturn
  </retVal>
  <currentFunc>
    ty ( 34 )
  </currentFunc>
  <currentFrame>
    <currentBody>
      ListItem ( basicBlock (... statements: statement (... kind: statementKindAssign (... place: place (... local: local ( 2 ) , projection: .ProjectionElems ) , rvalue: rvalueAddressOf ( mutabilityNot , place (... local: local ( 1 ) , projection: projectionElemDeref  .ProjectionElems ) ) ) , span: span ( 56 ) )  statement (... kind: statementKindAssign (... place: place (... local: local ( 3 ) , projection: .ProjectionElems ) , rvalue: rvalueCast ( castKindPtrToPtr , operandCopy ( place (... local: local ( 2 ) , projection: .ProjectionElems ) ) , ty ( 27 ) ) ) , span: span ( 57 ) )  statement (... kind: statementKindAssign (... place: place (... local: local ( 4 ) , projection: .ProjectionElems ) , rvalue: rvalueCast ( castKindPtrToPtr , operandCopy ( place (... local: local ( 3 ) , projection: .ProjectionElems ) ) , ty ( 28 ) ) ) , span: span ( 55 ) )  statement (... kind: statementKindAssign (... place: place (... local: local ( 5 ) , projection: .ProjectionElems ) , rvalue: rvalueCast ( castKindTransmute , operandCopy ( place (... local: local ( 4 ) , projection: .ProjectionElems ) ) , ty ( 29 ) ) ) , span: span ( 55 ) )  statement (... kind: statementKindAssign (... place: place (... local: local ( 6 ) , projection: .ProjectionElems ) , rvalue: rvalueNullaryOp ( nullOpAlignOf , ty ( 25 ) ) ) , span: span ( 55 ) )  statement (... kind: statementKindAssign (... place: place (... local: local ( 7 ) , projection: .ProjectionElems ) , rvalue: rvalueBinaryOp ( binOpSub , operandCopy ( place (... local: local ( 6 ) , projection: .ProjectionElems ) ) , operandConstant ( constOperand (... span: span ( 55 ) , userTy: noUserTypeAnnotationIndex , const: mirConst (... kind: constantKindAllocated ( allocation (... bytes: b"\x01\x00\x00\x00\x00\x00\x00\x00" , provenance: provenanceMap (... ptrs: .ProvenanceMapEntries ) , align: align ( 8 ) , mutability: mutabilityMut ) ) , ty: ty ( 29 ) , id: mirConstId ( 9 ) ) ) ) ) ) , span: span ( 55 ) )  statement (... kind: statementKindAssign (... place: place (... local: local ( 8 ) , projection: .ProjectionElems ) , rvalue: rvalueBinaryOp ( binOpBitAnd , operandCopy ( place (... local: local ( 5 ) , projection: .ProjectionElems ) ) , operandCopy ( place (... local: local ( 7 ) , projection: .ProjectionElems ) ) ) ) , span: span ( 55 ) )  statement (... kind: statementKindAssign (... place: place (... local: local ( 9 ) , projection: .ProjectionElems ) , rvalue: rvalueBinaryOp ( binOpEq , operandCopy ( place (... local: local ( 8 ) , projection: .ProjectionElems ) ) , operandConstant ( constOperand (... span: span ( 55 ) , userTy: noUserTypeAnnotationIndex , const: mirConst (... kind: constantKindAllocated ( allocation (... bytes: b"\x00\x00\x00\x00\x00\x00\x00\x00" , provenance: provenanceMap (... ptrs: .ProvenanceMapEntries ) , align: align ( 8 ) , mutability: mutabilityMut ) ) , ty: ty ( 29 ) , id: mirConstId ( 10 ) ) ) ) ) ) , span: span ( 55 ) )  .Statements , terminator: terminator (... kind: assert (... cond: operandCopy ( place (... local: local ( 9 ) , projection: .ProjectionElems ) ) , expected: true , msg: assertMessageMisalignedPointerDereference (... required: operandCopy ( place (... local: local ( 6 ) , projection: .ProjectionElems ) ) , found: operandCopy ( place (... local: local ( 5 ) , projection: .ProjectionElems ) ) ) , target: basicBlockIdx ( 1 ) , unwind: unwindActionUnreachable ) , span: span ( 55 ) ) ) )
      ListItem ( basicBlock (... statements: statement (... kind: statementKindAssign (... place: place (... local: local ( 0 ) , projection: .ProjectionElems ) , rvalue: rvalueUse ( operandCopy ( place (... local: local ( 3 ) , projection: projectionElemDeref  .ProjectionElems ) ) ) ) , span: span ( 55 ) )  .Statements , terminator: terminator (... kind: terminatorKindReturn , span: span ( 58 ) ) ) )
    </currentBody>
    <caller>
      ty ( -1 )
    </caller>
    <dest>
      place (... local: local ( 2 ) , projection: .ProjectionElems )
    </dest>
    <target>
      someBasicBlockIdx ( basicBlockIdx ( 2 ) )
    </target>
    <unwind>
      unwindActionContinue
    </unwind>
    <locals>
      ListItem ( newLocal ( ty ( 25 ) , mutabilityMut ) )
      ListItem ( typedValue ( Reference ( 1 , place (... local: local ( 1 ) , projection: .ProjectionElems ) , mutabilityNot , metadata ( noMetadataSize , 0 , noMetadataSize ) ) , ty ( 30 ) , mutabilityNot ) )
      ListItem ( typedValue ( PtrLocal ( 1 , place (... local: local ( 1 ) , projection: .ProjectionElems ) , mutabilityNot , metadata ( noMetadataSize , 0 , noMetadataSize ) ) , ty ( 31 ) , mutabilityNot ) )
      ListItem ( typedValue ( PtrLocal ( 1 , place (... local: local ( 1 ) , projection: .ProjectionElems ) , mutabilityNot , metadata ( noMetadataSize , 0 , noMetadataSize ) ) , ty ( 27 ) , mutabilityNot ) )
      ListItem ( typedValue ( thunk ( #cast ( PtrLocal ( 1 , place (... local: local ( 1 ) , projection: .ProjectionElems ) , mutabilityNot , metadata ( noMetadataSize , 0 , noMetadataSize ) ) , castKindPtrToPtr , ty ( 27 ) , ty ( 28 ) ) ) , ty ( 28 ) , mutabilityMut ) )
      ListItem ( typedValue ( thunk ( #cast ( thunk ( #cast ( PtrLocal ( 1 , place (... local: local ( 1 ) , projection: .ProjectionElems ) , mutabilityNot , metadata ( noMetadataSize , 0 , noMetadataSize ) ) , castKindPtrToPtr , ty ( 27 ) , ty ( 28 ) ) ) , castKindTransmute , ty ( 28 ) , ty ( 29 ) ) ) , ty ( 29 ) , mutabilityMut ) )
      ListItem ( typedValue ( Integer ( 8 , 64 , false ) , ty ( 29 ) , mutabilityMut ) )
      ListItem ( typedValue ( Integer ( 7 , 64 , false ) , ty ( 29 ) , mutabilityMut ) )
      ListItem ( typedValue ( thunk ( #applyBinOp ( binOpBitAnd , thunk ( #cast ( thunk ( #cast ( PtrLocal ( 1 , place (... local: local ( 1 ) , projection: .ProjectionElems ) , mutabilityNot , metadata ( noMetadataSize , 0 , noMetadataSize ) ) , castKindPtrToPtr , ty ( 27 ) , ty ( 28 ) ) ) , castKindTransmute , ty ( 28 ) , ty ( 29 ) ) ) , Integer ( 7 , 64 , false ) , false ) ) , ty ( 29 ) , mutabilityMut ) )
      ListItem ( typedValue ( thunk ( #applyBinOp ( binOpEq , thunk ( #applyBinOp ( binOpBitAnd , thunk ( #cast ( thunk ( #cast ( PtrLocal ( 1 , place (... local: local ( 1 ) , projection: .ProjectionElems ) , mutabilityNot , metadata ( noMetadataSize , 0 , noMetadataSize ) ) , castKindPtrToPtr , ty ( 27 ) , ty ( 28 ) ) ) , castKindTransmute , ty ( 28 ) , ty ( 29 ) ) ) , Integer ( 7 , 64 , false ) , false ) ) , Integer ( 0 , 64 , false ) , false ) ) , ty ( 32 ) , mutabilityMut ) )
    </locals>
  </currentFrame>
  <stack>
    ListItem ( StackFrame ( ty ( -1 ) , place (... local: local ( 0 ) , projection: .ProjectionElems ) , noBasicBlockIdx , unwindActionContinue , ListItem ( newLocal ( ty ( 1 ) , mutabilityMut ) )
    ListItem ( typedValue ( Aggregate ( variantIdx ( 0 ) , ListItem ( Integer ( 41 , 64 , true ) ) ) , ty ( 26 ) , mutabilityNot ) )
    ListItem ( newLocal ( ty ( 25 ) , mutabilityMut ) )
    ListItem ( typedValue ( Reference ( 0 , place (... local: local ( 1 ) , projection: .ProjectionElems ) , mutabilityNot , metadata ( noMetadataSize , 0 , noMetadataSize ) ) , ty ( 30 ) , mutabilityNot ) )
    ListItem ( newLocal ( ty ( 37 ) , mutabilityMut ) ) ) )
    ListItem ( StackFrame ( ty ( -1 ) , place (... local: local ( -1 ) , projection: .ProjectionElems ) , noBasicBlockIdx , unwindActionUnreachable , .List ) )
  </stack>
</kmir>