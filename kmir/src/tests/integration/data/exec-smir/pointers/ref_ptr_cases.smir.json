{
  "name": "ref_ptr_cases",
  "crate_id": 8185710225710415700,
  "allocs": [
    {
      "alloc_id": 5,
      "ty": 9,
      "global_alloc": {
        "Memory": {
          "bytes": [
            1
          ],
          "provenance": {
            "ptrs": []
          },
          "align": 1,
          "mutability": "Not"
        }
      }
    },
    {
      "alloc_id": 6,
      "ty": 66,
      "global_alloc": {
        "Memory": {
          "bytes": [
            97,
            115,
            115,
            101,
            114,
            116,
            105,
            111,
            110,
            32,
            102,
            97,
            105,
            108,
            101,
            100,
            58,
            32,
            40,
            102,
            105,
            114,
            115,
            116,
            32,
            97,
            115,
            32,
            42,
            99,
            111,
            110,
            115,
            116,
            32,
            117,
            56,
            41,
            32,
            61,
            61,
            32,
            40,
            102,
            105,
            114,
            115,
            116,
            95,
            97,
            103,
            97,
            105,
            110,
            32,
            97,
            115,
            32,
            42,
            99,
            111,
            110,
            115,
            116,
            32,
            117,
            56,
            41
          ],
          "provenance": {
            "ptrs": []
          },
          "align": 1,
          "mutability": "Not"
        }
      }
    },
    {
      "alloc_id": 7,
      "ty": 66,
      "global_alloc": {
        "Memory": {
          "bytes": [
            97,
            115,
            115,
            101,
            114,
            116,
            105,
            111,
            110,
            32,
            102,
            97,
            105,
            108,
            101,
            100,
            58,
            32,
            40,
            102,
            105,
            114,
            115,
            116,
            32,
            97,
            115,
            32,
            42,
            99,
            111,
            110,
            115,
            116,
            32,
            117,
            56,
            41,
            32,
            33,
            61,
            32,
            40,
            115,
            101,
            99,
            111,
            110,
            100,
            32,
            97,
            115,
            32,
            42,
            99,
            111,
            110,
            115,
            116,
            32,
            117,
            56,
            41
          ],
          "provenance": {
            "ptrs": []
          },
          "align": 1,
          "mutability": "Not"
        }
      }
    },
    {
      "alloc_id": 8,
      "ty": 66,
      "global_alloc": {
        "Memory": {
          "bytes": [
            97,
            115,
            115,
            101,
            114,
            116,
            105,
            111,
            110,
            32,
            102,
            97,
            105,
            108,
            101,
            100,
            58,
            32,
            40,
            38,
            108,
            101,
            102,
            116,
            32,
            97,
            115,
            32,
            42,
            99,
            111,
            110,
            115,
            116,
            32,
            105,
            51,
            50,
            41,
            32,
            33,
            61,
            32,
            40,
            38,
            114,
            105,
            103,
            104,
            116,
            32,
            97,
            115,
            32,
            42,
            99,
            111,
            110,
            115,
            116,
            32,
            105,
            51,
            50,
            41
          ],
          "provenance": {
            "ptrs": []
          },
          "align": 1,
          "mutability": "Not"
        }
      }
    },
    {
      "alloc_id": 9,
      "ty": 66,
      "global_alloc": {
        "Memory": {
          "bytes": [
            97,
            115,
            115,
            101,
            114,
            116,
            105,
            111,
            110,
            32,
            102,
            97,
            105,
            108,
            101,
            100,
            58,
            32,
            40,
            102,
            105,
            114,
            115,
            116,
            32,
            97,
            115,
            32,
            42,
            99,
            111,
            110,
            115,
            116,
            32,
            105,
            51,
            50,
            41,
            32,
            61,
            61,
            32,
            40,
            115,
            101,
            99,
            111,
            110,
            100,
            32,
            97,
            115,
            32,
            42,
            99,
            111,
            110,
            115,
            116,
            32,
            105,
            51,
            50,
            41
          ],
          "provenance": {
            "ptrs": []
          },
          "align": 1,
          "mutability": "Not"
        }
      }
    },
    {
      "alloc_id": 10,
      "ty": 66,
      "global_alloc": {
        "Memory": {
          "bytes": [
            97,
            115,
            115,
            101,
            114,
            116,
            105,
            111,
            110,
            32,
            102,
            97,
            105,
            108,
            101,
            100,
            58,
            32,
            115,
            116,
            100,
            58,
            58,
            112,
            116,
            114,
            58,
            58,
            101,
            113,
            40,
            102,
            105,
            114,
            115,
            116,
            44,
            32,
            115,
            101,
            99,
            111,
            110,
            100,
            41
          ],
          "provenance": {
            "ptrs": []
          },
          "align": 1,
          "mutability": "Not"
        }
      }
    }
  ],
  "functions": [
    [
      0,
      {
        "NormalSym": "_ZN3std2rt19lang_start_internal17h035df9ff6960926aE"
      }
    ],
    [
      13,
      {
        "NormalSym": "_ZN3std3sys9backtrace28__rust_begin_short_backtrace17hfc8cafc25fefeb12E"
      }
    ],
    [
      14,
      {
        "NormalSym": "_ZN54_$LT$$LP$$RP$$u20$as$u20$std..process..Termination$GT$6report17had282705b957b33cE"
      }
    ],
    [
      19,
      {
        "NormalSym": "_ZN4core3ops8function6FnOnce9call_once17h85254df4cd1fb576E"
      }
    ],
    [
      20,
      {
        "IntrinsicSym": "black_box"
      }
    ],
    [
      21,
      {
        "NormalSym": "_ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17ha3306e8e1e53a968E"
      }
    ],
    [
      27,
      {
        "NormalSym": "_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u8$GT$3fmt17h27a5398f4d8ad9d3E"
      }
    ],
    [
      28,
      {
        "NormalSym": "_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u8$GT$3fmt17hd269a011e3ca7289E"
      }
    ],
    [
      29,
      {
        "NormalSym": "_ZN4core3fmt3num3imp51_$LT$impl$u20$core..fmt..Display$u20$for$u20$u8$GT$3fmt17hcb5a8318d6a04224E"
      }
    ],
    [
      30,
      {
        "NormalSym": "_ZN4core3ops8function6FnOnce9call_once17he8fe03d255691dc2E"
      }
    ],
    [
      32,
      {
        "NormalSym": "_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17hfe8dce45502f90a7E"
      }
    ],
    [
      37,
      {
        "NormalSym": "_ZN4core9panicking19assert_failed_inner17h45dfcec0d802af65E"
      }
    ],
    [
      42,
      {
        "NormalSym": "_ZN4core3ptr2eq17h154d4c4bce83ea1bE"
      }
    ],
    [
      43,
      {
        "NormalSym": "_ZN4core9panicking5panic17h37379bf3ce79a0d7E"
      }
    ],
    [
      49,
      {
        "NormalSym": "_ZN4core9panicking13assert_failed17hafa354f25af5d562E"
      }
    ],
    [
      54,
      {
        "NormalSym": "_ZN13ref_ptr_cases31aliasing_refs_have_same_pointer17h9a131cf8415ef3c8E"
      }
    ],
    [
      55,
      {
        "NormalSym": "_ZN13ref_ptr_cases38distinct_locals_have_distinct_pointers17hbe43eca449c206e8E"
      }
    ],
    [
      56,
      {
        "NormalSym": "_ZN13ref_ptr_cases36array_element_addresses_are_distinct17ha376481d731867e8E"
      }
    ],
    [
      57,
      {
        "NormalSym": "_ZN13ref_ptr_cases30reborrow_mut_pointer_roundtrip17hb30aae0aded8725eE"
      }
    ],
    [
      68,
      {
        "NoOpSym": ""
      }
    ]
  ],
  "uneval_consts": [],
  "items": [
    {
      "symbol_name": "_ZN13ref_ptr_cases30reborrow_mut_pointer_roundtrip17hb30aae0aded8725eE",
      "mono_item_kind": {
        "MonoItemFn": {
          "name": "reborrow_mut_pointer_roundtrip",
          "id": 13,
          "body": {
            "blocks": [
              {
                "statements": [
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 1,
                          "projection": []
                        },
                        {
                          "Use": {
                            "Constant": {
                              "span": 162,
                              "user_ty": null,
                              "const_": {
                                "kind": {
                                  "Allocated": {
                                    "bytes": [
                                      0
                                    ],
                                    "provenance": {
                                      "ptrs": []
                                    },
                                    "align": 1,
                                    "mutability": "Mut"
                                  }
                                },
                                "ty": 9,
                                "id": 31
                              }
                            }
                          }
                        }
                      ]
                    },
                    "span": 162
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 3,
                          "projection": []
                        },
                        {
                          "Ref": [
                            {
                              "kind": "ReErased"
                            },
                            {
                              "Mut": {
                                "kind": "Default"
                              }
                            },
                            {
                              "local": 1,
                              "projection": []
                            }
                          ]
                        }
                      ]
                    },
                    "span": 163
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 2,
                          "projection": []
                        },
                        {
                          "AddressOf": [
                            "Mut",
                            {
                              "local": 3,
                              "projection": [
                                "Deref"
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "span": 163
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 2,
                          "projection": [
                            "Deref"
                          ]
                        },
                        {
                          "Use": {
                            "Constant": {
                              "span": 164,
                              "user_ty": null,
                              "const_": {
                                "kind": {
                                  "Allocated": {
                                    "bytes": [
                                      1
                                    ],
                                    "provenance": {
                                      "ptrs": []
                                    },
                                    "align": 1,
                                    "mutability": "Mut"
                                  }
                                },
                                "ty": 9,
                                "id": 32
                              }
                            }
                          }
                        }
                      ]
                    },
                    "span": 165
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 5,
                          "projection": []
                        },
                        {
                          "Ref": [
                            {
                              "kind": "ReErased"
                            },
                            "Shared",
                            {
                              "local": 1,
                              "projection": []
                            }
                          ]
                        }
                      ]
                    },
                    "span": 166
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 6,
                          "projection": []
                        },
                        {
                          "Use": {
                            "Constant": {
                              "span": 167,
                              "user_ty": null,
                              "const_": {
                                "kind": {
                                  "Allocated": {
                                    "bytes": [
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0
                                    ],
                                    "provenance": {
                                      "ptrs": [
                                        [
                                          0,
                                          5
                                        ]
                                      ]
                                    },
                                    "align": 8,
                                    "mutability": "Mut"
                                  }
                                },
                                "ty": 25,
                                "id": 33
                              }
                            }
                          }
                        }
                      ]
                    },
                    "span": 167
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 4,
                          "projection": []
                        },
                        {
                          "Aggregate": [
                            "Tuple",
                            [
                              {
                                "Move": {
                                  "local": 5,
                                  "projection": []
                                }
                              },
                              {
                                "Move": {
                                  "local": 6,
                                  "projection": []
                                }
                              }
                            ]
                          ]
                        }
                      ]
                    },
                    "span": 168
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 7,
                          "projection": []
                        },
                        {
                          "Use": {
                            "Copy": {
                              "local": 4,
                              "projection": [
                                {
                                  "Field": [
                                    0,
                                    25
                                  ]
                                }
                              ]
                            }
                          }
                        }
                      ]
                    },
                    "span": 169
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 8,
                          "projection": []
                        },
                        {
                          "Use": {
                            "Copy": {
                              "local": 4,
                              "projection": [
                                {
                                  "Field": [
                                    1,
                                    25
                                  ]
                                }
                              ]
                            }
                          }
                        }
                      ]
                    },
                    "span": 170
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 10,
                          "projection": []
                        },
                        {
                          "Use": {
                            "Copy": {
                              "local": 7,
                              "projection": [
                                "Deref"
                              ]
                            }
                          }
                        }
                      ]
                    },
                    "span": 171
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 11,
                          "projection": []
                        },
                        {
                          "Use": {
                            "Copy": {
                              "local": 8,
                              "projection": [
                                "Deref"
                              ]
                            }
                          }
                        }
                      ]
                    },
                    "span": 172
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 9,
                          "projection": []
                        },
                        {
                          "BinaryOp": [
                            "Eq",
                            {
                              "Move": {
                                "local": 10,
                                "projection": []
                              }
                            },
                            {
                              "Move": {
                                "local": 11,
                                "projection": []
                              }
                            }
                          ]
                        }
                      ]
                    },
                    "span": 161
                  }
                ],
                "terminator": {
                  "kind": {
                    "SwitchInt": {
                      "discr": {
                        "Move": {
                          "local": 9,
                          "projection": []
                        }
                      },
                      "targets": {
                        "branches": [
                          [
                            0,
                            2
                          ]
                        ],
                        "otherwise": 1
                      }
                    }
                  },
                  "span": 161
                }
              },
              {
                "statements": [],
                "terminator": {
                  "kind": "Return",
                  "span": 173
                }
              },
              {
                "statements": [
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 12,
                          "projection": []
                        },
                        {
                          "Aggregate": [
                            {
                              "Adt": [
                                14,
                                0,
                                [],
                                null,
                                null
                              ]
                            },
                            []
                          ]
                        }
                      ]
                    },
                    "span": 176
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 14,
                          "projection": []
                        },
                        {
                          "Aggregate": [
                            {
                              "Adt": [
                                15,
                                0,
                                [
                                  {
                                    "Type": 50
                                  }
                                ],
                                null,
                                null
                              ]
                            },
                            []
                          ]
                        }
                      ]
                    },
                    "span": 177
                  }
                ],
                "terminator": {
                  "kind": {
                    "Call": {
                      "func": {
                        "Constant": {
                          "span": 174,
                          "user_ty": null,
                          "const_": {
                            "kind": "ZeroSized",
                            "ty": 49,
                            "id": 34
                          }
                        }
                      },
                      "args": [
                        {
                          "Move": {
                            "local": 12,
                            "projection": []
                          }
                        },
                        {
                          "Copy": {
                            "local": 7,
                            "projection": []
                          }
                        },
                        {
                          "Copy": {
                            "local": 8,
                            "projection": []
                          }
                        },
                        {
                          "Move": {
                            "local": 14,
                            "projection": []
                          }
                        }
                      ],
                      "destination": {
                        "local": 13,
                        "projection": []
                      },
                      "target": null,
                      "unwind": "Continue"
                    }
                  },
                  "span": 175
                }
              }
            ],
            "locals": [
              {
                "ty": 1,
                "span": 178,
                "mutability": "Mut"
              },
              {
                "ty": 9,
                "span": 179,
                "mutability": "Mut"
              },
              {
                "ty": 51,
                "span": 180,
                "mutability": "Not"
              },
              {
                "ty": 52,
                "span": 163,
                "mutability": "Mut"
              },
              {
                "ty": 53,
                "span": 168,
                "mutability": "Mut"
              },
              {
                "ty": 25,
                "span": 166,
                "mutability": "Mut"
              },
              {
                "ty": 25,
                "span": 167,
                "mutability": "Mut"
              },
              {
                "ty": 25,
                "span": 169,
                "mutability": "Not"
              },
              {
                "ty": 25,
                "span": 170,
                "mutability": "Not"
              },
              {
                "ty": 35,
                "span": 161,
                "mutability": "Mut"
              },
              {
                "ty": 9,
                "span": 171,
                "mutability": "Mut"
              },
              {
                "ty": 9,
                "span": 172,
                "mutability": "Mut"
              },
              {
                "ty": 40,
                "span": 181,
                "mutability": "Not"
              },
              {
                "ty": 39,
                "span": 175,
                "mutability": "Not"
              },
              {
                "ty": 41,
                "span": 177,
                "mutability": "Mut"
              }
            ],
            "arg_count": 0,
            "var_debug_info": [
              {
                "name": "byte",
                "source_info": {
                  "span": 179,
                  "scope": 1
                },
                "composite": null,
                "value": {
                  "Place": {
                    "local": 1,
                    "projection": []
                  }
                },
                "argument_index": null
              },
              {
                "name": "ptr",
                "source_info": {
                  "span": 180,
                  "scope": 2
                },
                "composite": null,
                "value": {
                  "Place": {
                    "local": 2,
                    "projection": []
                  }
                },
                "argument_index": null
              },
              {
                "name": "left_val",
                "source_info": {
                  "span": 169,
                  "scope": 3
                },
                "composite": null,
                "value": {
                  "Place": {
                    "local": 7,
                    "projection": []
                  }
                },
                "argument_index": null
              },
              {
                "name": "right_val",
                "source_info": {
                  "span": 170,
                  "scope": 3
                },
                "composite": null,
                "value": {
                  "Place": {
                    "local": 8,
                    "projection": []
                  }
                },
                "argument_index": null
              },
              {
                "name": "kind",
                "source_info": {
                  "span": 181,
                  "scope": 4
                },
                "composite": null,
                "value": {
                  "Place": {
                    "local": 12,
                    "projection": []
                  }
                },
                "argument_index": null
              }
            ],
            "spread_arg": null,
            "span": 182
          }
        }
      },
      "details": null
    },
    {
      "symbol_name": "_ZN13ref_ptr_cases31aliasing_refs_have_same_pointer17h9a131cf8415ef3c8E",
      "mono_item_kind": {
        "MonoItemFn": {
          "name": "aliasing_refs_have_same_pointer",
          "id": 10,
          "body": {
            "blocks": [
              {
                "statements": [
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 1,
                          "projection": []
                        },
                        {
                          "Use": {
                            "Constant": {
                              "span": 97,
                              "user_ty": null,
                              "const_": {
                                "kind": {
                                  "Allocated": {
                                    "bytes": [
                                      42,
                                      0,
                                      0,
                                      0
                                    ],
                                    "provenance": {
                                      "ptrs": []
                                    },
                                    "align": 4,
                                    "mutability": "Mut"
                                  }
                                },
                                "ty": 16,
                                "id": 16
                              }
                            }
                          }
                        }
                      ]
                    },
                    "span": 97
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 2,
                          "projection": []
                        },
                        {
                          "Ref": [
                            {
                              "kind": "ReErased"
                            },
                            "Shared",
                            {
                              "local": 1,
                              "projection": []
                            }
                          ]
                        }
                      ]
                    },
                    "span": 98
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 3,
                          "projection": []
                        },
                        {
                          "Ref": [
                            {
                              "kind": "ReErased"
                            },
                            "Shared",
                            {
                              "local": 1,
                              "projection": []
                            }
                          ]
                        }
                      ]
                    },
                    "span": 99
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 5,
                          "projection": []
                        },
                        {
                          "AddressOf": [
                            "Not",
                            {
                              "local": 2,
                              "projection": [
                                "Deref"
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "span": 100
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 6,
                          "projection": []
                        },
                        {
                          "AddressOf": [
                            "Not",
                            {
                              "local": 3,
                              "projection": [
                                "Deref"
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "span": 101
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 4,
                          "projection": []
                        },
                        {
                          "BinaryOp": [
                            "Eq",
                            {
                              "Move": {
                                "local": 5,
                                "projection": []
                              }
                            },
                            {
                              "Move": {
                                "local": 6,
                                "projection": []
                              }
                            }
                          ]
                        }
                      ]
                    },
                    "span": 96
                  }
                ],
                "terminator": {
                  "kind": {
                    "SwitchInt": {
                      "discr": {
                        "Move": {
                          "local": 4,
                          "projection": []
                        }
                      },
                      "targets": {
                        "branches": [
                          [
                            0,
                            2
                          ]
                        ],
                        "otherwise": 1
                      }
                    }
                  },
                  "span": 96
                }
              },
              {
                "statements": [
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 9,
                          "projection": []
                        },
                        {
                          "AddressOf": [
                            "Not",
                            {
                              "local": 2,
                              "projection": [
                                "Deref"
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "span": 104
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 10,
                          "projection": []
                        },
                        {
                          "AddressOf": [
                            "Not",
                            {
                              "local": 3,
                              "projection": [
                                "Deref"
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "span": 105
                  }
                ],
                "terminator": {
                  "kind": {
                    "Call": {
                      "func": {
                        "Constant": {
                          "span": 102,
                          "user_ty": null,
                          "const_": {
                            "kind": "ZeroSized",
                            "ty": 42,
                            "id": 17
                          }
                        }
                      },
                      "args": [
                        {
                          "Move": {
                            "local": 9,
                            "projection": []
                          }
                        },
                        {
                          "Move": {
                            "local": 10,
                            "projection": []
                          }
                        }
                      ],
                      "destination": {
                        "local": 8,
                        "projection": []
                      },
                      "target": 3,
                      "unwind": "Continue"
                    }
                  },
                  "span": 103
                }
              },
              {
                "statements": [],
                "terminator": {
                  "kind": {
                    "Call": {
                      "func": {
                        "Constant": {
                          "span": 106,
                          "user_ty": null,
                          "const_": {
                            "kind": "ZeroSized",
                            "ty": 43,
                            "id": 18
                          }
                        }
                      },
                      "args": [
                        {
                          "Constant": {
                            "span": 32,
                            "user_ty": null,
                            "const_": {
                              "kind": {
                                "Allocated": {
                                  "bytes": [
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    65,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0
                                  ],
                                  "provenance": {
                                    "ptrs": [
                                      [
                                        0,
                                        0
                                      ]
                                    ]
                                  },
                                  "align": 8,
                                  "mutability": "Mut"
                                }
                              },
                              "ty": 44,
                              "id": 19
                            }
                          }
                        }
                      ],
                      "destination": {
                        "local": 7,
                        "projection": []
                      },
                      "target": null,
                      "unwind": "Continue"
                    }
                  },
                  "span": 106
                }
              },
              {
                "statements": [],
                "terminator": {
                  "kind": {
                    "SwitchInt": {
                      "discr": {
                        "Move": {
                          "local": 8,
                          "projection": []
                        }
                      },
                      "targets": {
                        "branches": [
                          [
                            0,
                            5
                          ]
                        ],
                        "otherwise": 4
                      }
                    }
                  },
                  "span": 103
                }
              },
              {
                "statements": [],
                "terminator": {
                  "kind": "Return",
                  "span": 107
                }
              },
              {
                "statements": [],
                "terminator": {
                  "kind": {
                    "Call": {
                      "func": {
                        "Constant": {
                          "span": 108,
                          "user_ty": null,
                          "const_": {
                            "kind": "ZeroSized",
                            "ty": 43,
                            "id": 18
                          }
                        }
                      },
                      "args": [
                        {
                          "Constant": {
                            "span": 32,
                            "user_ty": null,
                            "const_": {
                              "kind": {
                                "Allocated": {
                                  "bytes": [
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    45,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0
                                  ],
                                  "provenance": {
                                    "ptrs": [
                                      [
                                        0,
                                        1
                                      ]
                                    ]
                                  },
                                  "align": 8,
                                  "mutability": "Mut"
                                }
                              },
                              "ty": 44,
                              "id": 20
                            }
                          }
                        }
                      ],
                      "destination": {
                        "local": 11,
                        "projection": []
                      },
                      "target": null,
                      "unwind": "Continue"
                    }
                  },
                  "span": 108
                }
              }
            ],
            "locals": [
              {
                "ty": 1,
                "span": 109,
                "mutability": "Mut"
              },
              {
                "ty": 16,
                "span": 110,
                "mutability": "Not"
              },
              {
                "ty": 45,
                "span": 111,
                "mutability": "Not"
              },
              {
                "ty": 45,
                "span": 112,
                "mutability": "Not"
              },
              {
                "ty": 35,
                "span": 96,
                "mutability": "Mut"
              },
              {
                "ty": 36,
                "span": 113,
                "mutability": "Mut"
              },
              {
                "ty": 36,
                "span": 114,
                "mutability": "Mut"
              },
              {
                "ty": 39,
                "span": 106,
                "mutability": "Mut"
              },
              {
                "ty": 35,
                "span": 103,
                "mutability": "Mut"
              },
              {
                "ty": 36,
                "span": 104,
                "mutability": "Mut"
              },
              {
                "ty": 36,
                "span": 105,
                "mutability": "Mut"
              },
              {
                "ty": 39,
                "span": 108,
                "mutability": "Mut"
              }
            ],
            "arg_count": 0,
            "var_debug_info": [
              {
                "name": "value",
                "source_info": {
                  "span": 110,
                  "scope": 1
                },
                "composite": null,
                "value": {
                  "Place": {
                    "local": 1,
                    "projection": []
                  }
                },
                "argument_index": null
              },
              {
                "name": "first",
                "source_info": {
                  "span": 111,
                  "scope": 2
                },
                "composite": null,
                "value": {
                  "Place": {
                    "local": 2,
                    "projection": []
                  }
                },
                "argument_index": null
              },
              {
                "name": "second",
                "source_info": {
                  "span": 112,
                  "scope": 3
                },
                "composite": null,
                "value": {
                  "Place": {
                    "local": 3,
                    "projection": []
                  }
                },
                "argument_index": null
              }
            ],
            "spread_arg": null,
            "span": 115
          }
        }
      },
      "details": null
    },
    {
      "symbol_name": "_ZN13ref_ptr_cases36array_element_addresses_are_distinct17ha376481d731867e8E",
      "mono_item_kind": {
        "MonoItemFn": {
          "name": "array_element_addresses_are_distinct",
          "id": 12,
          "body": {
            "blocks": [
              {
                "statements": [
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 1,
                          "projection": []
                        },
                        {
                          "Aggregate": [
                            {
                              "Array": 9
                            },
                            [
                              {
                                "Constant": {
                                  "span": 130,
                                  "user_ty": null,
                                  "const_": {
                                    "kind": {
                                      "Allocated": {
                                        "bytes": [
                                          3
                                        ],
                                        "provenance": {
                                          "ptrs": []
                                        },
                                        "align": 1,
                                        "mutability": "Mut"
                                      }
                                    },
                                    "ty": 9,
                                    "id": 23
                                  }
                                }
                              },
                              {
                                "Constant": {
                                  "span": 131,
                                  "user_ty": null,
                                  "const_": {
                                    "kind": {
                                      "Allocated": {
                                        "bytes": [
                                          5
                                        ],
                                        "provenance": {
                                          "ptrs": []
                                        },
                                        "align": 1,
                                        "mutability": "Mut"
                                      }
                                    },
                                    "ty": 9,
                                    "id": 24
                                  }
                                }
                              },
                              {
                                "Constant": {
                                  "span": 132,
                                  "user_ty": null,
                                  "const_": {
                                    "kind": {
                                      "Allocated": {
                                        "bytes": [
                                          7
                                        ],
                                        "provenance": {
                                          "ptrs": []
                                        },
                                        "align": 1,
                                        "mutability": "Mut"
                                      }
                                    },
                                    "ty": 9,
                                    "id": 25
                                  }
                                }
                              }
                            ]
                          ]
                        }
                      ]
                    },
                    "span": 133
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 3,
                          "projection": []
                        },
                        {
                          "Use": {
                            "Constant": {
                              "span": 134,
                              "user_ty": null,
                              "const_": {
                                "kind": {
                                  "Allocated": {
                                    "bytes": [
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0
                                    ],
                                    "provenance": {
                                      "ptrs": []
                                    },
                                    "align": 8,
                                    "mutability": "Mut"
                                  }
                                },
                                "ty": 46,
                                "id": 26
                              }
                            }
                          }
                        }
                      ]
                    },
                    "span": 134
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 4,
                          "projection": []
                        },
                        {
                          "Use": {
                            "Constant": {
                              "span": 32,
                              "user_ty": null,
                              "const_": {
                                "kind": {
                                  "Allocated": {
                                    "bytes": [
                                      3,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0
                                    ],
                                    "provenance": {
                                      "ptrs": []
                                    },
                                    "align": 8,
                                    "mutability": "Mut"
                                  }
                                },
                                "ty": 46,
                                "id": 27
                              }
                            }
                          }
                        }
                      ]
                    },
                    "span": 129
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 5,
                          "projection": []
                        },
                        {
                          "BinaryOp": [
                            "Lt",
                            {
                              "Copy": {
                                "local": 3,
                                "projection": []
                              }
                            },
                            {
                              "Copy": {
                                "local": 4,
                                "projection": []
                              }
                            }
                          ]
                        }
                      ]
                    },
                    "span": 129
                  }
                ],
                "terminator": {
                  "kind": {
                    "Assert": {
                      "cond": {
                        "Move": {
                          "local": 5,
                          "projection": []
                        }
                      },
                      "expected": true,
                      "msg": {
                        "BoundsCheck": {
                          "len": {
                            "Move": {
                              "local": 4,
                              "projection": []
                            }
                          },
                          "index": {
                            "Copy": {
                              "local": 3,
                              "projection": []
                            }
                          }
                        }
                      },
                      "target": 1,
                      "unwind": "Continue"
                    }
                  },
                  "span": 129
                }
              },
              {
                "statements": [
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 2,
                          "projection": []
                        },
                        {
                          "Ref": [
                            {
                              "kind": "ReErased"
                            },
                            "Shared",
                            {
                              "local": 1,
                              "projection": [
                                {
                                  "Index": 3
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "span": 136
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 7,
                          "projection": []
                        },
                        {
                          "Use": {
                            "Constant": {
                              "span": 137,
                              "user_ty": null,
                              "const_": {
                                "kind": {
                                  "Allocated": {
                                    "bytes": [
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0
                                    ],
                                    "provenance": {
                                      "ptrs": []
                                    },
                                    "align": 8,
                                    "mutability": "Mut"
                                  }
                                },
                                "ty": 46,
                                "id": 26
                              }
                            }
                          }
                        }
                      ]
                    },
                    "span": 137
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 8,
                          "projection": []
                        },
                        {
                          "Use": {
                            "Constant": {
                              "span": 32,
                              "user_ty": null,
                              "const_": {
                                "kind": {
                                  "Allocated": {
                                    "bytes": [
                                      3,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0
                                    ],
                                    "provenance": {
                                      "ptrs": []
                                    },
                                    "align": 8,
                                    "mutability": "Mut"
                                  }
                                },
                                "ty": 46,
                                "id": 27
                              }
                            }
                          }
                        }
                      ]
                    },
                    "span": 135
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 9,
                          "projection": []
                        },
                        {
                          "BinaryOp": [
                            "Lt",
                            {
                              "Copy": {
                                "local": 7,
                                "projection": []
                              }
                            },
                            {
                              "Copy": {
                                "local": 8,
                                "projection": []
                              }
                            }
                          ]
                        }
                      ]
                    },
                    "span": 135
                  }
                ],
                "terminator": {
                  "kind": {
                    "Assert": {
                      "cond": {
                        "Move": {
                          "local": 9,
                          "projection": []
                        }
                      },
                      "expected": true,
                      "msg": {
                        "BoundsCheck": {
                          "len": {
                            "Move": {
                              "local": 8,
                              "projection": []
                            }
                          },
                          "index": {
                            "Copy": {
                              "local": 7,
                              "projection": []
                            }
                          }
                        }
                      },
                      "target": 2,
                      "unwind": "Continue"
                    }
                  },
                  "span": 135
                }
              },
              {
                "statements": [
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 6,
                          "projection": []
                        },
                        {
                          "Ref": [
                            {
                              "kind": "ReErased"
                            },
                            "Shared",
                            {
                              "local": 1,
                              "projection": [
                                {
                                  "Index": 7
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "span": 139
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 11,
                          "projection": []
                        },
                        {
                          "Use": {
                            "Constant": {
                              "span": 140,
                              "user_ty": null,
                              "const_": {
                                "kind": {
                                  "Allocated": {
                                    "bytes": [
                                      1,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0
                                    ],
                                    "provenance": {
                                      "ptrs": []
                                    },
                                    "align": 8,
                                    "mutability": "Mut"
                                  }
                                },
                                "ty": 46,
                                "id": 28
                              }
                            }
                          }
                        }
                      ]
                    },
                    "span": 140
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 12,
                          "projection": []
                        },
                        {
                          "Use": {
                            "Constant": {
                              "span": 32,
                              "user_ty": null,
                              "const_": {
                                "kind": {
                                  "Allocated": {
                                    "bytes": [
                                      3,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0
                                    ],
                                    "provenance": {
                                      "ptrs": []
                                    },
                                    "align": 8,
                                    "mutability": "Mut"
                                  }
                                },
                                "ty": 46,
                                "id": 27
                              }
                            }
                          }
                        }
                      ]
                    },
                    "span": 138
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 13,
                          "projection": []
                        },
                        {
                          "BinaryOp": [
                            "Lt",
                            {
                              "Copy": {
                                "local": 11,
                                "projection": []
                              }
                            },
                            {
                              "Copy": {
                                "local": 12,
                                "projection": []
                              }
                            }
                          ]
                        }
                      ]
                    },
                    "span": 138
                  }
                ],
                "terminator": {
                  "kind": {
                    "Assert": {
                      "cond": {
                        "Move": {
                          "local": 13,
                          "projection": []
                        }
                      },
                      "expected": true,
                      "msg": {
                        "BoundsCheck": {
                          "len": {
                            "Move": {
                              "local": 12,
                              "projection": []
                            }
                          },
                          "index": {
                            "Copy": {
                              "local": 11,
                              "projection": []
                            }
                          }
                        }
                      },
                      "target": 3,
                      "unwind": "Continue"
                    }
                  },
                  "span": 138
                }
              },
              {
                "statements": [
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 10,
                          "projection": []
                        },
                        {
                          "Ref": [
                            {
                              "kind": "ReErased"
                            },
                            "Shared",
                            {
                              "local": 1,
                              "projection": [
                                {
                                  "Index": 11
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "span": 142
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 15,
                          "projection": []
                        },
                        {
                          "AddressOf": [
                            "Not",
                            {
                              "local": 2,
                              "projection": [
                                "Deref"
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "span": 143
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 16,
                          "projection": []
                        },
                        {
                          "AddressOf": [
                            "Not",
                            {
                              "local": 6,
                              "projection": [
                                "Deref"
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "span": 144
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 14,
                          "projection": []
                        },
                        {
                          "BinaryOp": [
                            "Eq",
                            {
                              "Move": {
                                "local": 15,
                                "projection": []
                              }
                            },
                            {
                              "Move": {
                                "local": 16,
                                "projection": []
                              }
                            }
                          ]
                        }
                      ]
                    },
                    "span": 141
                  }
                ],
                "terminator": {
                  "kind": {
                    "SwitchInt": {
                      "discr": {
                        "Move": {
                          "local": 14,
                          "projection": []
                        }
                      },
                      "targets": {
                        "branches": [
                          [
                            0,
                            5
                          ]
                        ],
                        "otherwise": 4
                      }
                    }
                  },
                  "span": 141
                }
              },
              {
                "statements": [
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 19,
                          "projection": []
                        },
                        {
                          "AddressOf": [
                            "Not",
                            {
                              "local": 2,
                              "projection": [
                                "Deref"
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "span": 146
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 20,
                          "projection": []
                        },
                        {
                          "AddressOf": [
                            "Not",
                            {
                              "local": 10,
                              "projection": [
                                "Deref"
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "span": 147
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 18,
                          "projection": []
                        },
                        {
                          "BinaryOp": [
                            "Ne",
                            {
                              "Move": {
                                "local": 19,
                                "projection": []
                              }
                            },
                            {
                              "Move": {
                                "local": 20,
                                "projection": []
                              }
                            }
                          ]
                        }
                      ]
                    },
                    "span": 145
                  }
                ],
                "terminator": {
                  "kind": {
                    "SwitchInt": {
                      "discr": {
                        "Move": {
                          "local": 18,
                          "projection": []
                        }
                      },
                      "targets": {
                        "branches": [
                          [
                            0,
                            7
                          ]
                        ],
                        "otherwise": 6
                      }
                    }
                  },
                  "span": 145
                }
              },
              {
                "statements": [],
                "terminator": {
                  "kind": {
                    "Call": {
                      "func": {
                        "Constant": {
                          "span": 148,
                          "user_ty": null,
                          "const_": {
                            "kind": "ZeroSized",
                            "ty": 43,
                            "id": 18
                          }
                        }
                      },
                      "args": [
                        {
                          "Constant": {
                            "span": 32,
                            "user_ty": null,
                            "const_": {
                              "kind": {
                                "Allocated": {
                                  "bytes": [
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    68,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0
                                  ],
                                  "provenance": {
                                    "ptrs": [
                                      [
                                        0,
                                        3
                                      ]
                                    ]
                                  },
                                  "align": 8,
                                  "mutability": "Mut"
                                }
                              },
                              "ty": 44,
                              "id": 29
                            }
                          }
                        }
                      ],
                      "destination": {
                        "local": 17,
                        "projection": []
                      },
                      "target": null,
                      "unwind": "Continue"
                    }
                  },
                  "span": 148
                }
              },
              {
                "statements": [],
                "terminator": {
                  "kind": "Return",
                  "span": 149
                }
              },
              {
                "statements": [],
                "terminator": {
                  "kind": {
                    "Call": {
                      "func": {
                        "Constant": {
                          "span": 150,
                          "user_ty": null,
                          "const_": {
                            "kind": "ZeroSized",
                            "ty": 43,
                            "id": 18
                          }
                        }
                      },
                      "args": [
                        {
                          "Constant": {
                            "span": 32,
                            "user_ty": null,
                            "const_": {
                              "kind": {
                                "Allocated": {
                                  "bytes": [
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    63,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0
                                  ],
                                  "provenance": {
                                    "ptrs": [
                                      [
                                        0,
                                        4
                                      ]
                                    ]
                                  },
                                  "align": 8,
                                  "mutability": "Mut"
                                }
                              },
                              "ty": 44,
                              "id": 30
                            }
                          }
                        }
                      ],
                      "destination": {
                        "local": 21,
                        "projection": []
                      },
                      "target": null,
                      "unwind": "Continue"
                    }
                  },
                  "span": 150
                }
              }
            ],
            "locals": [
              {
                "ty": 1,
                "span": 151,
                "mutability": "Mut"
              },
              {
                "ty": 47,
                "span": 152,
                "mutability": "Not"
              },
              {
                "ty": 25,
                "span": 153,
                "mutability": "Not"
              },
              {
                "ty": 46,
                "span": 134,
                "mutability": "Not"
              },
              {
                "ty": 46,
                "span": 129,
                "mutability": "Mut"
              },
              {
                "ty": 35,
                "span": 129,
                "mutability": "Mut"
              },
              {
                "ty": 25,
                "span": 154,
                "mutability": "Not"
              },
              {
                "ty": 46,
                "span": 137,
                "mutability": "Not"
              },
              {
                "ty": 46,
                "span": 135,
                "mutability": "Mut"
              },
              {
                "ty": 35,
                "span": 135,
                "mutability": "Mut"
              },
              {
                "ty": 25,
                "span": 155,
                "mutability": "Not"
              },
              {
                "ty": 46,
                "span": 140,
                "mutability": "Not"
              },
              {
                "ty": 46,
                "span": 138,
                "mutability": "Mut"
              },
              {
                "ty": 35,
                "span": 138,
                "mutability": "Mut"
              },
              {
                "ty": 35,
                "span": 141,
                "mutability": "Mut"
              },
              {
                "ty": 48,
                "span": 156,
                "mutability": "Mut"
              },
              {
                "ty": 48,
                "span": 157,
                "mutability": "Mut"
              },
              {
                "ty": 39,
                "span": 148,
                "mutability": "Mut"
              },
              {
                "ty": 35,
                "span": 145,
                "mutability": "Mut"
              },
              {
                "ty": 48,
                "span": 158,
                "mutability": "Mut"
              },
              {
                "ty": 48,
                "span": 159,
                "mutability": "Mut"
              },
              {
                "ty": 39,
                "span": 150,
                "mutability": "Mut"
              }
            ],
            "arg_count": 0,
            "var_debug_info": [
              {
                "name": "items",
                "source_info": {
                  "span": 152,
                  "scope": 1
                },
                "composite": null,
                "value": {
                  "Place": {
                    "local": 1,
                    "projection": []
                  }
                },
                "argument_index": null
              },
              {
                "name": "first",
                "source_info": {
                  "span": 153,
                  "scope": 2
                },
                "composite": null,
                "value": {
                  "Place": {
                    "local": 2,
                    "projection": []
                  }
                },
                "argument_index": null
              },
              {
                "name": "first_again",
                "source_info": {
                  "span": 154,
                  "scope": 3
                },
                "composite": null,
                "value": {
                  "Place": {
                    "local": 6,
                    "projection": []
                  }
                },
                "argument_index": null
              },
              {
                "name": "second",
                "source_info": {
                  "span": 155,
                  "scope": 4
                },
                "composite": null,
                "value": {
                  "Place": {
                    "local": 10,
                    "projection": []
                  }
                },
                "argument_index": null
              }
            ],
            "spread_arg": null,
            "span": 160
          }
        }
      },
      "details": null
    },
    {
      "symbol_name": "_ZN13ref_ptr_cases38distinct_locals_have_distinct_pointers17hbe43eca449c206e8E",
      "mono_item_kind": {
        "MonoItemFn": {
          "name": "distinct_locals_have_distinct_pointers",
          "id": 11,
          "body": {
            "blocks": [
              {
                "statements": [
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 1,
                          "projection": []
                        },
                        {
                          "Use": {
                            "Constant": {
                              "span": 117,
                              "user_ty": null,
                              "const_": {
                                "kind": {
                                  "Allocated": {
                                    "bytes": [
                                      10,
                                      0,
                                      0,
                                      0
                                    ],
                                    "provenance": {
                                      "ptrs": []
                                    },
                                    "align": 4,
                                    "mutability": "Mut"
                                  }
                                },
                                "ty": 16,
                                "id": 21
                              }
                            }
                          }
                        }
                      ]
                    },
                    "span": 117
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 2,
                          "projection": []
                        },
                        {
                          "Use": {
                            "Constant": {
                              "span": 118,
                              "user_ty": null,
                              "const_": {
                                "kind": {
                                  "Allocated": {
                                    "bytes": [
                                      10,
                                      0,
                                      0,
                                      0
                                    ],
                                    "provenance": {
                                      "ptrs": []
                                    },
                                    "align": 4,
                                    "mutability": "Mut"
                                  }
                                },
                                "ty": 16,
                                "id": 21
                              }
                            }
                          }
                        }
                      ]
                    },
                    "span": 118
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 5,
                          "projection": []
                        },
                        {
                          "Ref": [
                            {
                              "kind": "ReErased"
                            },
                            "Shared",
                            {
                              "local": 1,
                              "projection": []
                            }
                          ]
                        }
                      ]
                    },
                    "span": 119
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 4,
                          "projection": []
                        },
                        {
                          "AddressOf": [
                            "Not",
                            {
                              "local": 5,
                              "projection": [
                                "Deref"
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "span": 119
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 7,
                          "projection": []
                        },
                        {
                          "Ref": [
                            {
                              "kind": "ReErased"
                            },
                            "Shared",
                            {
                              "local": 2,
                              "projection": []
                            }
                          ]
                        }
                      ]
                    },
                    "span": 120
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 6,
                          "projection": []
                        },
                        {
                          "AddressOf": [
                            "Not",
                            {
                              "local": 7,
                              "projection": [
                                "Deref"
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "span": 120
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 3,
                          "projection": []
                        },
                        {
                          "BinaryOp": [
                            "Ne",
                            {
                              "Move": {
                                "local": 4,
                                "projection": []
                              }
                            },
                            {
                              "Move": {
                                "local": 6,
                                "projection": []
                              }
                            }
                          ]
                        }
                      ]
                    },
                    "span": 116
                  }
                ],
                "terminator": {
                  "kind": {
                    "SwitchInt": {
                      "discr": {
                        "Move": {
                          "local": 3,
                          "projection": []
                        }
                      },
                      "targets": {
                        "branches": [
                          [
                            0,
                            2
                          ]
                        ],
                        "otherwise": 1
                      }
                    }
                  },
                  "span": 116
                }
              },
              {
                "statements": [],
                "terminator": {
                  "kind": "Return",
                  "span": 121
                }
              },
              {
                "statements": [],
                "terminator": {
                  "kind": {
                    "Call": {
                      "func": {
                        "Constant": {
                          "span": 122,
                          "user_ty": null,
                          "const_": {
                            "kind": "ZeroSized",
                            "ty": 43,
                            "id": 18
                          }
                        }
                      },
                      "args": [
                        {
                          "Constant": {
                            "span": 32,
                            "user_ty": null,
                            "const_": {
                              "kind": {
                                "Allocated": {
                                  "bytes": [
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    65,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0
                                  ],
                                  "provenance": {
                                    "ptrs": [
                                      [
                                        0,
                                        2
                                      ]
                                    ]
                                  },
                                  "align": 8,
                                  "mutability": "Mut"
                                }
                              },
                              "ty": 44,
                              "id": 22
                            }
                          }
                        }
                      ],
                      "destination": {
                        "local": 8,
                        "projection": []
                      },
                      "target": null,
                      "unwind": "Continue"
                    }
                  },
                  "span": 122
                }
              }
            ],
            "locals": [
              {
                "ty": 1,
                "span": 123,
                "mutability": "Mut"
              },
              {
                "ty": 16,
                "span": 124,
                "mutability": "Not"
              },
              {
                "ty": 16,
                "span": 125,
                "mutability": "Not"
              },
              {
                "ty": 35,
                "span": 116,
                "mutability": "Mut"
              },
              {
                "ty": 36,
                "span": 126,
                "mutability": "Mut"
              },
              {
                "ty": 45,
                "span": 119,
                "mutability": "Not"
              },
              {
                "ty": 36,
                "span": 127,
                "mutability": "Mut"
              },
              {
                "ty": 45,
                "span": 120,
                "mutability": "Not"
              },
              {
                "ty": 39,
                "span": 122,
                "mutability": "Mut"
              }
            ],
            "arg_count": 0,
            "var_debug_info": [
              {
                "name": "left",
                "source_info": {
                  "span": 124,
                  "scope": 1
                },
                "composite": null,
                "value": {
                  "Place": {
                    "local": 1,
                    "projection": []
                  }
                },
                "argument_index": null
              },
              {
                "name": "right",
                "source_info": {
                  "span": 125,
                  "scope": 2
                },
                "composite": null,
                "value": {
                  "Place": {
                    "local": 2,
                    "projection": []
                  }
                },
                "argument_index": null
              }
            ],
            "spread_arg": null,
            "span": 128
          }
        }
      },
      "details": null
    },
    {
      "symbol_name": "_ZN13ref_ptr_cases4main17h428e8312902c8b7eE",
      "mono_item_kind": {
        "MonoItemFn": {
          "name": "main",
          "id": 16,
          "body": {
            "blocks": [
              {
                "statements": [],
                "terminator": {
                  "kind": {
                    "Call": {
                      "func": {
                        "Constant": {
                          "span": 183,
                          "user_ty": null,
                          "const_": {
                            "kind": "ZeroSized",
                            "ty": 54,
                            "id": 35
                          }
                        }
                      },
                      "args": [],
                      "destination": {
                        "local": 1,
                        "projection": []
                      },
                      "target": 1,
                      "unwind": "Continue"
                    }
                  },
                  "span": 184
                }
              },
              {
                "statements": [],
                "terminator": {
                  "kind": {
                    "Call": {
                      "func": {
                        "Constant": {
                          "span": 185,
                          "user_ty": null,
                          "const_": {
                            "kind": "ZeroSized",
                            "ty": 55,
                            "id": 36
                          }
                        }
                      },
                      "args": [],
                      "destination": {
                        "local": 2,
                        "projection": []
                      },
                      "target": 2,
                      "unwind": "Continue"
                    }
                  },
                  "span": 186
                }
              },
              {
                "statements": [],
                "terminator": {
                  "kind": {
                    "Call": {
                      "func": {
                        "Constant": {
                          "span": 187,
                          "user_ty": null,
                          "const_": {
                            "kind": "ZeroSized",
                            "ty": 56,
                            "id": 37
                          }
                        }
                      },
                      "args": [],
                      "destination": {
                        "local": 3,
                        "projection": []
                      },
                      "target": 3,
                      "unwind": "Continue"
                    }
                  },
                  "span": 188
                }
              },
              {
                "statements": [],
                "terminator": {
                  "kind": {
                    "Call": {
                      "func": {
                        "Constant": {
                          "span": 189,
                          "user_ty": null,
                          "const_": {
                            "kind": "ZeroSized",
                            "ty": 57,
                            "id": 38
                          }
                        }
                      },
                      "args": [],
                      "destination": {
                        "local": 4,
                        "projection": []
                      },
                      "target": 4,
                      "unwind": "Continue"
                    }
                  },
                  "span": 190
                }
              },
              {
                "statements": [],
                "terminator": {
                  "kind": "Return",
                  "span": 191
                }
              }
            ],
            "locals": [
              {
                "ty": 1,
                "span": 192,
                "mutability": "Mut"
              },
              {
                "ty": 1,
                "span": 184,
                "mutability": "Not"
              },
              {
                "ty": 1,
                "span": 186,
                "mutability": "Not"
              },
              {
                "ty": 1,
                "span": 188,
                "mutability": "Not"
              },
              {
                "ty": 1,
                "span": 190,
                "mutability": "Not"
              }
            ],
            "arg_count": 0,
            "var_debug_info": [],
            "spread_arg": null,
            "span": 193
          }
        }
      },
      "details": null
    },
    {
      "symbol_name": "_ZN3std2rt10lang_start17hfd87d35cae394ea1E",
      "mono_item_kind": {
        "MonoItemFn": {
          "name": "std::rt::lang_start::<()>",
          "id": 0,
          "body": {
            "blocks": [
              {
                "statements": [
                  {
                    "kind": {
                      "StorageLive": 5
                    },
                    "span": 1
                  },
                  {
                    "kind": {
                      "StorageLive": 6
                    },
                    "span": 2
                  },
                  {
                    "kind": {
                      "StorageLive": 8
                    },
                    "span": 3
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 8,
                          "projection": []
                        },
                        {
                          "Aggregate": [
                            {
                              "Closure": [
                                1,
                                [
                                  {
                                    "Type": 1
                                  },
                                  {
                                    "Type": 2
                                  },
                                  {
                                    "Type": 3
                                  },
                                  {
                                    "Type": 4
                                  }
                                ]
                              ]
                            },
                            [
                              {
                                "Copy": {
                                  "local": 1,
                                  "projection": []
                                }
                              }
                            ]
                          ]
                        }
                      ]
                    },
                    "span": 3
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 7,
                          "projection": []
                        },
                        {
                          "Ref": [
                            {
                              "kind": "ReErased"
                            },
                            "Shared",
                            {
                              "local": 8,
                              "projection": []
                            }
                          ]
                        }
                      ]
                    },
                    "span": 2
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 6,
                          "projection": []
                        },
                        {
                          "Cast": [
                            {
                              "PointerCoercion": "Unsize"
                            },
                            {
                              "Copy": {
                                "local": 7,
                                "projection": []
                              }
                            },
                            5
                          ]
                        }
                      ]
                    },
                    "span": 2
                  }
                ],
                "terminator": {
                  "kind": {
                    "Call": {
                      "func": {
                        "Constant": {
                          "span": 0,
                          "user_ty": null,
                          "const_": {
                            "kind": "ZeroSized",
                            "ty": 0,
                            "id": 0
                          }
                        }
                      },
                      "args": [
                        {
                          "Move": {
                            "local": 6,
                            "projection": []
                          }
                        },
                        {
                          "Move": {
                            "local": 2,
                            "projection": []
                          }
                        },
                        {
                          "Move": {
                            "local": 3,
                            "projection": []
                          }
                        },
                        {
                          "Move": {
                            "local": 4,
                            "projection": []
                          }
                        }
                      ],
                      "destination": {
                        "local": 5,
                        "projection": []
                      },
                      "target": 1,
                      "unwind": "Continue"
                    }
                  },
                  "span": 1
                }
              },
              {
                "statements": [
                  {
                    "kind": {
                      "StorageDead": 6
                    },
                    "span": 5
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 0,
                          "projection": []
                        },
                        {
                          "Use": {
                            "Copy": {
                              "local": 5,
                              "projection": [
                                {
                                  "Downcast": 0
                                },
                                {
                                  "Field": [
                                    0,
                                    6
                                  ]
                                }
                              ]
                            }
                          }
                        }
                      ]
                    },
                    "span": 6
                  },
                  {
                    "kind": {
                      "StorageDead": 8
                    },
                    "span": 7
                  },
                  {
                    "kind": {
                      "StorageDead": 5
                    },
                    "span": 7
                  }
                ],
                "terminator": {
                  "kind": "Return",
                  "span": 4
                }
              }
            ],
            "locals": [
              {
                "ty": 6,
                "span": 8,
                "mutability": "Mut"
              },
              {
                "ty": 7,
                "span": 9,
                "mutability": "Not"
              },
              {
                "ty": 6,
                "span": 10,
                "mutability": "Not"
              },
              {
                "ty": 8,
                "span": 11,
                "mutability": "Not"
              },
              {
                "ty": 9,
                "span": 12,
                "mutability": "Not"
              },
              {
                "ty": 10,
                "span": 1,
                "mutability": "Mut"
              },
              {
                "ty": 5,
                "span": 2,
                "mutability": "Mut"
              },
              {
                "ty": 11,
                "span": 2,
                "mutability": "Not"
              },
              {
                "ty": 12,
                "span": 3,
                "mutability": "Not"
              }
            ],
            "arg_count": 4,
            "var_debug_info": [
              {
                "name": "main",
                "source_info": {
                  "span": 9,
                  "scope": 0
                },
                "composite": null,
                "value": {
                  "Place": {
                    "local": 1,
                    "projection": []
                  }
                },
                "argument_index": 1
              },
              {
                "name": "argc",
                "source_info": {
                  "span": 10,
                  "scope": 0
                },
                "composite": null,
                "value": {
                  "Place": {
                    "local": 2,
                    "projection": []
                  }
                },
                "argument_index": 2
              },
              {
                "name": "argv",
                "source_info": {
                  "span": 11,
                  "scope": 0
                },
                "composite": null,
                "value": {
                  "Place": {
                    "local": 3,
                    "projection": []
                  }
                },
                "argument_index": 3
              },
              {
                "name": "sigpipe",
                "source_info": {
                  "span": 12,
                  "scope": 0
                },
                "composite": null,
                "value": {
                  "Place": {
                    "local": 4,
                    "projection": []
                  }
                },
                "argument_index": 4
              },
              {
                "name": "v",
                "source_info": {
                  "span": 6,
                  "scope": 1
                },
                "composite": null,
                "value": {
                  "Place": {
                    "local": 0,
                    "projection": []
                  }
                },
                "argument_index": null
              }
            ],
            "spread_arg": null,
            "span": 13
          }
        }
      },
      "details": null
    },
    {
      "symbol_name": "_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17hfe8dce45502f90a7E",
      "mono_item_kind": {
        "MonoItemFn": {
          "name": "std::rt::lang_start::<()>::{closure#0}",
          "id": 1,
          "body": {
            "blocks": [
              {
                "statements": [
                  {
                    "kind": {
                      "StorageLive": 2
                    },
                    "span": 16
                  },
                  {
                    "kind": {
                      "StorageLive": 3
                    },
                    "span": 15
                  },
                  {
                    "kind": {
                      "StorageLive": 4
                    },
                    "span": 17
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 4,
                          "projection": []
                        },
                        {
                          "Use": {
                            "Copy": {
                              "local": 1,
                              "projection": [
                                "Deref",
                                {
                                  "Field": [
                                    0,
                                    7
                                  ]
                                }
                              ]
                            }
                          }
                        }
                      ]
                    },
                    "span": 17
                  }
                ],
                "terminator": {
                  "kind": {
                    "Call": {
                      "func": {
                        "Constant": {
                          "span": 14,
                          "user_ty": null,
                          "const_": {
                            "kind": "ZeroSized",
                            "ty": 13,
                            "id": 1
                          }
                        }
                      },
                      "args": [
                        {
                          "Move": {
                            "local": 4,
                            "projection": []
                          }
                        }
                      ],
                      "destination": {
                        "local": 3,
                        "projection": []
                      },
                      "target": 1,
                      "unwind": "Continue"
                    }
                  },
                  "span": 15
                }
              },
              {
                "statements": [
                  {
                    "kind": {
                      "StorageDead": 4
                    },
                    "span": 19
                  }
                ],
                "terminator": {
                  "kind": {
                    "Call": {
                      "func": {
                        "Constant": {
                          "span": 18,
                          "user_ty": null,
                          "const_": {
                            "kind": "ZeroSized",
                            "ty": 14,
                            "id": 2
                          }
                        }
                      },
                      "args": [
                        {
                          "Move": {
                            "local": 3,
                            "projection": []
                          }
                        }
                      ],
                      "destination": {
                        "local": 2,
                        "projection": []
                      },
                      "target": 2,
                      "unwind": "Continue"
                    }
                  },
                  "span": 16
                }
              },
              {
                "statements": [
                  {
                    "kind": {
                      "StorageDead": 3
                    },
                    "span": 21
                  },
                  {
                    "kind": {
                      "StorageLive": 5
                    },
                    "span": 22
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 5,
                          "projection": []
                        },
                        {
                          "Ref": [
                            {
                              "kind": "ReErased"
                            },
                            "Shared",
                            {
                              "local": 2,
                              "projection": [
                                {
                                  "Field": [
                                    0,
                                    15
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "span": 22
                  },
                  {
                    "kind": {
                      "StorageLive": 6
                    },
                    "span": 23
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 6,
                          "projection": []
                        },
                        {
                          "Use": {
                            "Copy": {
                              "local": 2,
                              "projection": [
                                {
                                  "Field": [
                                    0,
                                    15
                                  ]
                                },
                                {
                                  "Field": [
                                    0,
                                    9
                                  ]
                                }
                              ]
                            }
                          }
                        }
                      ]
                    },
                    "span": 23
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 0,
                          "projection": []
                        },
                        {
                          "Cast": [
                            "IntToInt",
                            {
                              "Move": {
                                "local": 6,
                                "projection": []
                              }
                            },
                            16
                          ]
                        }
                      ]
                    },
                    "span": 24
                  },
                  {
                    "kind": {
                      "StorageDead": 6
                    },
                    "span": 25
                  },
                  {
                    "kind": {
                      "StorageDead": 5
                    },
                    "span": 26
                  },
                  {
                    "kind": {
                      "StorageDead": 2
                    },
                    "span": 27
                  }
                ],
                "terminator": {
                  "kind": "Return",
                  "span": 20
                }
              }
            ],
            "locals": [
              {
                "ty": 16,
                "span": 28,
                "mutability": "Mut"
              },
              {
                "ty": 11,
                "span": 3,
                "mutability": "Mut"
              },
              {
                "ty": 17,
                "span": 16,
                "mutability": "Mut"
              },
              {
                "ty": 1,
                "span": 15,
                "mutability": "Mut"
              },
              {
                "ty": 7,
                "span": 17,
                "mutability": "Mut"
              },
              {
                "ty": 18,
                "span": 22,
                "mutability": "Mut"
              },
              {
                "ty": 9,
                "span": 23,
                "mutability": "Mut"
              }
            ],
            "arg_count": 1,
            "var_debug_info": [
              {
                "name": "main",
                "source_info": {
                  "span": 9,
                  "scope": 0
                },
                "composite": null,
                "value": {
                  "Place": {
                    "local": 1,
                    "projection": [
                      "Deref",
                      {
                        "Field": [
                          0,
                          7
                        ]
                      }
                    ]
                  }
                },
                "argument_index": null
              },
              {
                "name": "self",
                "source_info": {
                  "span": 29,
                  "scope": 1
                },
                "composite": null,
                "value": {
                  "Place": {
                    "local": 2,
                    "projection": []
                  }
                },
                "argument_index": 1
              },
              {
                "name": "self",
                "source_info": {
                  "span": 30,
                  "scope": 2
                },
                "composite": null,
                "value": {
                  "Place": {
                    "local": 5,
                    "projection": []
                  }
                },
                "argument_index": 1
              }
            ],
            "spread_arg": null,
            "span": 3
          }
        }
      },
      "details": null
    },
    {
      "symbol_name": "_ZN3std3sys9backtrace28__rust_begin_short_backtrace17hfc8cafc25fefeb12E",
      "mono_item_kind": {
        "MonoItemFn": {
          "name": "std::sys::backtrace::__rust_begin_short_backtrace::<fn(), ()>",
          "id": 2,
          "body": {
            "blocks": [
              {
                "statements": [],
                "terminator": {
                  "kind": {
                    "Call": {
                      "func": {
                        "Constant": {
                          "span": 31,
                          "user_ty": null,
                          "const_": {
                            "kind": "ZeroSized",
                            "ty": 19,
                            "id": 3
                          }
                        }
                      },
                      "args": [
                        {
                          "Move": {
                            "local": 1,
                            "projection": []
                          }
                        },
                        {
                          "Constant": {
                            "span": 32,
                            "user_ty": null,
                            "const_": {
                              "kind": "ZeroSized",
                              "ty": 1,
                              "id": 4
                            }
                          }
                        }
                      ],
                      "destination": {
                        "local": 0,
                        "projection": []
                      },
                      "target": 1,
                      "unwind": "Continue"
                    }
                  },
                  "span": 33
                }
              },
              {
                "statements": [],
                "terminator": {
                  "kind": {
                    "Call": {
                      "func": {
                        "Constant": {
                          "span": 34,
                          "user_ty": null,
                          "const_": {
                            "kind": "ZeroSized",
                            "ty": 20,
                            "id": 5
                          }
                        }
                      },
                      "args": [
                        {
                          "Constant": {
                            "span": 32,
                            "user_ty": null,
                            "const_": {
                              "kind": "ZeroSized",
                              "ty": 1,
                              "id": 4
                            }
                          }
                        }
                      ],
                      "destination": {
                        "local": 2,
                        "projection": []
                      },
                      "target": 2,
                      "unwind": "Unreachable"
                    }
                  },
                  "span": 35
                }
              },
              {
                "statements": [],
                "terminator": {
                  "kind": "Return",
                  "span": 36
                }
              }
            ],
            "locals": [
              {
                "ty": 1,
                "span": 37,
                "mutability": "Mut"
              },
              {
                "ty": 7,
                "span": 38,
                "mutability": "Not"
              },
              {
                "ty": 1,
                "span": 39,
                "mutability": "Not"
              }
            ],
            "arg_count": 1,
            "var_debug_info": [
              {
                "name": "f",
                "source_info": {
                  "span": 38,
                  "scope": 0
                },
                "composite": null,
                "value": {
                  "Place": {
                    "local": 1,
                    "projection": []
                  }
                },
                "argument_index": 1
              },
              {
                "name": "result",
                "source_info": {
                  "span": 40,
                  "scope": 1
                },
                "composite": null,
                "value": {
                  "Place": {
                    "local": 0,
                    "projection": []
                  }
                },
                "argument_index": null
              },
              {
                "name": "dummy",
                "source_info": {
                  "span": 41,
                  "scope": 2
                },
                "composite": null,
                "value": {
                  "Const": {
                    "span": 32,
                    "user_ty": null,
                    "const_": {
                      "kind": "ZeroSized",
                      "ty": 1,
                      "id": 4
                    }
                  }
                },
                "argument_index": 1
              }
            ],
            "spread_arg": null,
            "span": 42
          }
        }
      },
      "details": null
    },
    {
      "symbol_name": "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hb47f621508da998bE",
      "mono_item_kind": {
        "MonoItemFn": {
          "name": "<&u8 as std::fmt::Debug>::fmt",
          "id": 3,
          "body": {
            "blocks": [
              {
                "statements": [
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 3,
                          "projection": []
                        },
                        {
                          "Use": {
                            "Copy": {
                              "local": 1,
                              "projection": [
                                "Deref"
                              ]
                            }
                          }
                        }
                      ]
                    },
                    "span": 45
                  }
                ],
                "terminator": {
                  "kind": {
                    "Call": {
                      "func": {
                        "Constant": {
                          "span": 43,
                          "user_ty": null,
                          "const_": {
                            "kind": "ZeroSized",
                            "ty": 21,
                            "id": 6
                          }
                        }
                      },
                      "args": [
                        {
                          "Move": {
                            "local": 3,
                            "projection": []
                          }
                        },
                        {
                          "Move": {
                            "local": 2,
                            "projection": []
                          }
                        }
                      ],
                      "destination": {
                        "local": 0,
                        "projection": []
                      },
                      "target": 1,
                      "unwind": "Continue"
                    }
                  },
                  "span": 44
                }
              },
              {
                "statements": [],
                "terminator": {
                  "kind": "Return",
                  "span": 46
                }
              }
            ],
            "locals": [
              {
                "ty": 22,
                "span": 47,
                "mutability": "Mut"
              },
              {
                "ty": 23,
                "span": 48,
                "mutability": "Not"
              },
              {
                "ty": 24,
                "span": 49,
                "mutability": "Not"
              },
              {
                "ty": 25,
                "span": 48,
                "mutability": "Mut"
              }
            ],
            "arg_count": 2,
            "var_debug_info": [
              {
                "name": "self",
                "source_info": {
                  "span": 48,
                  "scope": 0
                },
                "composite": null,
                "value": {
                  "Place": {
                    "local": 1,
                    "projection": []
                  }
                },
                "argument_index": 1
              },
              {
                "name": "f",
                "source_info": {
                  "span": 49,
                  "scope": 0
                },
                "composite": null,
                "value": {
                  "Place": {
                    "local": 2,
                    "projection": []
                  }
                },
                "argument_index": 2
              }
            ],
            "spread_arg": null,
            "span": 50
          }
        }
      },
      "details": null
    },
    {
      "symbol_name": "_ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17ha3306e8e1e53a968E",
      "mono_item_kind": {
        "MonoItemFn": {
          "name": "core::fmt::num::<impl std::fmt::Debug for u8>::fmt",
          "id": 4,
          "body": {
            "blocks": [
              {
                "statements": [
                  {
                    "kind": {
                      "StorageLive": 3
                    },
                    "span": 52
                  },
                  {
                    "kind": {
                      "StorageLive": 4
                    },
                    "span": 53
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 4,
                          "projection": []
                        },
                        {
                          "Use": {
                            "Copy": {
                              "local": 2,
                              "projection": [
                                "Deref",
                                {
                                  "Field": [
                                    0,
                                    26
                                  ]
                                }
                              ]
                            }
                          }
                        }
                      ]
                    },
                    "span": 53
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 3,
                          "projection": []
                        },
                        {
                          "BinaryOp": [
                            "BitAnd",
                            {
                              "Move": {
                                "local": 4,
                                "projection": []
                              }
                            },
                            {
                              "Constant": {
                                "span": 32,
                                "user_ty": null,
                                "const_": {
                                  "kind": {
                                    "Allocated": {
                                      "bytes": [
                                        16,
                                        0,
                                        0,
                                        0
                                      ],
                                      "provenance": {
                                        "ptrs": []
                                      },
                                      "align": 4,
                                      "mutability": "Mut"
                                    }
                                  },
                                  "ty": 26,
                                  "id": 7
                                }
                              }
                            }
                          ]
                        }
                      ]
                    },
                    "span": 52
                  },
                  {
                    "kind": {
                      "StorageDead": 4
                    },
                    "span": 54
                  }
                ],
                "terminator": {
                  "kind": {
                    "SwitchInt": {
                      "discr": {
                        "Move": {
                          "local": 3,
                          "projection": []
                        }
                      },
                      "targets": {
                        "branches": [
                          [
                            0,
                            2
                          ]
                        ],
                        "otherwise": 1
                      }
                    }
                  },
                  "span": 51
                }
              },
              {
                "statements": [
                  {
                    "kind": {
                      "StorageDead": 3
                    },
                    "span": 51
                  }
                ],
                "terminator": {
                  "kind": {
                    "Call": {
                      "func": {
                        "Constant": {
                          "span": 55,
                          "user_ty": null,
                          "const_": {
                            "kind": "ZeroSized",
                            "ty": 27,
                            "id": 8
                          }
                        }
                      },
                      "args": [
                        {
                          "Move": {
                            "local": 1,
                            "projection": []
                          }
                        },
                        {
                          "Move": {
                            "local": 2,
                            "projection": []
                          }
                        }
                      ],
                      "destination": {
                        "local": 0,
                        "projection": []
                      },
                      "target": 6,
                      "unwind": "Continue"
                    }
                  },
                  "span": 56
                }
              },
              {
                "statements": [
                  {
                    "kind": {
                      "StorageDead": 3
                    },
                    "span": 51
                  },
                  {
                    "kind": {
                      "StorageLive": 5
                    },
                    "span": 58
                  },
                  {
                    "kind": {
                      "StorageLive": 6
                    },
                    "span": 59
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 6,
                          "projection": []
                        },
                        {
                          "Use": {
                            "Copy": {
                              "local": 2,
                              "projection": [
                                "Deref",
                                {
                                  "Field": [
                                    0,
                                    26
                                  ]
                                }
                              ]
                            }
                          }
                        }
                      ]
                    },
                    "span": 59
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 5,
                          "projection": []
                        },
                        {
                          "BinaryOp": [
                            "BitAnd",
                            {
                              "Move": {
                                "local": 6,
                                "projection": []
                              }
                            },
                            {
                              "Constant": {
                                "span": 32,
                                "user_ty": null,
                                "const_": {
                                  "kind": {
                                    "Allocated": {
                                      "bytes": [
                                        32,
                                        0,
                                        0,
                                        0
                                      ],
                                      "provenance": {
                                        "ptrs": []
                                      },
                                      "align": 4,
                                      "mutability": "Mut"
                                    }
                                  },
                                  "ty": 26,
                                  "id": 9
                                }
                              }
                            }
                          ]
                        }
                      ]
                    },
                    "span": 58
                  },
                  {
                    "kind": {
                      "StorageDead": 6
                    },
                    "span": 60
                  }
                ],
                "terminator": {
                  "kind": {
                    "SwitchInt": {
                      "discr": {
                        "Move": {
                          "local": 5,
                          "projection": []
                        }
                      },
                      "targets": {
                        "branches": [
                          [
                            0,
                            4
                          ]
                        ],
                        "otherwise": 3
                      }
                    }
                  },
                  "span": 57
                }
              },
              {
                "statements": [
                  {
                    "kind": {
                      "StorageDead": 5
                    },
                    "span": 57
                  }
                ],
                "terminator": {
                  "kind": {
                    "Call": {
                      "func": {
                        "Constant": {
                          "span": 61,
                          "user_ty": null,
                          "const_": {
                            "kind": "ZeroSized",
                            "ty": 28,
                            "id": 10
                          }
                        }
                      },
                      "args": [
                        {
                          "Move": {
                            "local": 1,
                            "projection": []
                          }
                        },
                        {
                          "Move": {
                            "local": 2,
                            "projection": []
                          }
                        }
                      ],
                      "destination": {
                        "local": 0,
                        "projection": []
                      },
                      "target": 5,
                      "unwind": "Continue"
                    }
                  },
                  "span": 62
                }
              },
              {
                "statements": [
                  {
                    "kind": {
                      "StorageDead": 5
                    },
                    "span": 57
                  }
                ],
                "terminator": {
                  "kind": {
                    "Call": {
                      "func": {
                        "Constant": {
                          "span": 63,
                          "user_ty": null,
                          "const_": {
                            "kind": "ZeroSized",
                            "ty": 29,
                            "id": 11
                          }
                        }
                      },
                      "args": [
                        {
                          "Move": {
                            "local": 1,
                            "projection": []
                          }
                        },
                        {
                          "Move": {
                            "local": 2,
                            "projection": []
                          }
                        }
                      ],
                      "destination": {
                        "local": 0,
                        "projection": []
                      },
                      "target": 5,
                      "unwind": "Continue"
                    }
                  },
                  "span": 64
                }
              },
              {
                "statements": [],
                "terminator": {
                  "kind": {
                    "Goto": {
                      "target": 6
                    }
                  },
                  "span": 65
                }
              },
              {
                "statements": [],
                "terminator": {
                  "kind": "Return",
                  "span": 66
                }
              }
            ],
            "locals": [
              {
                "ty": 22,
                "span": 67,
                "mutability": "Mut"
              },
              {
                "ty": 25,
                "span": 68,
                "mutability": "Not"
              },
              {
                "ty": 24,
                "span": 69,
                "mutability": "Not"
              },
              {
                "ty": 26,
                "span": 52,
                "mutability": "Mut"
              },
              {
                "ty": 26,
                "span": 53,
                "mutability": "Mut"
              },
              {
                "ty": 26,
                "span": 58,
                "mutability": "Mut"
              },
              {
                "ty": 26,
                "span": 59,
                "mutability": "Mut"
              }
            ],
            "arg_count": 2,
            "var_debug_info": [
              {
                "name": "self",
                "source_info": {
                  "span": 68,
                  "scope": 0
                },
                "composite": null,
                "value": {
                  "Place": {
                    "local": 1,
                    "projection": []
                  }
                },
                "argument_index": 1
              },
              {
                "name": "f",
                "source_info": {
                  "span": 69,
                  "scope": 0
                },
                "composite": null,
                "value": {
                  "Place": {
                    "local": 2,
                    "projection": []
                  }
                },
                "argument_index": 2
              },
              {
                "name": "self",
                "source_info": {
                  "span": 70,
                  "scope": 1
                },
                "composite": null,
                "value": {
                  "Place": {
                    "local": 2,
                    "projection": []
                  }
                },
                "argument_index": 1
              },
              {
                "name": "self",
                "source_info": {
                  "span": 71,
                  "scope": 2
                },
                "composite": null,
                "value": {
                  "Place": {
                    "local": 2,
                    "projection": []
                  }
                },
                "argument_index": 1
              }
            ],
            "spread_arg": null,
            "span": 72
          }
        }
      },
      "details": null
    },
    {
      "symbol_name": "_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17hb7a92ca3a2cd19afE",
      "mono_item_kind": {
        "MonoItemFn": {
          "name": "<{closure@std::rt::lang_start<()>::{closure#0}} as std::ops::FnOnce<()>>::call_once",
          "id": 5,
          "body": {
            "blocks": [
              {
                "statements": [],
                "terminator": {
                  "kind": {
                    "Call": {
                      "func": {
                        "Constant": {
                          "span": 73,
                          "user_ty": null,
                          "const_": {
                            "kind": "ZeroSized",
                            "ty": 30,
                            "id": 12
                          }
                        }
                      },
                      "args": [
                        {
                          "Move": {
                            "local": 1,
                            "projection": [
                              "Deref"
                            ]
                          }
                        },
                        {
                          "Move": {
                            "local": 2,
                            "projection": []
                          }
                        }
                      ],
                      "destination": {
                        "local": 0,
                        "projection": []
                      },
                      "target": 1,
                      "unwind": "Continue"
                    }
                  },
                  "span": 73
                }
              },
              {
                "statements": [],
                "terminator": {
                  "kind": "Return",
                  "span": 73
                }
              }
            ],
            "locals": [
              {
                "ty": 16,
                "span": 73,
                "mutability": "Mut"
              },
              {
                "ty": 31,
                "span": 73,
                "mutability": "Not"
              },
              {
                "ty": 1,
                "span": 73,
                "mutability": "Not"
              }
            ],
            "arg_count": 2,
            "var_debug_info": [],
            "spread_arg": 2,
            "span": 73
          }
        }
      },
      "details": null
    },
    {
      "symbol_name": "_ZN4core3ops8function6FnOnce9call_once17h85254df4cd1fb576E",
      "mono_item_kind": {
        "MonoItemFn": {
          "name": "<fn() as std::ops::FnOnce<()>>::call_once",
          "id": 5,
          "body": {
            "blocks": [
              {
                "statements": [],
                "terminator": {
                  "kind": {
                    "Call": {
                      "func": {
                        "Move": {
                          "local": 1,
                          "projection": []
                        }
                      },
                      "args": [],
                      "destination": {
                        "local": 0,
                        "projection": []
                      },
                      "target": 1,
                      "unwind": "Continue"
                    }
                  },
                  "span": 73
                }
              },
              {
                "statements": [],
                "terminator": {
                  "kind": "Return",
                  "span": 73
                }
              }
            ],
            "locals": [
              {
                "ty": 1,
                "span": 73,
                "mutability": "Mut"
              },
              {
                "ty": 7,
                "span": 73,
                "mutability": "Not"
              },
              {
                "ty": 1,
                "span": 73,
                "mutability": "Not"
              }
            ],
            "arg_count": 2,
            "var_debug_info": [],
            "spread_arg": 2,
            "span": 73
          }
        }
      },
      "details": null
    },
    {
      "symbol_name": "_ZN4core3ops8function6FnOnce9call_once17he8fe03d255691dc2E",
      "mono_item_kind": {
        "MonoItemFn": {
          "name": "<{closure@std::rt::lang_start<()>::{closure#0}} as std::ops::FnOnce<()>>::call_once",
          "id": 5,
          "body": {
            "blocks": [
              {
                "statements": [
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 3,
                          "projection": []
                        },
                        {
                          "Ref": [
                            {
                              "kind": "ReErased"
                            },
                            {
                              "Mut": {
                                "kind": "Default"
                              }
                            },
                            {
                              "local": 1,
                              "projection": []
                            }
                          ]
                        }
                      ]
                    },
                    "span": 73
                  }
                ],
                "terminator": {
                  "kind": {
                    "Call": {
                      "func": {
                        "Constant": {
                          "span": 73,
                          "user_ty": null,
                          "const_": {
                            "kind": "ZeroSized",
                            "ty": 32,
                            "id": 13
                          }
                        }
                      },
                      "args": [
                        {
                          "Move": {
                            "local": 3,
                            "projection": []
                          }
                        },
                        {
                          "Move": {
                            "local": 2,
                            "projection": []
                          }
                        }
                      ],
                      "destination": {
                        "local": 0,
                        "projection": []
                      },
                      "target": 1,
                      "unwind": {
                        "Cleanup": 3
                      }
                    }
                  },
                  "span": 73
                }
              },
              {
                "statements": [],
                "terminator": {
                  "kind": {
                    "Drop": {
                      "place": {
                        "local": 1,
                        "projection": []
                      },
                      "target": 2,
                      "unwind": "Continue"
                    }
                  },
                  "span": 73
                }
              },
              {
                "statements": [],
                "terminator": {
                  "kind": "Return",
                  "span": 73
                }
              },
              {
                "statements": [],
                "terminator": {
                  "kind": {
                    "Drop": {
                      "place": {
                        "local": 1,
                        "projection": []
                      },
                      "target": 4,
                      "unwind": "Terminate"
                    }
                  },
                  "span": 73
                }
              },
              {
                "statements": [],
                "terminator": {
                  "kind": "Resume",
                  "span": 73
                }
              }
            ],
            "locals": [
              {
                "ty": 16,
                "span": 73,
                "mutability": "Mut"
              },
              {
                "ty": 12,
                "span": 73,
                "mutability": "Not"
              },
              {
                "ty": 1,
                "span": 73,
                "mutability": "Not"
              },
              {
                "ty": 33,
                "span": 73,
                "mutability": "Not"
              }
            ],
            "arg_count": 2,
            "var_debug_info": [],
            "spread_arg": 2,
            "span": 73
          }
        }
      },
      "details": null
    },
    {
      "symbol_name": "_ZN4core3ptr27drop_in_place$LT$$RF$u8$GT$17h369fed9aa61934bbE",
      "mono_item_kind": {
        "MonoItemFn": {
          "name": "std::ptr::drop_in_place::<&u8>",
          "id": 6,
          "body": {
            "blocks": [
              {
                "statements": [],
                "terminator": {
                  "kind": "Return",
                  "span": 74
                }
              }
            ],
            "locals": [
              {
                "ty": 1,
                "span": 74,
                "mutability": "Mut"
              },
              {
                "ty": 34,
                "span": 74,
                "mutability": "Not"
              }
            ],
            "arg_count": 1,
            "var_debug_info": [],
            "spread_arg": null,
            "span": 74
          }
        }
      },
      "details": null
    },
    {
      "symbol_name": "_ZN4core3ptr2eq17h154d4c4bce83ea1bE",
      "mono_item_kind": {
        "MonoItemFn": {
          "name": "std::ptr::eq::<i32>",
          "id": 7,
          "body": {
            "blocks": [
              {
                "statements": [
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 0,
                          "projection": []
                        },
                        {
                          "BinaryOp": [
                            "Eq",
                            {
                              "Copy": {
                                "local": 1,
                                "projection": []
                              }
                            },
                            {
                              "Copy": {
                                "local": 2,
                                "projection": []
                              }
                            }
                          ]
                        }
                      ]
                    },
                    "span": 76
                  }
                ],
                "terminator": {
                  "kind": "Return",
                  "span": 75
                }
              }
            ],
            "locals": [
              {
                "ty": 35,
                "span": 77,
                "mutability": "Mut"
              },
              {
                "ty": 36,
                "span": 78,
                "mutability": "Not"
              },
              {
                "ty": 36,
                "span": 79,
                "mutability": "Not"
              }
            ],
            "arg_count": 2,
            "var_debug_info": [
              {
                "name": "a",
                "source_info": {
                  "span": 78,
                  "scope": 0
                },
                "composite": null,
                "value": {
                  "Place": {
                    "local": 1,
                    "projection": []
                  }
                },
                "argument_index": 1
              },
              {
                "name": "b",
                "source_info": {
                  "span": 79,
                  "scope": 0
                },
                "composite": null,
                "value": {
                  "Place": {
                    "local": 2,
                    "projection": []
                  }
                },
                "argument_index": 2
              }
            ],
            "spread_arg": null,
            "span": 80
          }
        }
      },
      "details": null
    },
    {
      "symbol_name": "_ZN4core3ptr85drop_in_place$LT$std..rt..lang_start$LT$$LP$$RP$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h724575737a4948feE",
      "mono_item_kind": {
        "MonoItemFn": {
          "name": "std::ptr::drop_in_place::<{closure@std::rt::lang_start<()>::{closure#0}}>",
          "id": 6,
          "body": {
            "blocks": [
              {
                "statements": [],
                "terminator": {
                  "kind": "Return",
                  "span": 74
                }
              }
            ],
            "locals": [
              {
                "ty": 1,
                "span": 74,
                "mutability": "Mut"
              },
              {
                "ty": 31,
                "span": 74,
                "mutability": "Not"
              }
            ],
            "arg_count": 1,
            "var_debug_info": [],
            "spread_arg": null,
            "span": 74
          }
        }
      },
      "details": null
    },
    {
      "symbol_name": "_ZN4core9panicking13assert_failed17hafa354f25af5d562E",
      "mono_item_kind": {
        "MonoItemFn": {
          "name": "core::panicking::assert_failed::<u8, u8>",
          "id": 8,
          "body": {
            "blocks": [
              {
                "statements": [
                  {
                    "kind": {
                      "StorageLive": 5
                    },
                    "span": 83
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 6,
                          "projection": []
                        },
                        {
                          "Ref": [
                            {
                              "kind": "ReErased"
                            },
                            "Shared",
                            {
                              "local": 2,
                              "projection": []
                            }
                          ]
                        }
                      ]
                    },
                    "span": 83
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 5,
                          "projection": []
                        },
                        {
                          "Cast": [
                            {
                              "PointerCoercion": "Unsize"
                            },
                            {
                              "Copy": {
                                "local": 6,
                                "projection": []
                              }
                            },
                            38
                          ]
                        }
                      ]
                    },
                    "span": 83
                  },
                  {
                    "kind": {
                      "StorageLive": 7
                    },
                    "span": 84
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 8,
                          "projection": []
                        },
                        {
                          "Ref": [
                            {
                              "kind": "ReErased"
                            },
                            "Shared",
                            {
                              "local": 3,
                              "projection": []
                            }
                          ]
                        }
                      ]
                    },
                    "span": 84
                  },
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 7,
                          "projection": []
                        },
                        {
                          "Cast": [
                            {
                              "PointerCoercion": "Unsize"
                            },
                            {
                              "Copy": {
                                "local": 8,
                                "projection": []
                              }
                            },
                            38
                          ]
                        }
                      ]
                    },
                    "span": 84
                  }
                ],
                "terminator": {
                  "kind": {
                    "Call": {
                      "func": {
                        "Constant": {
                          "span": 81,
                          "user_ty": null,
                          "const_": {
                            "kind": "ZeroSized",
                            "ty": 37,
                            "id": 14
                          }
                        }
                      },
                      "args": [
                        {
                          "Move": {
                            "local": 1,
                            "projection": []
                          }
                        },
                        {
                          "Move": {
                            "local": 5,
                            "projection": []
                          }
                        },
                        {
                          "Move": {
                            "local": 7,
                            "projection": []
                          }
                        },
                        {
                          "Move": {
                            "local": 4,
                            "projection": []
                          }
                        }
                      ],
                      "destination": {
                        "local": 0,
                        "projection": []
                      },
                      "target": null,
                      "unwind": "Continue"
                    }
                  },
                  "span": 82
                }
              }
            ],
            "locals": [
              {
                "ty": 39,
                "span": 85,
                "mutability": "Mut"
              },
              {
                "ty": 40,
                "span": 86,
                "mutability": "Not"
              },
              {
                "ty": 25,
                "span": 87,
                "mutability": "Not"
              },
              {
                "ty": 25,
                "span": 88,
                "mutability": "Not"
              },
              {
                "ty": 41,
                "span": 89,
                "mutability": "Not"
              },
              {
                "ty": 38,
                "span": 83,
                "mutability": "Mut"
              },
              {
                "ty": 23,
                "span": 83,
                "mutability": "Not"
              },
              {
                "ty": 38,
                "span": 84,
                "mutability": "Mut"
              },
              {
                "ty": 23,
                "span": 84,
                "mutability": "Not"
              }
            ],
            "arg_count": 4,
            "var_debug_info": [
              {
                "name": "kind",
                "source_info": {
                  "span": 86,
                  "scope": 0
                },
                "composite": null,
                "value": {
                  "Place": {
                    "local": 1,
                    "projection": []
                  }
                },
                "argument_index": 1
              },
              {
                "name": "left",
                "source_info": {
                  "span": 87,
                  "scope": 0
                },
                "composite": null,
                "value": {
                  "Place": {
                    "local": 2,
                    "projection": []
                  }
                },
                "argument_index": 2
              },
              {
                "name": "right",
                "source_info": {
                  "span": 88,
                  "scope": 0
                },
                "composite": null,
                "value": {
                  "Place": {
                    "local": 3,
                    "projection": []
                  }
                },
                "argument_index": 3
              },
              {
                "name": "args",
                "source_info": {
                  "span": 89,
                  "scope": 0
                },
                "composite": null,
                "value": {
                  "Place": {
                    "local": 4,
                    "projection": []
                  }
                },
                "argument_index": 4
              }
            ],
            "spread_arg": null,
            "span": 90
          }
        }
      },
      "details": null
    },
    {
      "symbol_name": "_ZN54_$LT$$LP$$RP$$u20$as$u20$std..process..Termination$GT$6report17had282705b957b33cE",
      "mono_item_kind": {
        "MonoItemFn": {
          "name": "<() as std::process::Termination>::report",
          "id": 9,
          "body": {
            "blocks": [
              {
                "statements": [
                  {
                    "kind": {
                      "Assign": [
                        {
                          "local": 0,
                          "projection": []
                        },
                        {
                          "Use": {
                            "Constant": {
                              "span": 92,
                              "user_ty": null,
                              "const_": {
                                "kind": {
                                  "Allocated": {
                                    "bytes": [
                                      0
                                    ],
                                    "provenance": {
                                      "ptrs": []
                                    },
                                    "align": 1,
                                    "mutability": "Mut"
                                  }
                                },
                                "ty": 17,
                                "id": 15
                              }
                            }
                          }
                        }
                      ]
                    },
                    "span": 92
                  }
                ],
                "terminator": {
                  "kind": "Return",
                  "span": 91
                }
              }
            ],
            "locals": [
              {
                "ty": 17,
                "span": 93,
                "mutability": "Mut"
              },
              {
                "ty": 1,
                "span": 94,
                "mutability": "Not"
              }
            ],
            "arg_count": 1,
            "var_debug_info": [
              {
                "name": "self",
                "source_info": {
                  "span": 94,
                  "scope": 0
                },
                "composite": null,
                "value": {
                  "Const": {
                    "span": 32,
                    "user_ty": null,
                    "const_": {
                      "kind": "ZeroSized",
                      "ty": 1,
                      "id": 4
                    }
                  }
                },
                "argument_index": 1
              }
            ],
            "spread_arg": null,
            "span": 95
          }
        }
      },
      "details": null
    }
  ],
  "types": [
    [
      1,
      {
        "TupleType": {
          "types": [],
          "layout": {
            "fields": {
              "Arbitrary": {
                "offsets": []
              }
            },
            "variants": {
              "Single": {
                "index": 0
              }
            },
            "abi": {
              "Aggregate": {
                "sized": true
              }
            },
            "abi_align": 1,
            "size": {
              "num_bits": 0
            }
          }
        }
      }
    ],
    [
      5,
      {
        "RefType": {
          "pointee_type": 86,
          "layout": {
            "fields": {
              "Arbitrary": {
                "offsets": [
                  {
                    "num_bits": 0
                  },
                  {
                    "num_bits": 64
                  }
                ]
              }
            },
            "variants": {
              "Single": {
                "index": 0
              }
            },
            "abi": {
              "ScalarPair": [
                {
                  "Initialized": {
                    "value": {
                      "Pointer": 0
                    },
                    "valid_range": {
                      "start": 1,
                      "end": 18446744073709551615
                    }
                  }
                },
                {
                  "Initialized": {
                    "value": {
                      "Pointer": 0
                    },
                    "valid_range": {
                      "start": 1,
                      "end": 18446744073709551615
                    }
                  }
                }
              ]
            },
            "abi_align": 8,
            "size": {
              "num_bits": 128
            }
          }
        }
      }
    ],
    [
      6,
      {
        "PrimitiveType": {
          "Int": "Isize"
        }
      }
    ],
    [
      8,
      {
        "PtrType": {
          "pointee_type": 48,
          "layout": {
            "fields": "Primitive",
            "variants": {
              "Single": {
                "index": 0
              }
            },
            "abi": {
              "Scalar": {
                "Initialized": {
                  "value": {
                    "Pointer": 0
                  },
                  "valid_range": {
                    "start": 0,
                    "end": 18446744073709551615
                  }
                }
              }
            },
            "abi_align": 8,
            "size": {
              "num_bits": 64
            }
          }
        }
      }
    ],
    [
      9,
      {
        "PrimitiveType": {
          "Uint": "U8"
        }
      }
    ],
    [
      10,
      {
        "EnumType": {
          "name": "std::result::Result<isize, !>",
          "adt_def": 28,
          "discriminants": [
            0,
            1
          ],
          "fields": [
            [
              6
            ],
            [
              39
            ]
          ],
          "layout": {
            "fields": {
              "Arbitrary": {
                "offsets": [
                  {
                    "num_bits": 0
                  }
                ]
              }
            },
            "variants": {
              "Single": {
                "index": 0
              }
            },
            "abi": {
              "Scalar": {
                "Initialized": {
                  "value": {
                    "Int": {
                      "length": "I64",
                      "signed": true
                    }
                  },
                  "valid_range": {
                    "start": 0,
                    "end": 18446744073709551615
                  }
                }
              }
            },
            "abi_align": 8,
            "size": {
              "num_bits": 64
            }
          }
        }
      }
    ],
    [
      11,
      {
        "RefType": {
          "pointee_type": 12,
          "layout": {
            "fields": "Primitive",
            "variants": {
              "Single": {
                "index": 0
              }
            },
            "abi": {
              "Scalar": {
                "Initialized": {
                  "value": {
                    "Pointer": 0
                  },
                  "valid_range": {
                    "start": 1,
                    "end": 18446744073709551615
                  }
                }
              }
            },
            "abi_align": 8,
            "size": {
              "num_bits": 64
            }
          }
        }
      }
    ],
    [
      15,
      {
        "StructType": {
          "name": "std::sys::pal::unix::process::process_common::ExitCode",
          "adt_def": 43,
          "fields": [
            9
          ],
          "layout": {
            "fields": {
              "Arbitrary": {
                "offsets": [
                  {
                    "num_bits": 0
                  }
                ]
              }
            },
            "variants": {
              "Single": {
                "index": 0
              }
            },
            "abi": {
              "Scalar": {
                "Initialized": {
                  "value": {
                    "Int": {
                      "length": "I8",
                      "signed": false
                    }
                  },
                  "valid_range": {
                    "start": 0,
                    "end": 255
                  }
                }
              }
            },
            "abi_align": 1,
            "size": {
              "num_bits": 8
            }
          }
        }
      }
    ],
    [
      16,
      {
        "PrimitiveType": {
          "Int": "I32"
        }
      }
    ],
    [
      17,
      {
        "StructType": {
          "name": "std::process::ExitCode",
          "adt_def": 41,
          "fields": [
            15
          ],
          "layout": {
            "fields": {
              "Arbitrary": {
                "offsets": [
                  {
                    "num_bits": 0
                  }
                ]
              }
            },
            "variants": {
              "Single": {
                "index": 0
              }
            },
            "abi": {
              "Scalar": {
                "Initialized": {
                  "value": {
                    "Int": {
                      "length": "I8",
                      "signed": false
                    }
                  },
                  "valid_range": {
                    "start": 0,
                    "end": 255
                  }
                }
              }
            },
            "abi_align": 1,
            "size": {
              "num_bits": 8
            }
          }
        }
      }
    ],
    [
      18,
      {
        "RefType": {
          "pointee_type": 15,
          "layout": {
            "fields": "Primitive",
            "variants": {
              "Single": {
                "index": 0
              }
            },
            "abi": {
              "Scalar": {
                "Initialized": {
                  "value": {
                    "Pointer": 0
                  },
                  "valid_range": {
                    "start": 1,
                    "end": 18446744073709551615
                  }
                }
              }
            },
            "abi_align": 8,
            "size": {
              "num_bits": 64
            }
          }
        }
      }
    ],
    [
      22,
      {
        "EnumType": {
          "name": "std::result::Result<(), std::fmt::Error>",
          "adt_def": 28,
          "discriminants": [
            0,
            1
          ],
          "fields": [
            [
              1
            ],
            [
              64
            ]
          ],
          "layout": {
            "fields": {
              "Arbitrary": {
                "offsets": [
                  {
                    "num_bits": 0
                  }
                ]
              }
            },
            "variants": {
              "Multiple": {
                "tag": {
                  "Initialized": {
                    "value": {
                      "Int": {
                        "length": "I8",
                        "signed": false
                      }
                    },
                    "valid_range": {
                      "start": 0,
                      "end": 1
                    }
                  }
                },
                "tag_encoding": "Direct",
                "tag_field": 0,
                "variants": [
                  {
                    "fields": {
                      "Arbitrary": {
                        "offsets": [
                          {
                            "num_bits": 8
                          }
                        ]
                      }
                    },
                    "variants": {
                      "Single": {
                        "index": 0
                      }
                    },
                    "abi": {
                      "Scalar": {
                        "Initialized": {
                          "value": {
                            "Int": {
                              "length": "I8",
                              "signed": false
                            }
                          },
                          "valid_range": {
                            "start": 0,
                            "end": 1
                          }
                        }
                      }
                    },
                    "abi_align": 1,
                    "size": {
                      "num_bits": 8
                    }
                  },
                  {
                    "fields": {
                      "Arbitrary": {
                        "offsets": [
                          {
                            "num_bits": 8
                          }
                        ]
                      }
                    },
                    "variants": {
                      "Single": {
                        "index": 1
                      }
                    },
                    "abi": {
                      "Scalar": {
                        "Initialized": {
                          "value": {
                            "Int": {
                              "length": "I8",
                              "signed": false
                            }
                          },
                          "valid_range": {
                            "start": 0,
                            "end": 1
                          }
                        }
                      }
                    },
                    "abi_align": 1,
                    "size": {
                      "num_bits": 8
                    }
                  }
                ]
              }
            },
            "abi": {
              "Scalar": {
                "Initialized": {
                  "value": {
                    "Int": {
                      "length": "I8",
                      "signed": false
                    }
                  },
                  "valid_range": {
                    "start": 0,
                    "end": 1
                  }
                }
              }
            },
            "abi_align": 1,
            "size": {
              "num_bits": 8
            }
          }
        }
      }
    ],
    [
      23,
      {
        "RefType": {
          "pointee_type": 25,
          "layout": {
            "fields": "Primitive",
            "variants": {
              "Single": {
                "index": 0
              }
            },
            "abi": {
              "Scalar": {
                "Initialized": {
                  "value": {
                    "Pointer": 0
                  },
                  "valid_range": {
                    "start": 1,
                    "end": 18446744073709551615
                  }
                }
              }
            },
            "abi_align": 8,
            "size": {
              "num_bits": 64
            }
          }
        }
      }
    ],
    [
      24,
      {
        "RefType": {
          "pointee_type": 58,
          "layout": {
            "fields": "Primitive",
            "variants": {
              "Single": {
                "index": 0
              }
            },
            "abi": {
              "Scalar": {
                "Initialized": {
                  "value": {
                    "Pointer": 0
                  },
                  "valid_range": {
                    "start": 1,
                    "end": 18446744073709551615
                  }
                }
              }
            },
            "abi_align": 8,
            "size": {
              "num_bits": 64
            }
          }
        }
      }
    ],
    [
      25,
      {
        "RefType": {
          "pointee_type": 9,
          "layout": {
            "fields": "Primitive",
            "variants": {
              "Single": {
                "index": 0
              }
            },
            "abi": {
              "Scalar": {
                "Initialized": {
                  "value": {
                    "Pointer": 0
                  },
                  "valid_range": {
                    "start": 1,
                    "end": 18446744073709551615
                  }
                }
              }
            },
            "abi_align": 8,
            "size": {
              "num_bits": 64
            }
          }
        }
      }
    ],
    [
      26,
      {
        "PrimitiveType": {
          "Uint": "U32"
        }
      }
    ],
    [
      31,
      {
        "PtrType": {
          "pointee_type": 12,
          "layout": {
            "fields": "Primitive",
            "variants": {
              "Single": {
                "index": 0
              }
            },
            "abi": {
              "Scalar": {
                "Initialized": {
                  "value": {
                    "Pointer": 0
                  },
                  "valid_range": {
                    "start": 0,
                    "end": 18446744073709551615
                  }
                }
              }
            },
            "abi_align": 8,
            "size": {
              "num_bits": 64
            }
          }
        }
      }
    ],
    [
      33,
      {
        "RefType": {
          "pointee_type": 12,
          "layout": {
            "fields": "Primitive",
            "variants": {
              "Single": {
                "index": 0
              }
            },
            "abi": {
              "Scalar": {
                "Initialized": {
                  "value": {
                    "Pointer": 0
                  },
                  "valid_range": {
                    "start": 1,
                    "end": 18446744073709551615
                  }
                }
              }
            },
            "abi_align": 8,
            "size": {
              "num_bits": 64
            }
          }
        }
      }
    ],
    [
      34,
      {
        "PtrType": {
          "pointee_type": 25,
          "layout": {
            "fields": "Primitive",
            "variants": {
              "Single": {
                "index": 0
              }
            },
            "abi": {
              "Scalar": {
                "Initialized": {
                  "value": {
                    "Pointer": 0
                  },
                  "valid_range": {
                    "start": 0,
                    "end": 18446744073709551615
                  }
                }
              }
            },
            "abi_align": 8,
            "size": {
              "num_bits": 64
            }
          }
        }
      }
    ],
    [
      35,
      {
        "PrimitiveType": "Bool"
      }
    ],
    [
      36,
      {
        "PtrType": {
          "pointee_type": 16,
          "layout": {
            "fields": "Primitive",
            "variants": {
              "Single": {
                "index": 0
              }
            },
            "abi": {
              "Scalar": {
                "Initialized": {
                  "value": {
                    "Pointer": 0
                  },
                  "valid_range": {
                    "start": 0,
                    "end": 18446744073709551615
                  }
                }
              }
            },
            "abi_align": 8,
            "size": {
              "num_bits": 64
            }
          }
        }
      }
    ],
    [
      38,
      {
        "RefType": {
          "pointee_type": 87,
          "layout": {
            "fields": {
              "Arbitrary": {
                "offsets": [
                  {
                    "num_bits": 0
                  },
                  {
                    "num_bits": 64
                  }
                ]
              }
            },
            "variants": {
              "Single": {
                "index": 0
              }
            },
            "abi": {
              "ScalarPair": [
                {
                  "Initialized": {
                    "value": {
                      "Pointer": 0
                    },
                    "valid_range": {
                      "start": 1,
                      "end": 18446744073709551615
                    }
                  }
                },
                {
                  "Initialized": {
                    "value": {
                      "Pointer": 0
                    },
                    "valid_range": {
                      "start": 1,
                      "end": 18446744073709551615
                    }
                  }
                }
              ]
            },
            "abi_align": 8,
            "size": {
              "num_bits": 128
            }
          }
        }
      }
    ],
    [
      39,
      "VoidType"
    ],
    [
      40,
      {
        "EnumType": {
          "name": "core::panicking::AssertKind",
          "adt_def": 14,
          "discriminants": [
            0,
            1,
            2
          ],
          "fields": [
            [],
            [],
            []
          ],
          "layout": {
            "fields": {
              "Arbitrary": {
                "offsets": [
                  {
                    "num_bits": 0
                  }
                ]
              }
            },
            "variants": {
              "Multiple": {
                "tag": {
                  "Initialized": {
                    "value": {
                      "Int": {
                        "length": "I8",
                        "signed": false
                      }
                    },
                    "valid_range": {
                      "start": 0,
                      "end": 2
                    }
                  }
                },
                "tag_encoding": "Direct",
                "tag_field": 0,
                "variants": [
                  {
                    "fields": {
                      "Arbitrary": {
                        "offsets": []
                      }
                    },
                    "variants": {
                      "Single": {
                        "index": 0
                      }
                    },
                    "abi": {
                      "Aggregate": {
                        "sized": true
                      }
                    },
                    "abi_align": 1,
                    "size": {
                      "num_bits": 8
                    }
                  },
                  {
                    "fields": {
                      "Arbitrary": {
                        "offsets": []
                      }
                    },
                    "variants": {
                      "Single": {
                        "index": 1
                      }
                    },
                    "abi": {
                      "Aggregate": {
                        "sized": true
                      }
                    },
                    "abi_align": 1,
                    "size": {
                      "num_bits": 8
                    }
                  },
                  {
                    "fields": {
                      "Arbitrary": {
                        "offsets": []
                      }
                    },
                    "variants": {
                      "Single": {
                        "index": 2
                      }
                    },
                    "abi": {
                      "Aggregate": {
                        "sized": true
                      }
                    },
                    "abi_align": 1,
                    "size": {
                      "num_bits": 8
                    }
                  }
                ]
              }
            },
            "abi": {
              "Scalar": {
                "Initialized": {
                  "value": {
                    "Int": {
                      "length": "I8",
                      "signed": false
                    }
                  },
                  "valid_range": {
                    "start": 0,
                    "end": 2
                  }
                }
              }
            },
            "abi_align": 1,
            "size": {
              "num_bits": 8
            }
          }
        }
      }
    ],
    [
      41,
      {
        "EnumType": {
          "name": "std::option::Option<std::fmt::Arguments<'_>>",
          "adt_def": 15,
          "discriminants": [
            0,
            1
          ],
          "fields": [
            [],
            [
              50
            ]
          ],
          "layout": {
            "fields": {
              "Arbitrary": {
                "offsets": [
                  {
                    "num_bits": 0
                  }
                ]
              }
            },
            "variants": {
              "Multiple": {
                "tag": {
                  "Initialized": {
                    "value": {
                      "Pointer": 0
                    },
                    "valid_range": {
                      "start": 1,
                      "end": 0
                    }
                  }
                },
                "tag_encoding": {
                  "Niche": {
                    "untagged_variant": 1,
                    "niche_variants": {
                      "start": 0,
                      "end": 0
                    },
                    "niche_start": 0
                  }
                },
                "tag_field": 0,
                "variants": [
                  {
                    "fields": {
                      "Arbitrary": {
                        "offsets": []
                      }
                    },
                    "variants": {
                      "Single": {
                        "index": 0
                      }
                    },
                    "abi": {
                      "Aggregate": {
                        "sized": true
                      }
                    },
                    "abi_align": 1,
                    "size": {
                      "num_bits": 0
                    }
                  },
                  {
                    "fields": {
                      "Arbitrary": {
                        "offsets": [
                          {
                            "num_bits": 0
                          }
                        ]
                      }
                    },
                    "variants": {
                      "Single": {
                        "index": 1
                      }
                    },
                    "abi": {
                      "Aggregate": {
                        "sized": true
                      }
                    },
                    "abi_align": 8,
                    "size": {
                      "num_bits": 384
                    }
                  }
                ]
              }
            },
            "abi": {
              "Aggregate": {
                "sized": true
              }
            },
            "abi_align": 8,
            "size": {
              "num_bits": 384
            }
          }
        }
      }
    ],
    [
      44,
      {
        "RefType": {
          "pointee_type": 66,
          "layout": {
            "fields": {
              "Arbitrary": {
                "offsets": [
                  {
                    "num_bits": 0
                  },
                  {
                    "num_bits": 64
                  }
                ]
              }
            },
            "variants": {
              "Single": {
                "index": 0
              }
            },
            "abi": {
              "ScalarPair": [
                {
                  "Initialized": {
                    "value": {
                      "Pointer": 0
                    },
                    "valid_range": {
                      "start": 1,
                      "end": 18446744073709551615
                    }
                  }
                },
                {
                  "Initialized": {
                    "value": {
                      "Int": {
                        "length": "I64",
                        "signed": false
                      }
                    },
                    "valid_range": {
                      "start": 0,
                      "end": 18446744073709551615
                    }
                  }
                }
              ]
            },
            "abi_align": 8,
            "size": {
              "num_bits": 128
            }
          }
        }
      }
    ],
    [
      45,
      {
        "RefType": {
          "pointee_type": 16,
          "layout": {
            "fields": "Primitive",
            "variants": {
              "Single": {
                "index": 0
              }
            },
            "abi": {
              "Scalar": {
                "Initialized": {
                  "value": {
                    "Pointer": 0
                  },
                  "valid_range": {
                    "start": 1,
                    "end": 18446744073709551615
                  }
                }
              }
            },
            "abi_align": 8,
            "size": {
              "num_bits": 64
            }
          }
        }
      }
    ],
    [
      46,
      {
        "PrimitiveType": {
          "Uint": "Usize"
        }
      }
    ],
    [
      47,
      {
        "ArrayType": {
          "elem_type": 9,
          "size": {
            "kind": {
              "Value": [
                46,
                {
                  "bytes": [
                    3,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                  ],
                  "provenance": {
                    "ptrs": []
                  },
                  "align": 8,
                  "mutability": "Mut"
                }
              ]
            },
            "id": 0
          },
          "layout": {
            "fields": {
              "Array": {
                "stride": {
                  "num_bits": 8
                },
                "count": 3
              }
            },
            "variants": {
              "Single": {
                "index": 0
              }
            },
            "abi": {
              "Aggregate": {
                "sized": true
              }
            },
            "abi_align": 1,
            "size": {
              "num_bits": 24
            }
          }
        }
      }
    ],
    [
      48,
      {
        "PtrType": {
          "pointee_type": 9,
          "layout": {
            "fields": "Primitive",
            "variants": {
              "Single": {
                "index": 0
              }
            },
            "abi": {
              "Scalar": {
                "Initialized": {
                  "value": {
                    "Pointer": 0
                  },
                  "valid_range": {
                    "start": 0,
                    "end": 18446744073709551615
                  }
                }
              }
            },
            "abi_align": 8,
            "size": {
              "num_bits": 64
            }
          }
        }
      }
    ],
    [
      50,
      {
        "StructType": {
          "name": "std::fmt::Arguments<'_>",
          "adt_def": 46,
          "fields": [
            69,
            70,
            71
          ],
          "layout": {
            "fields": {
              "Arbitrary": {
                "offsets": [
                  {
                    "num_bits": 0
                  },
                  {
                    "num_bits": 256
                  },
                  {
                    "num_bits": 128
                  }
                ]
              }
            },
            "variants": {
              "Single": {
                "index": 0
              }
            },
            "abi": {
              "Aggregate": {
                "sized": true
              }
            },
            "abi_align": 8,
            "size": {
              "num_bits": 384
            }
          }
        }
      }
    ],
    [
      51,
      {
        "PtrType": {
          "pointee_type": 9,
          "layout": {
            "fields": "Primitive",
            "variants": {
              "Single": {
                "index": 0
              }
            },
            "abi": {
              "Scalar": {
                "Initialized": {
                  "value": {
                    "Pointer": 0
                  },
                  "valid_range": {
                    "start": 0,
                    "end": 18446744073709551615
                  }
                }
              }
            },
            "abi_align": 8,
            "size": {
              "num_bits": 64
            }
          }
        }
      }
    ],
    [
      52,
      {
        "RefType": {
          "pointee_type": 9,
          "layout": {
            "fields": "Primitive",
            "variants": {
              "Single": {
                "index": 0
              }
            },
            "abi": {
              "Scalar": {
                "Initialized": {
                  "value": {
                    "Pointer": 0
                  },
                  "valid_range": {
                    "start": 1,
                    "end": 18446744073709551615
                  }
                }
              }
            },
            "abi_align": 8,
            "size": {
              "num_bits": 64
            }
          }
        }
      }
    ],
    [
      53,
      {
        "TupleType": {
          "types": [
            25,
            25
          ],
          "layout": {
            "fields": {
              "Arbitrary": {
                "offsets": [
                  {
                    "num_bits": 0
                  },
                  {
                    "num_bits": 64
                  }
                ]
              }
            },
            "variants": {
              "Single": {
                "index": 0
              }
            },
            "abi": {
              "ScalarPair": [
                {
                  "Initialized": {
                    "value": {
                      "Pointer": 0
                    },
                    "valid_range": {
                      "start": 1,
                      "end": 18446744073709551615
                    }
                  }
                },
                {
                  "Initialized": {
                    "value": {
                      "Pointer": 0
                    },
                    "valid_range": {
                      "start": 1,
                      "end": 18446744073709551615
                    }
                  }
                }
              ]
            },
            "abi_align": 8,
            "size": {
              "num_bits": 128
            }
          }
        }
      }
    ],
    [
      58,
      {
        "StructType": {
          "name": "std::fmt::Formatter<'_>",
          "adt_def": 18,
          "fields": [
            26,
            59,
            60,
            61,
            61,
            62
          ],
          "layout": {
            "fields": {
              "Arbitrary": {
                "offsets": [
                  {
                    "num_bits": 416
                  },
                  {
                    "num_bits": 384
                  },
                  {
                    "num_bits": 448
                  },
                  {
                    "num_bits": 0
                  },
                  {
                    "num_bits": 128
                  },
                  {
                    "num_bits": 256
                  }
                ]
              }
            },
            "variants": {
              "Single": {
                "index": 0
              }
            },
            "abi": {
              "Aggregate": {
                "sized": true
              }
            },
            "abi_align": 8,
            "size": {
              "num_bits": 512
            }
          }
        }
      }
    ],
    [
      59,
      {
        "PrimitiveType": "Char"
      }
    ],
    [
      60,
      {
        "EnumType": {
          "name": "core::fmt::rt::Alignment",
          "adt_def": 25,
          "discriminants": [
            0,
            1,
            2,
            3
          ],
          "fields": [
            [],
            [],
            [],
            []
          ],
          "layout": {
            "fields": {
              "Arbitrary": {
                "offsets": [
                  {
                    "num_bits": 0
                  }
                ]
              }
            },
            "variants": {
              "Multiple": {
                "tag": {
                  "Initialized": {
                    "value": {
                      "Int": {
                        "length": "I8",
                        "signed": false
                      }
                    },
                    "valid_range": {
                      "start": 0,
                      "end": 3
                    }
                  }
                },
                "tag_encoding": "Direct",
                "tag_field": 0,
                "variants": [
                  {
                    "fields": {
                      "Arbitrary": {
                        "offsets": []
                      }
                    },
                    "variants": {
                      "Single": {
                        "index": 0
                      }
                    },
                    "abi": {
                      "Aggregate": {
                        "sized": true
                      }
                    },
                    "abi_align": 1,
                    "size": {
                      "num_bits": 8
                    }
                  },
                  {
                    "fields": {
                      "Arbitrary": {
                        "offsets": []
                      }
                    },
                    "variants": {
                      "Single": {
                        "index": 1
                      }
                    },
                    "abi": {
                      "Aggregate": {
                        "sized": true
                      }
                    },
                    "abi_align": 1,
                    "size": {
                      "num_bits": 8
                    }
                  },
                  {
                    "fields": {
                      "Arbitrary": {
                        "offsets": []
                      }
                    },
                    "variants": {
                      "Single": {
                        "index": 2
                      }
                    },
                    "abi": {
                      "Aggregate": {
                        "sized": true
                      }
                    },
                    "abi_align": 1,
                    "size": {
                      "num_bits": 8
                    }
                  },
                  {
                    "fields": {
                      "Arbitrary": {
                        "offsets": []
                      }
                    },
                    "variants": {
                      "Single": {
                        "index": 3
                      }
                    },
                    "abi": {
                      "Aggregate": {
                        "sized": true
                      }
                    },
                    "abi_align": 1,
                    "size": {
                      "num_bits": 8
                    }
                  }
                ]
              }
            },
            "abi": {
              "Scalar": {
                "Initialized": {
                  "value": {
                    "Int": {
                      "length": "I8",
                      "signed": false
                    }
                  },
                  "valid_range": {
                    "start": 0,
                    "end": 3
                  }
                }
              }
            },
            "abi_align": 1,
            "size": {
              "num_bits": 8
            }
          }
        }
      }
    ],
    [
      61,
      {
        "EnumType": {
          "name": "std::option::Option<usize>",
          "adt_def": 15,
          "discriminants": [
            0,
            1
          ],
          "fields": [
            [],
            [
              46
            ]
          ],
          "layout": {
            "fields": {
              "Arbitrary": {
                "offsets": [
                  {
                    "num_bits": 0
                  }
                ]
              }
            },
            "variants": {
              "Multiple": {
                "tag": {
                  "Initialized": {
                    "value": {
                      "Int": {
                        "length": "I64",
                        "signed": false
                      }
                    },
                    "valid_range": {
                      "start": 0,
                      "end": 1
                    }
                  }
                },
                "tag_encoding": "Direct",
                "tag_field": 0,
                "variants": [
                  {
                    "fields": {
                      "Arbitrary": {
                        "offsets": []
                      }
                    },
                    "variants": {
                      "Single": {
                        "index": 0
                      }
                    },
                    "abi": {
                      "Aggregate": {
                        "sized": true
                      }
                    },
                    "abi_align": 1,
                    "size": {
                      "num_bits": 64
                    }
                  },
                  {
                    "fields": {
                      "Arbitrary": {
                        "offsets": [
                          {
                            "num_bits": 64
                          }
                        ]
                      }
                    },
                    "variants": {
                      "Single": {
                        "index": 1
                      }
                    },
                    "abi": {
                      "ScalarPair": [
                        {
                          "Initialized": {
                            "value": {
                              "Int": {
                                "length": "I64",
                                "signed": false
                              }
                            },
                            "valid_range": {
                              "start": 0,
                              "end": 1
                            }
                          }
                        },
                        {
                          "Union": {
                            "value": {
                              "Int": {
                                "length": "I64",
                                "signed": false
                              }
                            }
                          }
                        }
                      ]
                    },
                    "abi_align": 8,
                    "size": {
                      "num_bits": 128
                    }
                  }
                ]
              }
            },
            "abi": {
              "ScalarPair": [
                {
                  "Initialized": {
                    "value": {
                      "Int": {
                        "length": "I64",
                        "signed": false
                      }
                    },
                    "valid_range": {
                      "start": 0,
                      "end": 1
                    }
                  }
                },
                {
                  "Union": {
                    "value": {
                      "Int": {
                        "length": "I64",
                        "signed": false
                      }
                    }
                  }
                }
              ]
            },
            "abi_align": 8,
            "size": {
              "num_bits": 128
            }
          }
        }
      }
    ],
    [
      62,
      {
        "RefType": {
          "pointee_type": 63,
          "layout": {
            "fields": {
              "Arbitrary": {
                "offsets": [
                  {
                    "num_bits": 0
                  },
                  {
                    "num_bits": 64
                  }
                ]
              }
            },
            "variants": {
              "Single": {
                "index": 0
              }
            },
            "abi": {
              "ScalarPair": [
                {
                  "Initialized": {
                    "value": {
                      "Pointer": 0
                    },
                    "valid_range": {
                      "start": 1,
                      "end": 18446744073709551615
                    }
                  }
                },
                {
                  "Initialized": {
                    "value": {
                      "Pointer": 0
                    },
                    "valid_range": {
                      "start": 1,
                      "end": 18446744073709551615
                    }
                  }
                }
              ]
            },
            "abi_align": 8,
            "size": {
              "num_bits": 128
            }
          }
        }
      }
    ],
    [
      64,
      {
        "StructType": {
          "name": "std::fmt::Error",
          "adt_def": 31,
          "fields": [],
          "layout": {
            "fields": {
              "Arbitrary": {
                "offsets": []
              }
            },
            "variants": {
              "Single": {
                "index": 0
              }
            },
            "abi": {
              "Aggregate": {
                "sized": true
              }
            },
            "abi_align": 1,
            "size": {
              "num_bits": 0
            }
          }
        }
      }
    ],
    [
      65,
      {
        "RefType": {
          "pointee_type": 67,
          "layout": {
            "fields": "Primitive",
            "variants": {
              "Single": {
                "index": 0
              }
            },
            "abi": {
              "Scalar": {
                "Initialized": {
                  "value": {
                    "Pointer": 0
                  },
                  "valid_range": {
                    "start": 1,
                    "end": 18446744073709551615
                  }
                }
              }
            },
            "abi_align": 8,
            "size": {
              "num_bits": 64
            }
          }
        }
      }
    ],
    [
      66,
      {
        "PrimitiveType": "Str"
      }
    ],
    [
      67,
      {
        "StructType": {
          "name": "std::panic::Location<'_>",
          "adt_def": 36,
          "fields": [
            44,
            26,
            26
          ],
          "layout": {
            "fields": {
              "Arbitrary": {
                "offsets": [
                  {
                    "num_bits": 0
                  },
                  {
                    "num_bits": 128
                  },
                  {
                    "num_bits": 160
                  }
                ]
              }
            },
            "variants": {
              "Single": {
                "index": 0
              }
            },
            "abi": {
              "Aggregate": {
                "sized": true
              }
            },
            "abi_align": 8,
            "size": {
              "num_bits": 192
            }
          }
        }
      }
    ],
    [
      69,
      {
        "RefType": {
          "pointee_type": 72,
          "layout": {
            "fields": {
              "Arbitrary": {
                "offsets": [
                  {
                    "num_bits": 0
                  },
                  {
                    "num_bits": 64
                  }
                ]
              }
            },
            "variants": {
              "Single": {
                "index": 0
              }
            },
            "abi": {
              "ScalarPair": [
                {
                  "Initialized": {
                    "value": {
                      "Pointer": 0
                    },
                    "valid_range": {
                      "start": 1,
                      "end": 18446744073709551615
                    }
                  }
                },
                {
                  "Initialized": {
                    "value": {
                      "Int": {
                        "length": "I64",
                        "signed": false
                      }
                    },
                    "valid_range": {
                      "start": 0,
                      "end": 18446744073709551615
                    }
                  }
                }
              ]
            },
            "abi_align": 8,
            "size": {
              "num_bits": 128
            }
          }
        }
      }
    ],
    [
      70,
      {
        "EnumType": {
          "name": "std::option::Option<&[core::fmt::rt::Placeholder]>",
          "adt_def": 15,
          "discriminants": [
            0,
            1
          ],
          "fields": [
            [],
            [
              73
            ]
          ],
          "layout": {
            "fields": {
              "Arbitrary": {
                "offsets": [
                  {
                    "num_bits": 0
                  }
                ]
              }
            },
            "variants": {
              "Multiple": {
                "tag": {
                  "Initialized": {
                    "value": {
                      "Pointer": 0
                    },
                    "valid_range": {
                      "start": 1,
                      "end": 0
                    }
                  }
                },
                "tag_encoding": {
                  "Niche": {
                    "untagged_variant": 1,
                    "niche_variants": {
                      "start": 0,
                      "end": 0
                    },
                    "niche_start": 0
                  }
                },
                "tag_field": 0,
                "variants": [
                  {
                    "fields": {
                      "Arbitrary": {
                        "offsets": []
                      }
                    },
                    "variants": {
                      "Single": {
                        "index": 0
                      }
                    },
                    "abi": {
                      "Aggregate": {
                        "sized": true
                      }
                    },
                    "abi_align": 1,
                    "size": {
                      "num_bits": 0
                    }
                  },
                  {
                    "fields": {
                      "Arbitrary": {
                        "offsets": [
                          {
                            "num_bits": 0
                          }
                        ]
                      }
                    },
                    "variants": {
                      "Single": {
                        "index": 1
                      }
                    },
                    "abi": {
                      "ScalarPair": [
                        {
                          "Initialized": {
                            "value": {
                              "Pointer": 0
                            },
                            "valid_range": {
                              "start": 1,
                              "end": 18446744073709551615
                            }
                          }
                        },
                        {
                          "Initialized": {
                            "value": {
                              "Int": {
                                "length": "I64",
                                "signed": false
                              }
                            },
                            "valid_range": {
                              "start": 0,
                              "end": 18446744073709551615
                            }
                          }
                        }
                      ]
                    },
                    "abi_align": 8,
                    "size": {
                      "num_bits": 128
                    }
                  }
                ]
              }
            },
            "abi": {
              "ScalarPair": [
                {
                  "Initialized": {
                    "value": {
                      "Pointer": 0
                    },
                    "valid_range": {
                      "start": 1,
                      "end": 0
                    }
                  }
                },
                {
                  "Union": {
                    "value": {
                      "Int": {
                        "length": "I64",
                        "signed": false
                      }
                    }
                  }
                }
              ]
            },
            "abi_align": 8,
            "size": {
              "num_bits": 128
            }
          }
        }
      }
    ],
    [
      71,
      {
        "RefType": {
          "pointee_type": 77,
          "layout": {
            "fields": {
              "Arbitrary": {
                "offsets": [
                  {
                    "num_bits": 0
                  },
                  {
                    "num_bits": 64
                  }
                ]
              }
            },
            "variants": {
              "Single": {
                "index": 0
              }
            },
            "abi": {
              "ScalarPair": [
                {
                  "Initialized": {
                    "value": {
                      "Pointer": 0
                    },
                    "valid_range": {
                      "start": 1,
                      "end": 18446744073709551615
                    }
                  }
                },
                {
                  "Initialized": {
                    "value": {
                      "Int": {
                        "length": "I64",
                        "signed": false
                      }
                    },
                    "valid_range": {
                      "start": 0,
                      "end": 18446744073709551615
                    }
                  }
                }
              ]
            },
            "abi_align": 8,
            "size": {
              "num_bits": 128
            }
          }
        }
      }
    ],
    [
      72,
      {
        "ArrayType": {
          "elem_type": 44,
          "size": null,
          "layout": {
            "fields": {
              "Array": {
                "stride": {
                  "num_bits": 128
                },
                "count": 0
              }
            },
            "variants": {
              "Single": {
                "index": 0
              }
            },
            "abi": {
              "Aggregate": {
                "sized": false
              }
            },
            "abi_align": 8,
            "size": {
              "num_bits": 0
            }
          }
        }
      }
    ],
    [
      73,
      {
        "RefType": {
          "pointee_type": 74,
          "layout": {
            "fields": {
              "Arbitrary": {
                "offsets": [
                  {
                    "num_bits": 0
                  },
                  {
                    "num_bits": 64
                  }
                ]
              }
            },
            "variants": {
              "Single": {
                "index": 0
              }
            },
            "abi": {
              "ScalarPair": [
                {
                  "Initialized": {
                    "value": {
                      "Pointer": 0
                    },
                    "valid_range": {
                      "start": 1,
                      "end": 18446744073709551615
                    }
                  }
                },
                {
                  "Initialized": {
                    "value": {
                      "Int": {
                        "length": "I64",
                        "signed": false
                      }
                    },
                    "valid_range": {
                      "start": 0,
                      "end": 18446744073709551615
                    }
                  }
                }
              ]
            },
            "abi_align": 8,
            "size": {
              "num_bits": 128
            }
          }
        }
      }
    ],
    [
      74,
      {
        "ArrayType": {
          "elem_type": 75,
          "size": null,
          "layout": {
            "fields": {
              "Array": {
                "stride": {
                  "num_bits": 448
                },
                "count": 0
              }
            },
            "variants": {
              "Single": {
                "index": 0
              }
            },
            "abi": {
              "Aggregate": {
                "sized": false
              }
            },
            "abi_align": 8,
            "size": {
              "num_bits": 0
            }
          }
        }
      }
    ],
    [
      75,
      {
        "StructType": {
          "name": "core::fmt::rt::Placeholder",
          "adt_def": 50,
          "fields": [
            46,
            59,
            60,
            26,
            76,
            76
          ],
          "layout": {
            "fields": {
              "Arbitrary": {
                "offsets": [
                  {
                    "num_bits": 256
                  },
                  {
                    "num_bits": 320
                  },
                  {
                    "num_bits": 384
                  },
                  {
                    "num_bits": 352
                  },
                  {
                    "num_bits": 0
                  },
                  {
                    "num_bits": 128
                  }
                ]
              }
            },
            "variants": {
              "Single": {
                "index": 0
              }
            },
            "abi": {
              "Aggregate": {
                "sized": true
              }
            },
            "abi_align": 8,
            "size": {
              "num_bits": 448
            }
          }
        }
      }
    ],
    [
      76,
      {
        "EnumType": {
          "name": "core::fmt::rt::Count",
          "adt_def": 57,
          "discriminants": [
            0,
            1,
            2
          ],
          "fields": [
            [
              46
            ],
            [
              46
            ],
            []
          ],
          "layout": {
            "fields": {
              "Arbitrary": {
                "offsets": [
                  {
                    "num_bits": 0
                  }
                ]
              }
            },
            "variants": {
              "Multiple": {
                "tag": {
                  "Initialized": {
                    "value": {
                      "Int": {
                        "length": "I64",
                        "signed": false
                      }
                    },
                    "valid_range": {
                      "start": 0,
                      "end": 2
                    }
                  }
                },
                "tag_encoding": "Direct",
                "tag_field": 0,
                "variants": [
                  {
                    "fields": {
                      "Arbitrary": {
                        "offsets": [
                          {
                            "num_bits": 64
                          }
                        ]
                      }
                    },
                    "variants": {
                      "Single": {
                        "index": 0
                      }
                    },
                    "abi": {
                      "ScalarPair": [
                        {
                          "Initialized": {
                            "value": {
                              "Int": {
                                "length": "I64",
                                "signed": false
                              }
                            },
                            "valid_range": {
                              "start": 0,
                              "end": 2
                            }
                          }
                        },
                        {
                          "Union": {
                            "value": {
                              "Int": {
                                "length": "I64",
                                "signed": false
                              }
                            }
                          }
                        }
                      ]
                    },
                    "abi_align": 8,
                    "size": {
                      "num_bits": 128
                    }
                  },
                  {
                    "fields": {
                      "Arbitrary": {
                        "offsets": [
                          {
                            "num_bits": 64
                          }
                        ]
                      }
                    },
                    "variants": {
                      "Single": {
                        "index": 1
                      }
                    },
                    "abi": {
                      "ScalarPair": [
                        {
                          "Initialized": {
                            "value": {
                              "Int": {
                                "length": "I64",
                                "signed": false
                              }
                            },
                            "valid_range": {
                              "start": 0,
                              "end": 2
                            }
                          }
                        },
                        {
                          "Union": {
                            "value": {
                              "Int": {
                                "length": "I64",
                                "signed": false
                              }
                            }
                          }
                        }
                      ]
                    },
                    "abi_align": 8,
                    "size": {
                      "num_bits": 128
                    }
                  },
                  {
                    "fields": {
                      "Arbitrary": {
                        "offsets": []
                      }
                    },
                    "variants": {
                      "Single": {
                        "index": 2
                      }
                    },
                    "abi": {
                      "Aggregate": {
                        "sized": true
                      }
                    },
                    "abi_align": 1,
                    "size": {
                      "num_bits": 64
                    }
                  }
                ]
              }
            },
            "abi": {
              "ScalarPair": [
                {
                  "Initialized": {
                    "value": {
                      "Int": {
                        "length": "I64",
                        "signed": false
                      }
                    },
                    "valid_range": {
                      "start": 0,
                      "end": 2
                    }
                  }
                },
                {
                  "Union": {
                    "value": {
                      "Int": {
                        "length": "I64",
                        "signed": false
                      }
                    }
                  }
                }
              ]
            },
            "abi_align": 8,
            "size": {
              "num_bits": 128
            }
          }
        }
      }
    ],
    [
      77,
      {
        "ArrayType": {
          "elem_type": 78,
          "size": null,
          "layout": {
            "fields": {
              "Array": {
                "stride": {
                  "num_bits": 128
                },
                "count": 0
              }
            },
            "variants": {
              "Single": {
                "index": 0
              }
            },
            "abi": {
              "Aggregate": {
                "sized": false
              }
            },
            "abi_align": 8,
            "size": {
              "num_bits": 0
            }
          }
        }
      }
    ],
    [
      78,
      {
        "StructType": {
          "name": "core::fmt::rt::Argument<'_>",
          "adt_def": 60,
          "fields": [
            79
          ],
          "layout": {
            "fields": {
              "Arbitrary": {
                "offsets": [
                  {
                    "num_bits": 0
                  }
                ]
              }
            },
            "variants": {
              "Single": {
                "index": 0
              }
            },
            "abi": {
              "Aggregate": {
                "sized": true
              }
            },
            "abi_align": 8,
            "size": {
              "num_bits": 128
            }
          }
        }
      }
    ],
    [
      79,
      {
        "EnumType": {
          "name": "core::fmt::rt::ArgumentType<'_>",
          "adt_def": 62,
          "discriminants": [
            0,
            1
          ],
          "fields": [
            [
              80,
              81,
              82
            ],
            [
              46
            ]
          ],
          "layout": {
            "fields": {
              "Arbitrary": {
                "offsets": [
                  {
                    "num_bits": 0
                  }
                ]
              }
            },
            "variants": {
              "Multiple": {
                "tag": {
                  "Initialized": {
                    "value": {
                      "Pointer": 0
                    },
                    "valid_range": {
                      "start": 1,
                      "end": 0
                    }
                  }
                },
                "tag_encoding": {
                  "Niche": {
                    "untagged_variant": 0,
                    "niche_variants": {
                      "start": 1,
                      "end": 1
                    },
                    "niche_start": 0
                  }
                },
                "tag_field": 0,
                "variants": [
                  {
                    "fields": {
                      "Arbitrary": {
                        "offsets": [
                          {
                            "num_bits": 0
                          },
                          {
                            "num_bits": 64
                          },
                          {
                            "num_bits": 128
                          }
                        ]
                      }
                    },
                    "variants": {
                      "Single": {
                        "index": 0
                      }
                    },
                    "abi": {
                      "ScalarPair": [
                        {
                          "Initialized": {
                            "value": {
                              "Pointer": 0
                            },
                            "valid_range": {
                              "start": 1,
                              "end": 18446744073709551615
                            }
                          }
                        },
                        {
                          "Initialized": {
                            "value": {
                              "Pointer": 0
                            },
                            "valid_range": {
                              "start": 1,
                              "end": 18446744073709551615
                            }
                          }
                        }
                      ]
                    },
                    "abi_align": 8,
                    "size": {
                      "num_bits": 128
                    }
                  },
                  {
                    "fields": {
                      "Arbitrary": {
                        "offsets": [
                          {
                            "num_bits": 64
                          }
                        ]
                      }
                    },
                    "variants": {
                      "Single": {
                        "index": 1
                      }
                    },
                    "abi": {
                      "Aggregate": {
                        "sized": true
                      }
                    },
                    "abi_align": 8,
                    "size": {
                      "num_bits": 128
                    }
                  }
                ]
              }
            },
            "abi": {
              "Aggregate": {
                "sized": true
              }
            },
            "abi_align": 8,
            "size": {
              "num_bits": 128
            }
          }
        }
      }
    ],
    [
      80,
      {
        "StructType": {
          "name": "std::ptr::NonNull<()>",
          "adt_def": 67,
          "fields": [
            83
          ],
          "layout": {
            "fields": {
              "Arbitrary": {
                "offsets": [
                  {
                    "num_bits": 0
                  }
                ]
              }
            },
            "variants": {
              "Single": {
                "index": 0
              }
            },
            "abi": {
              "Scalar": {
                "Initialized": {
                  "value": {
                    "Pointer": 0
                  },
                  "valid_range": {
                    "start": 1,
                    "end": 18446744073709551615
                  }
                }
              }
            },
            "abi_align": 8,
            "size": {
              "num_bits": 64
            }
          }
        }
      }
    ],
    [
      82,
      {
        "StructType": {
          "name": "std::marker::PhantomData<&()>",
          "adt_def": 69,
          "fields": [],
          "layout": {
            "fields": {
              "Arbitrary": {
                "offsets": []
              }
            },
            "variants": {
              "Single": {
                "index": 0
              }
            },
            "abi": {
              "Aggregate": {
                "sized": true
              }
            },
            "abi_align": 1,
            "size": {
              "num_bits": 0
            }
          }
        }
      }
    ],
    [
      83,
      {
        "PtrType": {
          "pointee_type": 1,
          "layout": {
            "fields": "Primitive",
            "variants": {
              "Single": {
                "index": 0
              }
            },
            "abi": {
              "Scalar": {
                "Initialized": {
                  "value": {
                    "Pointer": 0
                  },
                  "valid_range": {
                    "start": 0,
                    "end": 18446744073709551615
                  }
                }
              }
            },
            "abi_align": 8,
            "size": {
              "num_bits": 64
            }
          }
        }
      }
    ],
    [
      85,
      {
        "RefType": {
          "pointee_type": 1,
          "layout": {
            "fields": "Primitive",
            "variants": {
              "Single": {
                "index": 0
              }
            },
            "abi": {
              "Scalar": {
                "Initialized": {
                  "value": {
                    "Pointer": 0
                  },
                  "valid_range": {
                    "start": 1,
                    "end": 18446744073709551615
                  }
                }
              }
            },
            "abi_align": 8,
            "size": {
              "num_bits": 64
            }
          }
        }
      }
    ]
  ],
  "spans": [
    [
      0,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/rt.rs",
        194,
        17,
        194,
        36
      ]
    ],
    [
      1,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/rt.rs",
        194,
        17,
        199,
        6
      ]
    ],
    [
      2,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/rt.rs",
        195,
        9,
        195,
        93
      ]
    ],
    [
      3,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/rt.rs",
        195,
        10,
        195,
        93
      ]
    ],
    [
      4,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/rt.rs",
        201,
        2,
        201,
        2
      ]
    ],
    [
      5,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/rt.rs",
        199,
        5,
        199,
        6
      ]
    ],
    [
      6,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/rt.rs",
        194,
        12,
        194,
        13
      ]
    ],
    [
      7,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/rt.rs",
        199,
        6,
        199,
        7
      ]
    ],
    [
      9,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/rt.rs",
        189,
        5,
        189,
        9
      ]
    ],
    [
      10,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/rt.rs",
        190,
        5,
        190,
        9
      ]
    ],
    [
      11,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/rt.rs",
        191,
        5,
        191,
        9
      ]
    ],
    [
      12,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/rt.rs",
        192,
        5,
        192,
        12
      ]
    ],
    [
      13,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/rt.rs",
        188,
        1,
        201,
        2
      ]
    ],
    [
      14,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/rt.rs",
        195,
        18,
        195,
        69
      ]
    ],
    [
      15,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/rt.rs",
        195,
        18,
        195,
        75
      ]
    ],
    [
      16,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/rt.rs",
        195,
        18,
        195,
        84
      ]
    ],
    [
      17,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/rt.rs",
        195,
        70,
        195,
        74
      ]
    ],
    [
      18,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/rt.rs",
        195,
        76,
        195,
        82
      ]
    ],
    [
      19,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/rt.rs",
        195,
        74,
        195,
        75
      ]
    ],
    [
      20,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/rt.rs",
        195,
        93,
        195,
        93
      ]
    ],
    [
      21,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/rt.rs",
        195,
        83,
        195,
        84
      ]
    ],
    [
      22,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/process.rs",
        2053,
        9,
        2053,
        15
      ]
    ],
    [
      23,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/pal/unix/process/process_common.rs",
        636,
        9,
        636,
        15
      ]
    ],
    [
      24,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/pal/unix/process/process_common.rs",
        636,
        9,
        636,
        22
      ]
    ],
    [
      25,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/pal/unix/process/process_common.rs",
        636,
        21,
        636,
        22
      ]
    ],
    [
      26,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/process.rs",
        2053,
        23,
        2053,
        24
      ]
    ],
    [
      27,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/rt.rs",
        195,
        92,
        195,
        93
      ]
    ],
    [
      29,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/process.rs",
        2052,
        19,
        2052,
        23
      ]
    ],
    [
      30,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/pal/unix/process/process_common.rs",
        635,
        19,
        635,
        24
      ]
    ],
    [
      31,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/backtrace.rs",
        154,
        18,
        154,
        19
      ]
    ],
    [
      32,
      [
        "no-location",
        0,
        0,
        0,
        0
      ]
    ],
    [
      33,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/backtrace.rs",
        154,
        18,
        154,
        21
      ]
    ],
    [
      34,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/hint.rs",
        389,
        5,
        389,
        33
      ]
    ],
    [
      35,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/hint.rs",
        389,
        5,
        389,
        40
      ]
    ],
    [
      36,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/backtrace.rs",
        160,
        2,
        160,
        2
      ]
    ],
    [
      38,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/backtrace.rs",
        150,
        43,
        150,
        44
      ]
    ],
    [
      40,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/backtrace.rs",
        154,
        9,
        154,
        15
      ]
    ],
    [
      41,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/hint.rs",
        388,
        27,
        388,
        32
      ]
    ],
    [
      42,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/backtrace.rs",
        150,
        1,
        160,
        2
      ]
    ],
    [
      43,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/mod.rs",
        2393,
        62,
        2393,
        70
      ]
    ],
    [
      44,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/mod.rs",
        2393,
        62,
        2393,
        82
      ]
    ],
    [
      45,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/mod.rs",
        2393,
        71,
        2393,
        78
      ]
    ],
    [
      46,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/mod.rs",
        2393,
        84,
        2393,
        84
      ]
    ],
    [
      48,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/mod.rs",
        2393,
        20,
        2393,
        25
      ]
    ],
    [
      49,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/mod.rs",
        2393,
        27,
        2393,
        28
      ]
    ],
    [
      50,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/mod.rs",
        2393,
        13,
        2393,
        84
      ]
    ],
    [
      51,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/num.rs",
        181,
        24,
        181,
        43
      ]
    ],
    [
      52,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/mod.rs",
        1937,
        9,
        1937,
        59
      ]
    ],
    [
      53,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/mod.rs",
        1937,
        9,
        1937,
        19
      ]
    ],
    [
      54,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/mod.rs",
        1937,
        58,
        1937,
        59
      ]
    ],
    [
      55,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/num.rs",
        182,
        25,
        182,
        43
      ]
    ],
    [
      56,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/num.rs",
        182,
        25,
        182,
        52
      ]
    ],
    [
      57,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/num.rs",
        183,
        31,
        183,
        50
      ]
    ],
    [
      58,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/mod.rs",
        1941,
        9,
        1941,
        59
      ]
    ],
    [
      59,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/mod.rs",
        1941,
        9,
        1941,
        19
      ]
    ],
    [
      60,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/mod.rs",
        1941,
        58,
        1941,
        59
      ]
    ],
    [
      61,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/num.rs",
        184,
        25,
        184,
        43
      ]
    ],
    [
      62,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/num.rs",
        184,
        25,
        184,
        52
      ]
    ],
    [
      63,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/num.rs",
        186,
        25,
        186,
        42
      ]
    ],
    [
      64,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/num.rs",
        186,
        25,
        186,
        51
      ]
    ],
    [
      65,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/num.rs",
        181,
        21,
        187,
        22
      ]
    ],
    [
      66,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/num.rs",
        188,
        18,
        188,
        18
      ]
    ],
    [
      68,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/num.rs",
        180,
        24,
        180,
        29
      ]
    ],
    [
      69,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/num.rs",
        180,
        31,
        180,
        32
      ]
    ],
    [
      70,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/mod.rs",
        1936,
        24,
        1936,
        29
      ]
    ],
    [
      71,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/mod.rs",
        1940,
        24,
        1940,
        29
      ]
    ],
    [
      72,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/num.rs",
        180,
        17,
        188,
        18
      ]
    ],
    [
      73,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/function.rs",
        250,
        5,
        250,
        71
      ]
    ],
    [
      74,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/mod.rs",
        521,
        1,
        521,
        56
      ]
    ],
    [
      75,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/mod.rs",
        2074,
        2,
        2074,
        2
      ]
    ],
    [
      76,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/mod.rs",
        2073,
        5,
        2073,
        11
      ]
    ],
    [
      78,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/mod.rs",
        2072,
        22,
        2072,
        23
      ]
    ],
    [
      79,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/mod.rs",
        2072,
        35,
        2072,
        36
      ]
    ],
    [
      80,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/mod.rs",
        2072,
        1,
        2074,
        2
      ]
    ],
    [
      81,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs",
        373,
        5,
        373,
        24
      ]
    ],
    [
      82,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs",
        373,
        5,
        373,
        51
      ]
    ],
    [
      83,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs",
        373,
        31,
        373,
        36
      ]
    ],
    [
      84,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs",
        373,
        38,
        373,
        44
      ]
    ],
    [
      86,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs",
        364,
        5,
        364,
        9
      ]
    ],
    [
      87,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs",
        365,
        5,
        365,
        9
      ]
    ],
    [
      88,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs",
        366,
        5,
        366,
        10
      ]
    ],
    [
      89,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs",
        367,
        5,
        367,
        9
      ]
    ],
    [
      90,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs",
        363,
        1,
        374,
        2
      ]
    ],
    [
      91,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/process.rs",
        2424,
        6,
        2424,
        6
      ]
    ],
    [
      92,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/process.rs",
        2423,
        9,
        2423,
        26
      ]
    ],
    [
      94,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/process.rs",
        2422,
        15,
        2422,
        19
      ]
    ],
    [
      95,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/process.rs",
        2422,
        5,
        2424,
        6
      ]
    ],
    [
      96,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        6,
        13,
        6,
        60
      ]
    ],
    [
      97,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        2,
        17,
        2,
        23
      ]
    ],
    [
      98,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        3,
        17,
        3,
        23
      ]
    ],
    [
      99,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        4,
        18,
        4,
        24
      ]
    ],
    [
      100,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        6,
        14,
        6,
        19
      ]
    ],
    [
      101,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        6,
        39,
        6,
        45
      ]
    ],
    [
      102,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        7,
        13,
        7,
        25
      ]
    ],
    [
      103,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        7,
        13,
        7,
        40
      ]
    ],
    [
      104,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        7,
        26,
        7,
        31
      ]
    ],
    [
      105,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        7,
        33,
        7,
        39
      ]
    ],
    [
      106,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        6,
        5,
        6,
        61
      ]
    ],
    [
      107,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        8,
        2,
        8,
        2
      ]
    ],
    [
      108,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        7,
        5,
        7,
        41
      ]
    ],
    [
      110,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        2,
        9,
        2,
        14
      ]
    ],
    [
      111,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        3,
        9,
        3,
        14
      ]
    ],
    [
      112,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        4,
        9,
        4,
        15
      ]
    ],
    [
      115,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        1,
        1,
        8,
        2
      ]
    ],
    [
      116,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        14,
        13,
        14,
        60
      ]
    ],
    [
      117,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        11,
        16,
        11,
        22
      ]
    ],
    [
      118,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        12,
        17,
        12,
        23
      ]
    ],
    [
      119,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        14,
        14,
        14,
        19
      ]
    ],
    [
      120,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        14,
        39,
        14,
        45
      ]
    ],
    [
      121,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        15,
        2,
        15,
        2
      ]
    ],
    [
      122,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        14,
        5,
        14,
        61
      ]
    ],
    [
      124,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        11,
        9,
        11,
        13
      ]
    ],
    [
      125,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        12,
        9,
        12,
        14
      ]
    ],
    [
      128,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        10,
        1,
        15,
        2
      ]
    ],
    [
      129,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        19,
        18,
        19,
        26
      ]
    ],
    [
      130,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        18,
        18,
        18,
        22
      ]
    ],
    [
      131,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        18,
        24,
        18,
        25
      ]
    ],
    [
      132,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        18,
        27,
        18,
        28
      ]
    ],
    [
      133,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        18,
        17,
        18,
        29
      ]
    ],
    [
      134,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        19,
        24,
        19,
        25
      ]
    ],
    [
      135,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        20,
        24,
        20,
        32
      ]
    ],
    [
      136,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        19,
        17,
        19,
        26
      ]
    ],
    [
      137,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        20,
        30,
        20,
        31
      ]
    ],
    [
      138,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        21,
        19,
        21,
        27
      ]
    ],
    [
      139,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        20,
        23,
        20,
        32
      ]
    ],
    [
      140,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        21,
        25,
        21,
        26
      ]
    ],
    [
      141,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        23,
        13,
        23,
        63
      ]
    ],
    [
      142,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        21,
        18,
        21,
        27
      ]
    ],
    [
      143,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        23,
        14,
        23,
        19
      ]
    ],
    [
      144,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        23,
        38,
        23,
        49
      ]
    ],
    [
      145,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        24,
        13,
        24,
        58
      ]
    ],
    [
      146,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        24,
        14,
        24,
        19
      ]
    ],
    [
      147,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        24,
        38,
        24,
        44
      ]
    ],
    [
      148,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        23,
        5,
        23,
        64
      ]
    ],
    [
      149,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        25,
        2,
        25,
        2
      ]
    ],
    [
      150,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        24,
        5,
        24,
        59
      ]
    ],
    [
      152,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        18,
        9,
        18,
        14
      ]
    ],
    [
      153,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        19,
        9,
        19,
        14
      ]
    ],
    [
      154,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        20,
        9,
        20,
        20
      ]
    ],
    [
      155,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        21,
        9,
        21,
        15
      ]
    ],
    [
      160,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        17,
        1,
        25,
        2
      ]
    ],
    [
      161,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs",
        46,
        21,
        46,
        46
      ]
    ],
    [
      162,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        28,
        20,
        28,
        24
      ]
    ],
    [
      163,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        29,
        15,
        29,
        24
      ]
    ],
    [
      164,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        32,
        16,
        32,
        17
      ]
    ],
    [
      165,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        32,
        9,
        32,
        17
      ]
    ],
    [
      166,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs",
        44,
        16,
        44,
        22
      ]
    ],
    [
      167,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs",
        44,
        24,
        44,
        31
      ]
    ],
    [
      168,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs",
        44,
        15,
        44,
        32
      ]
    ],
    [
      169,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs",
        45,
        14,
        45,
        22
      ]
    ],
    [
      170,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs",
        45,
        24,
        45,
        33
      ]
    ],
    [
      171,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs",
        46,
        22,
        46,
        31
      ]
    ],
    [
      172,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs",
        46,
        35,
        46,
        45
      ]
    ],
    [
      173,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        36,
        2,
        36,
        2
      ]
    ],
    [
      174,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs",
        51,
        21,
        51,
        53
      ]
    ],
    [
      175,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs",
        51,
        21,
        51,
        114
      ]
    ],
    [
      176,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs",
        47,
        32,
        47,
        65
      ]
    ],
    [
      177,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs",
        51,
        85,
        51,
        113
      ]
    ],
    [
      179,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        28,
        9,
        28,
        17
      ]
    ],
    [
      180,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        29,
        9,
        29,
        12
      ]
    ],
    [
      181,
      [
        "/Users/steven/.rustup/toolchains/nightly-2024-11-29-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs",
        47,
        25,
        47,
        29
      ]
    ],
    [
      182,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        27,
        1,
        36,
        2
      ]
    ],
    [
      183,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        39,
        5,
        39,
        36
      ]
    ],
    [
      184,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        39,
        5,
        39,
        38
      ]
    ],
    [
      185,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        40,
        5,
        40,
        43
      ]
    ],
    [
      186,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        40,
        5,
        40,
        45
      ]
    ],
    [
      187,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        41,
        5,
        41,
        41
      ]
    ],
    [
      188,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        41,
        5,
        41,
        43
      ]
    ],
    [
      189,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        42,
        5,
        42,
        35
      ]
    ],
    [
      190,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        42,
        5,
        42,
        37
      ]
    ],
    [
      191,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        43,
        2,
        43,
        2
      ]
    ],
    [
      193,
      [
        "/Users/steven/Desktop/projs/mir-semantics/kmir/src/tests/integration/data/exec-smir/pointers/ref_ptr_cases.rs",
        38,
        1,
        43,
        2
      ]
    ]
  ],
  "debug": null,
  "machine": {
    "endian": "Little",
    "pointer_width": {
      "num_bits": 64
    }
  }
}
