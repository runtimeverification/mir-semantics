<kmir>
  <k>
    #EndProgram ~> .K
  </k>
  <retVal>
    noReturn
  </retVal>
  <currentFunc>
    ty ( -1 )
  </currentFunc>
  <currentFrame>
    <currentBody>
      ListItem ( basicBlock (... statements: statement (... kind: statementKindAssign (... place: place (... local: local ( 3 ) , projection: .ProjectionElems ) , rvalue: rvalueUse ( operandConstant ( constOperand (... span: span ( 91 ) , userTy: noUserTypeAnnotationIndex , const: mirConst (... kind: constantKindAllocated ( allocation (... bytes: b"\x01\xfe\x03" , provenance: provenanceMap (... ptrs: .ProvenanceMapEntries ) , align: align ( 1 ) , mutability: mutabilityNot ) ) , ty: ty ( 40 ) , id: mirConstId ( 16 ) ) ) ) ) ) , span: span ( 91 ) )  statement (... kind: statementKindAssign (... place: place (... local: local ( 4 ) , projection: .ProjectionElems ) , rvalue: rvalueUse ( operandConstant ( constOperand (... span: span ( 92 ) , userTy: noUserTypeAnnotationIndex , const: mirConst (... kind: constantKindAllocated ( allocation (... bytes: b"\x00\x00\x00\x00\x00\x00\x00\x00" , provenance: provenanceMap (... ptrs: .ProvenanceMapEntries ) , align: align ( 8 ) , mutability: mutabilityMut ) ) , ty: ty ( 41 ) , id: mirConstId ( 17 ) ) ) ) ) ) , span: span ( 92 ) )  statement (... kind: statementKindAssign (... place: place (... local: local ( 5 ) , projection: .ProjectionElems ) , rvalue: rvalueUse ( operandConstant ( constOperand (... span: span ( 32 ) , userTy: noUserTypeAnnotationIndex , const: mirConst (... kind: constantKindAllocated ( allocation (... bytes: b"\x03\x00\x00\x00\x00\x00\x00\x00" , provenance: provenanceMap (... ptrs: .ProvenanceMapEntries ) , align: align ( 8 ) , mutability: mutabilityMut ) ) , ty: ty ( 41 ) , id: mirConstId ( 18 ) ) ) ) ) ) , span: span ( 90 ) )  statement (... kind: statementKindAssign (... place: place (... local: local ( 6 ) , projection: .ProjectionElems ) , rvalue: rvalueBinaryOp ( binOpLt , operandCopy ( place (... local: local ( 4 ) , projection: .ProjectionElems ) ) , operandCopy ( place (... local: local ( 5 ) , projection: .ProjectionElems ) ) ) ) , span: span ( 90 ) )  .Statements , terminator: terminator (... kind: assert (... cond: operandMove ( place (... local: local ( 6 ) , projection: .ProjectionElems ) ) , expected: true , msg: assertMessageBoundsCheck (... len: operandMove ( place (... local: local ( 5 ) , projection: .ProjectionElems ) ) , index: operandCopy ( place (... local: local ( 4 ) , projection: .ProjectionElems ) ) ) , target: basicBlockIdx ( 1 ) , unwind: unwindActionContinue ) , span: span ( 90 ) ) ) )
      ListItem ( basicBlock (... statements: statement (... kind: statementKindAssign (... place: place (... local: local ( 2 ) , projection: .ProjectionElems ) , rvalue: rvalueUse ( operandCopy ( place (... local: local ( 3 ) , projection: projectionElemIndex ( local ( 4 ) )  .ProjectionElems ) ) ) ) , span: span ( 90 ) )  statement (... kind: statementKindAssign (... place: place (... local: local ( 8 ) , projection: .ProjectionElems ) , rvalue: rvalueUse ( operandConstant ( constOperand (... span: span ( 94 ) , userTy: noUserTypeAnnotationIndex , const: mirConst (... kind: constantKindAllocated ( allocation (... bytes: b"\x01\xfe\x03" , provenance: provenanceMap (... ptrs: .ProvenanceMapEntries ) , align: align ( 1 ) , mutability: mutabilityNot ) ) , ty: ty ( 40 ) , id: mirConstId ( 16 ) ) ) ) ) ) , span: span ( 94 ) )  statement (... kind: statementKindAssign (... place: place (... local: local ( 9 ) , projection: .ProjectionElems ) , rvalue: rvalueUse ( operandConstant ( constOperand (... span: span ( 95 ) , userTy: noUserTypeAnnotationIndex , const: mirConst (... kind: constantKindAllocated ( allocation (... bytes: b"\x01\x00\x00\x00\x00\x00\x00\x00" , provenance: provenanceMap (... ptrs: .ProvenanceMapEntries ) , align: align ( 8 ) , mutability: mutabilityMut ) ) , ty: ty ( 41 ) , id: mirConstId ( 19 ) ) ) ) ) ) , span: span ( 95 ) )  statement (... kind: statementKindAssign (... place: place (... local: local ( 10 ) , projection: .ProjectionElems ) , rvalue: rvalueUse ( operandConstant ( constOperand (... span: span ( 32 ) , userTy: noUserTypeAnnotationIndex , const: mirConst (... kind: constantKindAllocated ( allocation (... bytes: b"\x03\x00\x00\x00\x00\x00\x00\x00" , provenance: provenanceMap (... ptrs: .ProvenanceMapEntries ) , align: align ( 8 ) , mutability: mutabilityMut ) ) , ty: ty ( 41 ) , id: mirConstId ( 18 ) ) ) ) ) ) , span: span ( 93 ) )  statement (... kind: statementKindAssign (... place: place (... local: local ( 11 ) , projection: .ProjectionElems ) , rvalue: rvalueBinaryOp ( binOpLt , operandCopy ( place (... local: local ( 9 ) , projection: .ProjectionElems ) ) , operandCopy ( place (... local: local ( 10 ) , projection: .ProjectionElems ) ) ) ) , span: span ( 93 ) )  .Statements , terminator: terminator (... kind: assert (... cond: operandMove ( place (... local: local ( 11 ) , projection: .ProjectionElems ) ) , expected: true , msg: assertMessageBoundsCheck (... len: operandMove ( place (... local: local ( 10 ) , projection: .ProjectionElems ) ) , index: operandCopy ( place (... local: local ( 9 ) , projection: .ProjectionElems ) ) ) , target: basicBlockIdx ( 2 ) , unwind: unwindActionContinue ) , span: span ( 93 ) ) ) )
      ListItem ( basicBlock (... statements: statement (... kind: statementKindAssign (... place: place (... local: local ( 7 ) , projection: .ProjectionElems ) , rvalue: rvalueUse ( operandCopy ( place (... local: local ( 8 ) , projection: projectionElemIndex ( local ( 9 ) )  .ProjectionElems ) ) ) ) , span: span ( 93 ) )  statement (... kind: statementKindAssign (... place: place (... local: local ( 12 ) , projection: .ProjectionElems ) , rvalue: rvalueCheckedBinaryOp ( binOpMul , operandCopy ( place (... local: local ( 2 ) , projection: .ProjectionElems ) ) , operandCopy ( place (... local: local ( 7 ) , projection: .ProjectionElems ) ) ) ) , span: span ( 96 ) )  .Statements , terminator: terminator (... kind: assert (... cond: operandMove ( place (... local: local ( 12 ) , projection: projectionElemField ( fieldIdx ( 1 ) , ty ( 42 ) )  .ProjectionElems ) ) , expected: false , msg: assertMessageOverflow ( binOpMul , operandMove ( place (... local: local ( 2 ) , projection: .ProjectionElems ) ) , operandMove ( place (... local: local ( 7 ) , projection: .ProjectionElems ) ) ) , target: basicBlockIdx ( 3 ) , unwind: unwindActionContinue ) , span: span ( 96 ) ) ) )
      ListItem ( basicBlock (... statements: statement (... kind: statementKindAssign (... place: place (... local: local ( 1 ) , projection: .ProjectionElems ) , rvalue: rvalueUse ( operandMove ( place (... local: local ( 12 ) , projection: projectionElemField ( fieldIdx ( 0 ) , ty ( 2 ) )  .ProjectionElems ) ) ) ) , span: span ( 96 ) )  statement (... kind: statementKindAssign (... place: place (... local: local ( 15 ) , projection: .ProjectionElems ) , rvalue: rvalueUse ( operandConstant ( constOperand (... span: span ( 98 ) , userTy: noUserTypeAnnotationIndex , const: mirConst (... kind: constantKindAllocated ( allocation (... bytes: b"\n\x00\x00\x00\xec\xff\xff\xff\x1e\x00\x00\x00\xd8\xff\xff\xff" , provenance: provenanceMap (... ptrs: .ProvenanceMapEntries ) , align: align ( 4 ) , mutability: mutabilityNot ) ) , ty: ty ( 43 ) , id: mirConstId ( 20 ) ) ) ) ) ) , span: span ( 98 ) )  statement (... kind: statementKindAssign (... place: place (... local: local ( 16 ) , projection: .ProjectionElems ) , rvalue: rvalueUse ( operandConstant ( constOperand (... span: span ( 99 ) , userTy: noUserTypeAnnotationIndex , const: mirConst (... kind: constantKindAllocated ( allocation (... bytes: b"\x00\x00\x00\x00\x00\x00\x00\x00" , provenance: provenanceMap (... ptrs: .ProvenanceMapEntries ) , align: align ( 8 ) , mutability: mutabilityMut ) ) , ty: ty ( 41 ) , id: mirConstId ( 17 ) ) ) ) ) ) , span: span ( 99 ) )  statement (... kind: statementKindAssign (... place: place (... local: local ( 17 ) , projection: .ProjectionElems ) , rvalue: rvalueUse ( operandConstant ( constOperand (... span: span ( 32 ) , userTy: noUserTypeAnnotationIndex , const: mirConst (... kind: constantKindAllocated ( allocation (... bytes: b"\x04\x00\x00\x00\x00\x00\x00\x00" , provenance: provenanceMap (... ptrs: .ProvenanceMapEntries ) , align: align ( 8 ) , mutability: mutabilityMut ) ) , ty: ty ( 41 ) , id: mirConstId ( 21 ) ) ) ) ) ) , span: span ( 97 ) )  statement (... kind: statementKindAssign (... place: place (... local: local ( 18 ) , projection: .ProjectionElems ) , rvalue: rvalueBinaryOp ( binOpLt , operandCopy ( place (... local: local ( 16 ) , projection: .ProjectionElems ) ) , operandCopy ( place (... local: local ( 17 ) , projection: .ProjectionElems ) ) ) ) , span: span ( 97 ) )  .Statements , terminator: terminator (... kind: assert (... cond: operandMove ( place (... local: local ( 18 ) , projection: .ProjectionElems ) ) , expected: true , msg: assertMessageBoundsCheck (... len: operandMove ( place (... local: local ( 17 ) , projection: .ProjectionElems ) ) , index: operandCopy ( place (... local: local ( 16 ) , projection: .ProjectionElems ) ) ) , target: basicBlockIdx ( 4 ) , unwind: unwindActionContinue ) , span: span ( 97 ) ) ) )
      ListItem ( basicBlock (... statements: statement (... kind: statementKindAssign (... place: place (... local: local ( 14 ) , projection: .ProjectionElems ) , rvalue: rvalueUse ( operandCopy ( place (... local: local ( 15 ) , projection: projectionElemIndex ( local ( 16 ) )  .ProjectionElems ) ) ) ) , span: span ( 97 ) )  statement (... kind: statementKindAssign (... place: place (... local: local ( 20 ) , projection: .ProjectionElems ) , rvalue: rvalueUse ( operandConstant ( constOperand (... span: span ( 101 ) , userTy: noUserTypeAnnotationIndex , const: mirConst (... kind: constantKindAllocated ( allocation (... bytes: b"\n\x00\x00\x00\xec\xff\xff\xff\x1e\x00\x00\x00\xd8\xff\xff\xff" , provenance: provenanceMap (... ptrs: .ProvenanceMapEntries ) , align: align ( 4 ) , mutability: mutabilityNot ) ) , ty: ty ( 43 ) , id: mirConstId ( 20 ) ) ) ) ) ) , span: span ( 101 ) )  statement (... kind: statementKindAssign (... place: place (... local: local ( 21 ) , projection: .ProjectionElems ) , rvalue: rvalueUse ( operandConstant ( constOperand (... span: span ( 102 ) , userTy: noUserTypeAnnotationIndex , const: mirConst (... kind: constantKindAllocated ( allocation (... bytes: b"\x01\x00\x00\x00\x00\x00\x00\x00" , provenance: provenanceMap (... ptrs: .ProvenanceMapEntries ) , align: align ( 8 ) , mutability: mutabilityMut ) ) , ty: ty ( 41 ) , id: mirConstId ( 19 ) ) ) ) ) ) , span: span ( 102 ) )  statement (... kind: statementKindAssign (... place: place (... local: local ( 22 ) , projection: .ProjectionElems ) , rvalue: rvalueUse ( operandConstant ( constOperand (... span: span ( 32 ) , userTy: noUserTypeAnnotationIndex , const: mirConst (... kind: constantKindAllocated ( allocation (... bytes: b"\x04\x00\x00\x00\x00\x00\x00\x00" , provenance: provenanceMap (... ptrs: .ProvenanceMapEntries ) , align: align ( 8 ) , mutability: mutabilityMut ) ) , ty: ty ( 41 ) , id: mirConstId ( 21 ) ) ) ) ) ) , span: span ( 100 ) )  statement (... kind: statementKindAssign (... place: place (... local: local ( 23 ) , projection: .ProjectionElems ) , rvalue: rvalueBinaryOp ( binOpLt , operandCopy ( place (... local: local ( 21 ) , projection: .ProjectionElems ) ) , operandCopy ( place (... local: local ( 22 ) , projection: .ProjectionElems ) ) ) ) , span: span ( 100 ) )  .Statements , terminator: terminator (... kind: assert (... cond: operandMove ( place (... local: local ( 23 ) , projection: .ProjectionElems ) ) , expected: true , msg: assertMessageBoundsCheck (... len: operandMove ( place (... local: local ( 22 ) , projection: .ProjectionElems ) ) , index: operandCopy ( place (... local: local ( 21 ) , projection: .ProjectionElems ) ) ) , target: basicBlockIdx ( 5 ) , unwind: unwindActionContinue ) , span: span ( 100 ) ) ) )
      ListItem ( basicBlock (... statements: statement (... kind: statementKindAssign (... place: place (... local: local ( 19 ) , projection: .ProjectionElems ) , rvalue: rvalueUse ( operandCopy ( place (... local: local ( 20 ) , projection: projectionElemIndex ( local ( 21 ) )  .ProjectionElems ) ) ) ) , span: span ( 100 ) )  statement (... kind: statementKindAssign (... place: place (... local: local ( 24 ) , projection: .ProjectionElems ) , rvalue: rvalueCheckedBinaryOp ( binOpMul , operandCopy ( place (... local: local ( 14 ) , projection: .ProjectionElems ) ) , operandCopy ( place (... local: local ( 19 ) , projection: .ProjectionElems ) ) ) ) , span: span ( 103 ) )  .Statements , terminator: terminator (... kind: assert (... cond: operandMove ( place (... local: local ( 24 ) , projection: projectionElemField ( fieldIdx ( 1 ) , ty ( 42 ) )  .ProjectionElems ) ) , expected: false , msg: assertMessageOverflow ( binOpMul , operandMove ( place (... local: local ( 14 ) , projection: .ProjectionElems ) ) , operandMove ( place (... local: local ( 19 ) , projection: .ProjectionElems ) ) ) , target: basicBlockIdx ( 6 ) , unwind: unwindActionContinue ) , span: span ( 103 ) ) ) )
      ListItem ( basicBlock (... statements: statement (... kind: statementKindAssign (... place: place (... local: local ( 13 ) , projection: .ProjectionElems ) , rvalue: rvalueUse ( operandMove ( place (... local: local ( 24 ) , projection: projectionElemField ( fieldIdx ( 0 ) , ty ( 16 ) )  .ProjectionElems ) ) ) ) , span: span ( 103 ) )  statement (... kind: statementKindAssign (... place: place (... local: local ( 28 ) , projection: .ProjectionElems ) , rvalue: rvalueCast ( castKindIntToInt , operandCopy ( place (... local: local ( 1 ) , projection: .ProjectionElems ) ) , ty ( 16 ) ) ) , span: span ( 106 ) )  statement (... kind: statementKindAssign (... place: place (... local: local ( 29 ) , projection: .ProjectionElems ) , rvalue: rvalueCheckedBinaryOp ( binOpMul , operandCopy ( place (... local: local ( 28 ) , projection: .ProjectionElems ) ) , operandConstant ( constOperand (... span: span ( 104 ) , userTy: noUserTypeAnnotationIndex , const: mirConst (... kind: constantKindAllocated ( allocation (... bytes: b"d\x00\x00\x00" , provenance: provenanceMap (... ptrs: .ProvenanceMapEntries ) , align: align ( 4 ) , mutability: mutabilityMut ) ) , ty: ty ( 16 ) , id: mirConstId ( 22 ) ) ) ) ) ) , span: span ( 105 ) )  .Statements , terminator: terminator (... kind: assert (... cond: operandMove ( place (... local: local ( 29 ) , projection: projectionElemField ( fieldIdx ( 1 ) , ty ( 42 ) )  .ProjectionElems ) ) , expected: false , msg: assertMessageOverflow ( binOpMul , operandMove ( place (... local: local ( 28 ) , projection: .ProjectionElems ) ) , operandConstant ( constOperand (... span: span ( 104 ) , userTy: noUserTypeAnnotationIndex , const: mirConst (... kind: constantKindAllocated ( allocation (... bytes: b"d\x00\x00\x00" , provenance: provenanceMap (... ptrs: .ProvenanceMapEntries ) , align: align ( 4 ) , mutability: mutabilityMut ) ) , ty: ty ( 16 ) , id: mirConstId ( 22 ) ) ) ) ) , target: basicBlockIdx ( 7 ) , unwind: unwindActionContinue ) , span: span ( 105 ) ) ) )
      ListItem ( basicBlock (... statements: statement (... kind: statementKindAssign (... place: place (... local: local ( 27 ) , projection: .ProjectionElems ) , rvalue: rvalueUse ( operandMove ( place (... local: local ( 29 ) , projection: projectionElemField ( fieldIdx ( 0 ) , ty ( 16 ) )  .ProjectionElems ) ) ) ) , span: span ( 105 ) )  statement (... kind: statementKindAssign (... place: place (... local: local ( 26 ) , projection: .ProjectionElems ) , rvalue: rvalueRef ( region (... kind: regionKindReErased ) , borrowKindShared , place (... local: local ( 27 ) , projection: .ProjectionElems ) ) ) , span: span ( 108 ) )  statement (... kind: statementKindAssign (... place: place (... local: local ( 30 ) , projection: .ProjectionElems ) , rvalue: rvalueRef ( region (... kind: regionKindReErased ) , borrowKindShared , place (... local: local ( 13 ) , projection: .ProjectionElems ) ) ) , span: span ( 109 ) )  statement (... kind: statementKindAssign (... place: place (... local: local ( 25 ) , projection: .ProjectionElems ) , rvalue: rvalueAggregate ( aggregateKindTuple , operandMove ( place (... local: local ( 26 ) , projection: .ProjectionElems ) )  operandMove ( place (... local: local ( 30 ) , projection: .ProjectionElems ) )  .Operands ) ) , span: span ( 110 ) )  statement (... kind: statementKindAssign (... place: place (... local: local ( 31 ) , projection: .ProjectionElems ) , rvalue: rvalueUse ( operandCopy ( place (... local: local ( 25 ) , projection: projectionElemField ( fieldIdx ( 0 ) , ty ( 25 ) )  .ProjectionElems ) ) ) ) , span: span ( 111 ) )  statement (... kind: statementKindAssign (... place: place (... local: local ( 32 ) , projection: .ProjectionElems ) , rvalue: rvalueUse ( operandCopy ( place (... local: local ( 25 ) , projection: projectionElemField ( fieldIdx ( 1 ) , ty ( 25 ) )  .ProjectionElems ) ) ) ) , span: span ( 112 ) )  statement (... kind: statementKindAssign (... place: place (... local: local ( 34 ) , projection: .ProjectionElems ) , rvalue: rvalueUse ( operandCopy ( place (... local: local ( 31 ) , projection: projectionElemDeref  .ProjectionElems ) ) ) ) , span: span ( 113 ) )  statement (... kind: statementKindAssign (... place: place (... local: local ( 35 ) , projection: .ProjectionElems ) , rvalue: rvalueUse ( operandCopy ( place (... local: local ( 32 ) , projection: projectionElemDeref  .ProjectionElems ) ) ) ) , span: span ( 114 ) )  statement (... kind: statementKindAssign (... place: place (... local: local ( 33 ) , projection: .ProjectionElems ) , rvalue: rvalueBinaryOp ( binOpEq , operandMove ( place (... local: local ( 34 ) , projection: .ProjectionElems ) ) , operandMove ( place (... local: local ( 35 ) , projection: .ProjectionElems ) ) ) ) , span: span ( 107 ) )  .Statements , terminator: terminator (... kind: terminatorKindSwitchInt (... discr: operandMove ( place (... local: local ( 33 ) , projection: .ProjectionElems ) ) , targets: switchTargets (... branches: branch ( 0 , basicBlockIdx ( 9 ) )  .Branches , otherwise: basicBlockIdx ( 8 ) ) ) , span: span ( 107 ) ) ) )
      ListItem ( basicBlock (... statements: .Statements , terminator: terminator (... kind: terminatorKindReturn , span: span ( 115 ) ) ) )
      ListItem ( basicBlock (... statements: statement (... kind: statementKindAssign (... place: place (... local: local ( 36 ) , projection: .ProjectionElems ) , rvalue: rvalueAggregate ( aggregateKindAdt ( adtDef ( 10 ) , variantIdx ( 0 ) , .GenericArgs , noUserTypeAnnotationIndex , noFieldIdx ) , .Operands ) ) , span: span ( 118 ) )  statement (... kind: statementKindAssign (... place: place (... local: local ( 38 ) , projection: .ProjectionElems ) , rvalue: rvalueAggregate ( aggregateKindAdt ( adtDef ( 11 ) , variantIdx ( 0 ) , genericArgKindType ( ty ( 45 ) )  .GenericArgs , noUserTypeAnnotationIndex , noFieldIdx ) , .Operands ) ) , span: span ( 119 ) )  .Statements , terminator: terminator (... kind: terminatorKindCall (... func: operandConstant ( constOperand (... span: span ( 116 ) , userTy: noUserTypeAnnotationIndex , const: mirConst (... kind: constantKindZeroSized , ty: ty ( 44 ) , id: mirConstId ( 23 ) ) ) ) , args: operandMove ( place (... local: local ( 36 ) , projection: .ProjectionElems ) )  operandCopy ( place (... local: local ( 31 ) , projection: .ProjectionElems ) )  operandCopy ( place (... local: local ( 32 ) , projection: .ProjectionElems ) )  operandMove ( place (... local: local ( 38 ) , projection: .ProjectionElems ) )  .Operands , destination: place (... local: local ( 37 ) , projection: .ProjectionElems ) , target: noBasicBlockIdx , unwind: unwindActionContinue ) , span: span ( 117 ) ) ) )
    </currentBody>
    <caller>
      ty ( -1 )
    </caller>
    <dest>
      place (... local: local ( 0 ) , projection: .ProjectionElems )
    </dest>
    <target>
      noBasicBlockIdx
    </target>
    <unwind>
      unwindActionContinue
    </unwind>
    <locals>
      ListItem ( newLocal ( ty ( 1 ) , mutabilityMut ) )
      ListItem ( typedValue ( Integer ( -2 , 8 , true ) , ty ( 2 ) , mutabilityNot ) )
      ListItem ( typedValue ( Integer ( 1 , 8 , true ) , ty ( 2 ) , mutabilityMut ) )
      ListItem ( typedValue ( Range ( ListItem ( Integer ( 1 , 8 , true ) )
      ListItem ( Integer ( -2 , 8 , true ) )
      ListItem ( Integer ( 3 , 8 , true ) ) ) , ty ( 40 ) , mutabilityMut ) )
      ListItem ( typedValue ( Integer ( 0 , 64 , false ) , ty ( 41 ) , mutabilityNot ) )
      ListItem ( typedValue ( Integer ( 3 , 64 , false ) , ty ( 41 ) , mutabilityMut ) )
      ListItem ( typedValue ( Moved , ty ( 42 ) , mutabilityMut ) )
      ListItem ( typedValue ( Integer ( -2 , 8 , true ) , ty ( 2 ) , mutabilityMut ) )
      ListItem ( typedValue ( Range ( ListItem ( Integer ( 1 , 8 , true ) )
      ListItem ( Integer ( -2 , 8 , true ) )
      ListItem ( Integer ( 3 , 8 , true ) ) ) , ty ( 40 ) , mutabilityMut ) )
      ListItem ( typedValue ( Integer ( 1 , 64 , false ) , ty ( 41 ) , mutabilityNot ) )
      ListItem ( typedValue ( Integer ( 3 , 64 , false ) , ty ( 41 ) , mutabilityMut ) )
      ListItem ( typedValue ( Moved , ty ( 42 ) , mutabilityMut ) )
      ListItem ( typedValue ( Aggregate ( variantIdx ( 0 ) , ListItem ( Moved )
      ListItem ( Moved ) ) , ty ( 46 ) , mutabilityMut ) )
      ListItem ( typedValue ( Integer ( -200 , 32 , true ) , ty ( 16 ) , mutabilityNot ) )
      ListItem ( typedValue ( Integer ( 10 , 32 , true ) , ty ( 16 ) , mutabilityMut ) )
      ListItem ( typedValue ( Range ( ListItem ( Integer ( 10 , 32 , true ) )
      ListItem ( Integer ( -20 , 32 , true ) )
      ListItem ( Integer ( 30 , 32 , true ) )
      ListItem ( Integer ( -40 , 32 , true ) ) ) , ty ( 43 ) , mutabilityMut ) )
      ListItem ( typedValue ( Integer ( 0 , 64 , false ) , ty ( 41 ) , mutabilityNot ) )
      ListItem ( typedValue ( Integer ( 4 , 64 , false ) , ty ( 41 ) , mutabilityMut ) )
      ListItem ( typedValue ( Moved , ty ( 42 ) , mutabilityMut ) )
      ListItem ( typedValue ( Integer ( -20 , 32 , true ) , ty ( 16 ) , mutabilityMut ) )
      ListItem ( typedValue ( Range ( ListItem ( Integer ( 10 , 32 , true ) )
      ListItem ( Integer ( -20 , 32 , true ) )
      ListItem ( Integer ( 30 , 32 , true ) )
      ListItem ( Integer ( -40 , 32 , true ) ) ) , ty ( 43 ) , mutabilityMut ) )
      ListItem ( typedValue ( Integer ( 1 , 64 , false ) , ty ( 41 ) , mutabilityNot ) )
      ListItem ( typedValue ( Integer ( 4 , 64 , false ) , ty ( 41 ) , mutabilityMut ) )
      ListItem ( typedValue ( Moved , ty ( 42 ) , mutabilityMut ) )
      ListItem ( typedValue ( Aggregate ( variantIdx ( 0 ) , ListItem ( Moved )
      ListItem ( Moved ) ) , ty ( 47 ) , mutabilityMut ) )
      ListItem ( typedValue ( Aggregate ( variantIdx ( 0 ) , ListItem ( Reference ( 0 , place (... local: local ( 27 ) , projection: .ProjectionElems ) , mutabilityNot , noMetadata , 0 ) )
      ListItem ( Reference ( 0 , place (... local: local ( 13 ) , projection: .ProjectionElems ) , mutabilityNot , noMetadata , 0 ) ) ) , ty ( 48 ) , mutabilityMut ) )
      ListItem ( typedValue ( Moved , ty ( 25 ) , mutabilityMut ) )
      ListItem ( typedValue ( Integer ( -200 , 32 , true ) , ty ( 16 ) , mutabilityNot ) )
      ListItem ( typedValue ( Integer ( -2 , 32 , true ) , ty ( 16 ) , mutabilityMut ) )
      ListItem ( typedValue ( Aggregate ( variantIdx ( 0 ) , ListItem ( Moved )
      ListItem ( Moved ) ) , ty ( 47 ) , mutabilityMut ) )
      ListItem ( typedValue ( Moved , ty ( 25 ) , mutabilityMut ) )
      ListItem ( typedValue ( Reference ( 0 , place (... local: local ( 27 ) , projection: .ProjectionElems ) , mutabilityNot , noMetadata , 0 ) , ty ( 25 ) , mutabilityNot ) )
      ListItem ( typedValue ( Reference ( 0 , place (... local: local ( 13 ) , projection: .ProjectionElems ) , mutabilityNot , noMetadata , 0 ) , ty ( 25 ) , mutabilityNot ) )
      ListItem ( typedValue ( Moved , ty ( 42 ) , mutabilityMut ) )
      ListItem ( typedValue ( Moved , ty ( 16 ) , mutabilityMut ) )
      ListItem ( typedValue ( Moved , ty ( 16 ) , mutabilityMut ) )
      ListItem ( newLocal ( ty ( 38 ) , mutabilityNot ) )
      ListItem ( newLocal ( ty ( 37 ) , mutabilityNot ) )
      ListItem ( newLocal ( ty ( 39 ) , mutabilityMut ) )
    </locals>
  </currentFrame>
  <stack>
    ListItem ( StackFrame ( ty ( -1 ) , place (... local: local ( -1 ) , projection: .ProjectionElems ) , noBasicBlockIdx , unwindActionUnreachable , .List ) )
  </stack>
</kmir>