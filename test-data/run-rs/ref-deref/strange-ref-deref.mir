// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();
    let _1: i32;
    let _3: &&i32;
    let mut _4: bool;
    let mut _5: bool;
    let mut _6: i32;
    let mut _7: !;
    let mut _8: &i32;
    scope 1 {
        debug a => _1;
        let mut _2: &i32;
        scope 2 {
            debug b => _2;
        }
    }

    bb0: {
        _1 = const 42_i32;
        _2 = &_1;
        _3 = &_2;
        _8 = deref_copy (*_3);
        _2 = _8;
        _6 = (*_2);
        _5 = Eq(move _6, const 42_i32);
        _4 = Not(move _5);
        switchInt(move _4) -> [0: bb2, otherwise: bb1];
    }

    bb1: {
        _7 = core::panicking::panic(const "assertion failed: *b == 42");
    }

    bb2: {
        return;
    }
}
