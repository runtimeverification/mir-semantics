// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/drop/drop-trait-generic.rs:7:1: 7:34>::drop(_1: &mut S<T>) -> () {
    debug self => _1;
    let mut _0: ();
    let _2: ();
    let mut _3: std::fmt::Arguments<'_>;
    let mut _4: &[&str];
    let _5: &[&str; 1];
    let _6: [&str; 1];

    bb0: {
        _6 = [const "bye\n"];
        _5 = &_6;
        _4 = _5 as &[&str] (Pointer(Unsize));
        _3 = Arguments::<'_>::new_const(move _4) -> bb1;
    }

    bb1: {
        _2 = _print(move _3) -> bb2;
    }

    bb2: {
        return;
    }
}

fn main() -> () {
    let mut _0: ();
    let _1: S<i32>;
    scope 1 {
        debug _x => _1;
    }

    bb0: {
        _1 = S::<i32> { x: const 1_i32 };
        drop(_1) -> bb1;
    }

    bb1: {
        return;
    }
}
