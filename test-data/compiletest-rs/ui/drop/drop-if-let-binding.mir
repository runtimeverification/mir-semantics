// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();
    let mut _1: std::option::Option<std::string::String>;
    let mut _2: isize;
    let mut _4: bool;
    let mut _5: isize;
    scope 1 {
        debug _val => _3;
        let _3: std::string::String;
    }

    bb0: {
        _4 = const false;
        _4 = const true;
        _1 = Option::<String>::None;
        _2 = discriminant(_1);
        switchInt(move _2) -> [1: bb1, otherwise: bb5];
    }

    bb1: {
        _4 = const false;
        _3 = move ((_1 as Some).0: std::string::String);
        drop(_3) -> bb5;
    }

    bb2: {
        _4 = const false;
        return;
    }

    bb3: {
        switchInt(_4) -> [0: bb2, otherwise: bb4];
    }

    bb4: {
        drop(((_1 as Some).0: std::string::String)) -> bb2;
    }

    bb5: {
        _5 = discriminant(_1);
        switchInt(move _5) -> [1: bb3, otherwise: bb2];
    }
}
