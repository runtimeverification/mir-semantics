// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn foo(_1: &str) -> () {
    debug _a => _1;
    let mut _0: ();

    bb0: {
        return;
    }
}

fn main() -> () {
    let mut _0: ();
    let mut _1: fn(&str);
    scope 1 {
        debug x => _1;
        scope 2 {
        }
    }

    bb0: {
        _1 = foo as for<'a> fn(&'a str) (Pointer(ReifyFnPointer));
        return;
    }
}
