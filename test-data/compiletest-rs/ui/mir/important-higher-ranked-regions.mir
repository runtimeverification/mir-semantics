// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn foo(_1: Foo<for<'a> fn(&'a ()), u32>) -> Foo<fn(&()), String> {
    debug x => _1;
    let mut _0: Foo<fn(&()), std::string::String>;

    bb0: {
        _0 = move _1;
        return;
    }
}

fn main() -> () {
    let mut _0: ();

    bb0: {
        return;
    }
}

fn Foo(_1: T) -> Foo<T, U> {
    let mut _0: Foo<T, U>;

    bb0: {
        _0 = Foo::<T, U>(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo(_1: T) -> Foo<T, U> {
    let mut _0: Foo<T, U>;

    bb0: {
        _0 = Foo::<T, U>(move _1);
        return;
    }
}
