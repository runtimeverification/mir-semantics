// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
const C: [u32; 5] = {
    let mut _0: [u32; 5];

    bb0: {
        _0 = [const 0_u32; 5];
        return;
    }
}

C::{constant#0}: usize = {
    let mut _0: usize;

    bb0: {
        _0 = const 5_usize;
        return;
    }
}

C::{constant#1}: usize = {
    let mut _0: usize;

    bb0: {
        _0 = const 5_usize;
        return;
    }
}

fn test() -> u32 {
    let mut _0: u32;
    let mut _1: [u32; 5];
    let _2: usize;
    let mut _3: usize;
    let mut _4: bool;

    bb0: {
        _1 = const _;
        _2 = const 10_usize;
        _3 = const 5_usize;
        _4 = Lt(_2, _3);
        assert(move _4, "index out of bounds: the length is {} but the index is {}", move _3, _2) -> bb1;
    }

    bb1: {
        _0 = _1[_2];
        return;
    }
}

fn main() -> () {
    let mut _0: ();
    let _1: u32;

    bb0: {
        _1 = test() -> bb1;
    }

    bb1: {
        return;
    }
}
