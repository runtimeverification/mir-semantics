// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();
    let _1: [i32; 3];
    let _2: usize;
    let mut _3: usize;
    let mut _4: usize;
    let mut _5: bool;
    let mut _6: usize;
    let mut _7: bool;
    scope 1 {
        debug xs => _1;
    }

    bb0: {
        _1 = [const 1_i32, const 2_i32, const 3_i32];
        _4 = std::mem::size_of::<isize>() -> bb1;
    }

    bb1: {
        _5 = Eq(_4, const 0_usize);
        assert(!move _5, "attempt to divide `{}` by zero", const _) -> bb2;
    }

    bb2: {
        _3 = Div(const _, move _4);
        _2 = Add(move _3, const 1_usize);
        _6 = const 3_usize;
        _7 = Lt(_2, _6);
        assert(move _7, "index out of bounds: the length is {} but the index is {}", move _6, _2) -> bb3;
    }

    bb3: {
        return;
    }
}
