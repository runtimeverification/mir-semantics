// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn is_send() -> () {
    let mut _0: ();

    bb0: {
        return;
    }
}

fn main() -> () {
    let mut _0: ();
    let _1: ();

    bb0: {
        _1 = is_send::<X<C<'_>>>() -> bb1;
    }

    bb1: {
        return;
    }
}

fn C(_1: &()) -> C<'_> {
    let mut _0: C<'_>;

    bb0: {
        _0 = C::<'_>(move _1);
        return;
    }
}

// MIR FOR CTFE
fn C(_1: &()) -> C<'_> {
    let mut _0: C<'_>;

    bb0: {
        _0 = C::<'_>(move _1);
        return;
    }
}

fn X(_1: <T as Y>::P) -> X<T> {
    let mut _0: X<T>;

    bb0: {
        _0 = X::<T>(move _1);
        return;
    }
}

// MIR FOR CTFE
fn X(_1: <T as Y>::P) -> X<T> {
    let mut _0: X<T>;

    bb0: {
        _0 = X::<T>(move _1);
        return;
    }
}
