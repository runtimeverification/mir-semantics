// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
static arg0: () = {
    let mut _0: ();

    bb0: {
        _0 = ();
        return;
    }
}

fn main() -> () {
    let mut _0: ();
    let _1: std::fmt::Arguments<'_>;
    let mut _2: &[&str];
    let _3: &[&str; 1];
    let _4: [&str; 1];
    let mut _5: &[core::fmt::rt::Argument<'_>];
    let _6: &[core::fmt::rt::Argument<'_>; 1];
    let _7: [core::fmt::rt::Argument<'_>; 1];
    let mut _8: core::fmt::rt::Argument<'_>;
    let _9: &i32;
    let _10: i32;
    let _11: std::fmt::Arguments<'_>;
    let mut _12: &[&str];
    let _13: &[&str; 2];
    let _14: [&str; 2];
    let mut _15: &[core::fmt::rt::Argument<'_>];
    let _16: &[core::fmt::rt::Argument<'_>; 1];
    let _17: [core::fmt::rt::Argument<'_>; 1];
    let mut _18: core::fmt::rt::Argument<'_>;
    let _19: &i32;
    let _20: i32;

    bb0: {
        _4 = [const "0 "];
        _3 = &_4;
        _2 = _3 as &[&str] (Pointer(Unsize));
        _10 = const 1_i32;
        _9 = &_10;
        _8 = core::fmt::rt::Argument::<'_>::new_debug::<i32>(_9) -> bb1;
    }

    bb1: {
        _7 = [move _8];
        _6 = &_7;
        _5 = _6 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _1 = Arguments::<'_>::new_v1(move _2, move _5) -> bb2;
    }

    bb2: {
        _14 = [const "0 ", const "\n"];
        _13 = &_14;
        _12 = _13 as &[&str] (Pointer(Unsize));
        _20 = const 1_i32;
        _19 = &_20;
        _18 = core::fmt::rt::Argument::<'_>::new_debug::<i32>(_19) -> bb3;
    }

    bb3: {
        _17 = [move _18];
        _16 = &_17;
        _15 = _16 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _11 = Arguments::<'_>::new_v1(move _12, move _15) -> bb4;
    }

    bb4: {
        return;
    }
}

static arg1: () = {
    let mut _0: ();

    bb0: {
        _0 = ();
        return;
    }
}
