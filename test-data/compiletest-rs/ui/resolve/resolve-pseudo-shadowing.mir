// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn check(_1: Clone) -> () {
    debug _c => _1;
    let mut _0: ();
    let _2: ();

    bb0: {
        _2 = check2() -> [return: bb1, unwind: bb3];
    }

    bb1: {
        drop(_1) -> bb2;
    }

    bb2: {
        return;
    }

    bb3 (cleanup): {
        drop(_1) -> [return: bb4, unwind terminate];
    }

    bb4 (cleanup): {
        resume;
    }
}

fn check2() -> () {
    let mut _0: ();
    scope 1 {
    }

    bb0: {
        return;
    }
}

fn main() -> () {
    let mut _0: ();
    let _1: ();

    bb0: {
        _1 = check::<()>(const ()) -> bb1;
    }

    bb1: {
        return;
    }
}
