// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();
    let _1: E;
    let mut _2: isize;
    let mut _3: !;
    let mut _4: isize;
    let mut _6: !;
    scope 1 {
        debug e => _1;
        let _5: isize;
        scope 2 {
            debug _f => _5;
        }
    }

    bb0: {
        _1 = E::Foo { f: const 1_isize };
        _2 = discriminant(_1);
        switchInt(move _2) -> [0: bb2, otherwise: bb1];
    }

    bb1: {
        _3 = begin_panic::<&str>(const "explicit panic");
    }

    bb2: {
        _4 = discriminant(_1);
        switchInt(move _4) -> [0: bb4, otherwise: bb3];
    }

    bb3: {
        _6 = begin_panic::<&str>(const "explicit panic");
    }

    bb4: {
        _5 = ((_1 as Foo).0: isize);
        return;
    }
}
