// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn tuple() -> () {
    let mut _0: ();
    let _1: (i32,);
    let mut _2: !;
    scope 1 {
        debug x => _1;
    }

    bb0: {
        _1 = (const 1_i32,);
        switchInt((_1.0: i32)) -> [2: bb2, otherwise: bb1];
    }

    bb1: {
        return;
    }

    bb2: {
        _2 = begin_panic::<&str>(const "explicit panic");
    }
}

fn tuple_struct() -> () {
    let mut _0: ();
    let _1: tuple_struct::S;
    let mut _2: !;
    scope 1 {
        debug x => _1;
    }

    bb0: {
        _1 = S(const 1_u8);
        switchInt((_1.0: u8)) -> [2: bb2, otherwise: bb1];
    }

    bb1: {
        return;
    }

    bb2: {
        _2 = begin_panic::<&str>(const "explicit panic");
    }
}

fn main() -> () {
    let mut _0: ();
    let _1: ();
    let _2: ();

    bb0: {
        _1 = tuple() -> bb1;
    }

    bb1: {
        _2 = tuple_struct() -> bb2;
    }

    bb2: {
        return;
    }
}

fn S(_1: u8) -> S {
    let mut _0: tuple_struct::S;

    bb0: {
        _0 = S(move _1);
        return;
    }
}

// MIR FOR CTFE
fn S(_1: u8) -> S {
    let mut _0: tuple_struct::S;

    bb0: {
        _0 = S(move _1);
        return;
    }
}
