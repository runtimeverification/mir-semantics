// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();
    let _1: &Mat2<f64>;
    let _2: Mat2<f64>;
    scope 1 {
        debug _id => _1;
    }

    bb0: {
        _2 = <Mat2<f64> as Matrix<f64, Vec2<f64>>>::identity(const 1f64) -> bb1;
    }

    bb1: {
        _1 = &_2;
        return;
    }
}

fn Index::get(_1: &Self, _2: Index) -> Result {
    debug self => _1;
    let mut _0: Result;
    let mut _3: !;

    bb0: {
        _3 = begin_panic::<&str>(const "explicit panic") -> bb1;
    }

    bb1 (cleanup): {
        drop(_2) -> [return: bb2, unwind terminate];
    }

    bb2 (cleanup): {
        resume;
    }
}

fn <impl at ui/traits/issue-4107.rs:24:1: 24:39>::identity(_1: T) -> Mat2<T> {
    debug t => _1;
    let mut _0: Mat2<T>;

    bb0: {
        _0 = Mat2::<T> { x: move _1 };
        return;
    }
}
