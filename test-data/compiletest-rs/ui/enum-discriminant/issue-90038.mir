// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
Foo::A::{constant#0}: u32 = {
    let mut _0: u32;

    bb0: {
        _0 = const 2_u32;
        return;
    }
}

fn main() -> () {
    let mut _0: ();
    let mut _1: Bar;
    let mut _2: Foo;
    let mut _3: isize;
    let mut _4: !;

    bb0: {
        _2 = Foo::A;
        _1 = Bar::A(move _2);
        _3 = discriminant(_1);
        switchInt(move _3) -> [0: bb2, otherwise: bb1];
    }

    bb1: {
        _4 = core::panicking::panic(const "internal error: entered unreachable code");
    }

    bb2: {
        return;
    }
}

fn Bar::A(_1: Foo) -> Bar {
    let mut _0: Bar;

    bb0: {
        _0 = Bar::A(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Bar::A(_1: Foo) -> Bar {
    let mut _0: Bar;

    bb0: {
        _0 = Bar::A(move _1);
        return;
    }
}
