// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn b() -> () {
    let mut _0: ();
    let _1: ();
    let mut _2: &[closure@ui/test-attrs/test-runner-hides-buried-main.rs:10:10: 10:12];
    let _3: [closure@ui/test-attrs/test-runner-hides-buried-main.rs:10:10: 10:12];

    bb0: {
        _2 = &_3;
        _1 = <[closure@ui/test-attrs/test-runner-hides-buried-main.rs:10:10: 10:12] as Fn<()>>::call(move _2, const ()) -> bb1;
    }

    bb1: {
        return;
    }
}

fn b::{closure#0}(_1: &[closure@ui/test-attrs/test-runner-hides-buried-main.rs:10:10: 10:12]) -> () {
    let mut _0: ();

    bb0: {
        return;
    }
}

fn c() -> () {
    let mut _0: ();
    let mut _1: !;

    bb0: {
        _1 = begin_panic::<&str>(const "explicit panic");
    }
}
