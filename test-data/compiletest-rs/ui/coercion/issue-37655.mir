// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/coercion/issue-37655.rs:15:1: 15:28>::get_me(_1: &[T], _2: I) -> &<I as SliceIndex<T>>::Output {
    debug self => _1;
    debug index => _2;
    let mut _0: &<I as SliceIndex<T>>::Output;
    let mut _3: !;

    bb0: {
        _3 = begin_panic::<&str>(const "explicit panic") -> bb1;
    }

    bb1 (cleanup): {
        drop(_2) -> [return: bb2, unwind terminate];
    }

    bb2 (cleanup): {
        resume;
    }
}

fn foo(_1: &[&[u8]]) -> &[u8] {
    debug split => _1;
    let mut _0: &[u8];
    let _2: &&[u8];

    bb0: {
        _2 = <[&[u8]] as SliceExt<&[u8]>>::get_me::<usize>(_1, const 0_usize) -> bb1;
    }

    bb1: {
        _0 = deref_copy (*_2);
        return;
    }
}

fn main() -> () {
    let mut _0: ();

    bb0: {
        return;
    }
}
