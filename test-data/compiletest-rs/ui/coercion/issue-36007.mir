// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();
    let _1: Foo<Bar>;
    let mut _2: std::boxed::Box<Bar>;
    scope 1 {
        debug foo => _1;
        let _3: Foo<Bar>;
        scope 2 {
            debug foobar => _3;
        }
    }

    bb0: {
        _2 = Box::<Bar>::new(const Bar) -> bb1;
    }

    bb1: {
        _1 = Foo::<Bar>(move _2);
        _3 = move _1;
        drop(_3) -> bb2;
    }

    bb2: {
        return;
    }
}

fn Foo(_1: Box<T>) -> Foo<T> {
    let mut _0: Foo<T>;

    bb0: {
        _0 = Foo::<T>(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo(_1: Box<T>) -> Foo<T> {
    let mut _0: Foo<T>;

    bb0: {
        _0 = Foo::<T>(move _1);
        return;
    }
}
