// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
Foo::Assoc::{constant#0}: usize = {
    let mut _0: usize;

    bb0: {
        _0 = const N;
        return;
    }
}

<impl at ui/const-generics/associated-type-bound.rs:8:1: 8:35>::{constant#0}: usize = {
    let mut _0: usize;

    bb0: {
        _0 = const N;
        return;
    }
}

<impl at ui/const-generics/associated-type-bound.rs:9:1: 9:20>::{constant#0}: usize = {
    let mut _0: usize;

    bb0: {
        _0 = const 3_usize;
        return;
    }
}

<impl at ui/const-generics/associated-type-bound.rs:11:1: 11:35>::{constant#0}: usize = {
    let mut _0: usize;

    bb0: {
        _0 = const N;
        return;
    }
}

<impl at ui/const-generics/associated-type-bound.rs:15:1: 15:20>::{constant#0}: usize = {
    let mut _0: usize;

    bb0: {
        _0 = const 3_usize;
        return;
    }
}

fn main() -> () {
    let mut _0: ();

    bb0: {
        return;
    }
}
