// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
Foo::0::{constant#0}: usize = {
    let mut _0: usize;

    bb0: {
        _0 = const NUM_BYTES;
        return;
    }
}

fn main() -> () {
    let mut _0: ();
    scope 1 {
    }

    bb0: {
        return;
    }
}

main::{constant#0}: usize = {
    let mut _0: usize;

    bb0: {
        _0 = const 3_usize;
        return;
    }
}

fn Foo(_1: [u8; NUM_BYTES]) -> Foo<NUM_BYTES> {
    let mut _0: Foo<NUM_BYTES>;

    bb0: {
        _0 = Foo::<NUM_BYTES>(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo(_1: [u8; NUM_BYTES]) -> Foo<NUM_BYTES> {
    let mut _0: Foo<NUM_BYTES>;

    bb0: {
        _0 = Foo::<NUM_BYTES>(move _1);
        return;
    }
}
