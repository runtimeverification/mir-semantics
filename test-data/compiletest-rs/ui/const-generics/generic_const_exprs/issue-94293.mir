// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
<impl at ui/const-generics/generic_const_exprs/issue-94293.rs:9:1: 9:23>::{constant#0}: bool = {
    let mut _0: bool;

    bb0: {
        _0 = const true;
        return;
    }
}

<impl at ui/const-generics/generic_const_exprs/issue-94293.rs:15:1: 15:98>::{constant#0}: bool = {
    let mut _0: bool;

    bb0: {
        _0 = Le(const FRAC_RHS, const 8_u32);
        return;
    }
}

<impl at ui/const-generics/generic_const_exprs/issue-94293.rs:15:1: 15:98>::{constant#1}: u32 = {
    let mut _0: u32;

    bb0: {
        _0 = const FRAC_RHS;
        return;
    }
}

<impl at ui/const-generics/generic_const_exprs/issue-94293.rs:15:1: 15:98>::{constant#2}: u32 = {
    let mut _0: u32;

    bb0: {
        _0 = const FRAC_LHS;
        return;
    }
}

fn <impl at ui/const-generics/generic_const_exprs/issue-94293.rs:15:1: 15:98>::eq(_1: &FixedI8<FRAC_LHS>, _2: &FixedI8<FRAC_RHS>) -> bool {
    debug self => _1;
    debug _rhs => _2;
    let mut _0: bool;
    let mut _3: !;

    bb0: {
        _3 = core::panicking::panic(const "not implemented");
    }
}

<impl at ui/const-generics/generic_const_exprs/issue-94293.rs:15:1: 15:98>::eq::{constant#0}: u32 = {
    let mut _0: u32;

    bb0: {
        _0 = const FRAC_RHS;
        return;
    }
}

<impl at ui/const-generics/generic_const_exprs/issue-94293.rs:24:1: 24:54>::{constant#0}: u32 = {
    let mut _0: u32;

    bb0: {
        _0 = const FRAC;
        return;
    }
}

fn <impl at ui/const-generics/generic_const_exprs/issue-94293.rs:24:1: 24:54>::eq(_1: &FixedI8<FRAC>, _2: &i8) -> bool {
    debug self => _1;
    debug rhs => _2;
    let mut _0: bool;
    let _3: FixedI8<0>;
    let mut _4: i8;
    let _5: &FixedI8<0>;
    scope 1 {
        debug rhs_as_fixed => _3;
    }

    bb0: {
        _4 = (*_2);
        _3 = FixedI8::<0> { bits: move _4 };
        _5 = &_3;
        _0 = <FixedI8<FRAC> as PartialEq<FixedI8<0>>>::eq(_1, _5) -> bb1;
    }

    bb1: {
        return;
    }
}

<impl at ui/const-generics/generic_const_exprs/issue-94293.rs:24:1: 24:54>::eq::{constant#0}: u32 = {
    let mut _0: u32;

    bb0: {
        _0 = const 0_u32;
        return;
    }
}

fn main() -> () {
    let mut _0: ();

    bb0: {
        return;
    }
}
