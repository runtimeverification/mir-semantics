// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn foo() -> () {
    let mut _0: ();
    let _1: [(); { T::ASSOC }];

    bb0: {
        _1 = bar::<{ T::ASSOC }>() -> bb1;
    }

    bb1: {
        return;
    }
}

foo::{constant#0}: usize = {
    let mut _0: usize;

    bb0: {
        _0 = const _;
        return;
    }
}

foo::{constant#1}: usize = {
    let mut _0: usize;

    bb0: {
        _0 = const _;
        return;
    }
}

fn bar() -> [(); N] {
    let mut _0: [(); N];

    bb0: {
        _0 = [const (); N];
        return;
    }
}

bar::{constant#0}: usize = {
    let mut _0: usize;

    bb0: {
        _0 = const N;
        return;
    }
}

bar::{constant#1}: usize = {
    let mut _0: usize;

    bb0: {
        _0 = const N;
        return;
    }
}

fn main() -> () {
    let mut _0: ();

    bb0: {
        return;
    }
}
