// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn test() -> Foo<{ N > 10 }> {
    let mut _0: Foo<{ N > 10 }>;

    bb0: {
        return;
    }
}

test::{constant#1}: bool = {
    let mut _0: bool;

    bb0: {
        _0 = Gt(const N, const 10_usize);
        return;
    }
}

test::{constant#0}: bool = {
    let mut _0: bool;

    bb0: {
        _0 = Gt(const N, const 10_usize);
        return;
    }
}

fn main() -> () {
    let mut _0: ();
    let mut _1: Foo<{ N > 10 }>;
    let mut _2: Foo<{ N > 10 }>;
    scope 1 {
        scope 2 {
        }
    }

    bb0: {
        _1 = test::<12>() -> bb1;
    }

    bb1: {
        _2 = test::<9>() -> bb2;
    }

    bb2: {
        return;
    }
}

main::{constant#1}: usize = {
    let mut _0: usize;

    bb0: {
        _0 = const 12_usize;
        return;
    }
}

main::{constant#0}: bool = {
    let mut _0: bool;

    bb0: {
        _0 = const true;
        return;
    }
}

main::{constant#3}: usize = {
    let mut _0: usize;

    bb0: {
        _0 = const 9_usize;
        return;
    }
}

main::{constant#2}: bool = {
    let mut _0: bool;

    bb0: {
        _0 = const false;
        return;
    }
}
