// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
<impl at ui/const-generics/trait-const-args.rs:6:1: 6:41>::{constant#0}: usize = {
    let mut _0: usize;

    bb0: {
        _0 = const N;
        return;
    }
}

<impl at ui/const-generics/trait-const-args.rs:6:1: 6:41>::{constant#1}: usize = {
    let mut _0: usize;

    bb0: {
        _0 = const N;
        return;
    }
}

fn foo_impl(_1: impl Foo<3>) -> () {
    let mut _0: ();

    bb0: {
        drop(_1) -> bb1;
    }

    bb1: {
        return;
    }
}

foo_impl::{constant#0}: usize = {
    let mut _0: usize;

    bb0: {
        _0 = const 3_usize;
        return;
    }
}

fn foo_explicit(_1: T) -> () {
    let mut _0: ();

    bb0: {
        drop(_1) -> bb1;
    }

    bb1: {
        return;
    }
}

foo_explicit::{constant#0}: usize = {
    let mut _0: usize;

    bb0: {
        _0 = const 3_usize;
        return;
    }
}

fn foo_where(_1: T) -> () {
    let mut _0: ();

    bb0: {
        drop(_1) -> bb1;
    }

    bb1: {
        return;
    }
}

foo_where::{constant#0}: usize = {
    let mut _0: usize;

    bb0: {
        _0 = const 3_usize;
        return;
    }
}

fn main() -> () {
    let mut _0: ();
    let _1: ();
    let _2: ();
    let _3: ();
    let _4: ();
    let _5: ();
    let _6: ();

    bb0: {
        _1 = foo_impl::<Const<3>>(const Const::<3>) -> bb1;
    }

    bb1: {
        _2 = foo_impl::<Const<3>>(const Const::<3>) -> bb2;
    }

    bb2: {
        _3 = foo_explicit::<Const<3>>(const Const::<3>) -> bb3;
    }

    bb3: {
        _4 = foo_explicit::<Const<3>>(const Const::<3>) -> bb4;
    }

    bb4: {
        _5 = foo_where::<Const<3>>(const Const::<3>) -> bb5;
    }

    bb5: {
        _6 = foo_where::<Const<3>>(const Const::<3>) -> bb6;
    }

    bb6: {
        return;
    }
}

main::{constant#0}: usize = {
    let mut _0: usize;

    bb0: {
        _0 = const 3_usize;
        return;
    }
}

main::{constant#1}: usize = {
    let mut _0: usize;

    bb0: {
        _0 = const 3_usize;
        return;
    }
}

main::{constant#2}: usize = {
    let mut _0: usize;

    bb0: {
        _0 = const 3_usize;
        return;
    }
}
