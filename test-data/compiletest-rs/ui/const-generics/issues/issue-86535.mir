// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
<impl at ui/const-generics/issues/issue-86535.rs:6:1: 6:43>::{constant#0}: &str = {
    let mut _0: &str;

    bb0: {
        _0 = const S;
        return;
    }
}

const <impl at ui/const-generics/issues/issue-86535.rs:6:1: 6:43>::W: usize = {
    let mut _0: usize;

    bb0: {
        _0 = const 3_usize;
        return;
    }
}

fn <impl at ui/const-generics/issues/issue-86535.rs:6:1: 6:43>::d(_1: &[u8; Self::W]) -> F<S> {
    debug r => _1;
    let mut _0: F<S>;
    let _2: [u8; Self::W];
    scope 1 {
        debug x => _2;
    }

    bb0: {
        _2 = [const 0_u8; Self::W];
        return;
    }
}

<impl at ui/const-generics/issues/issue-86535.rs:6:1: 6:43>::d::{constant#0}: usize = {
    let mut _0: usize;

    bb0: {
        _0 = const _;
        return;
    }
}

<impl at ui/const-generics/issues/issue-86535.rs:6:1: 6:43>::d::{constant#1}: &str = {
    let mut _0: &str;

    bb0: {
        _0 = const S;
        return;
    }
}

<impl at ui/const-generics/issues/issue-86535.rs:6:1: 6:43>::d::{constant#3}: usize = {
    let mut _0: usize;

    bb0: {
        _0 = const _;
        return;
    }
}

<impl at ui/const-generics/issues/issue-86535.rs:6:1: 6:43>::d::{constant#2}: usize = {
    let mut _0: usize;

    bb0: {
        _0 = const _;
        return;
    }
}

X::d::{constant#0}: usize = {
    let mut _0: usize;

    bb0: {
        _0 = const _;
        return;
    }
}

fn main() -> () {
    let mut _0: ();

    bb0: {
        return;
    }
}
