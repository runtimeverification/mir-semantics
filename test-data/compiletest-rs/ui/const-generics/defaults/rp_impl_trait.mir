// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
Uwu::{constant#0}: u32 = {
    let mut _0: u32;

    bb0: {
        _0 = const 1_u32;
        return;
    }
}

Uwu::{constant#1}: u32 = {
    let mut _0: u32;

    bb0: {
        _0 = const N;
        return;
    }
}

<impl at ui/const-generics/defaults/rp_impl_trait.rs:5:1: 5:36>::{constant#0}: u32 = {
    let mut _0: u32;

    bb0: {
        _0 = const N;
        return;
    }
}

fn rawr() -> impl Trait {
    let mut _0: impl Trait;

    bb0: {
        return;
    }
}

rawr::{constant#0}: u32 = {
    let mut _0: u32;

    bb0: {
        _0 = const N;
        return;
    }
}

Traitor::{constant#0}: u8 = {
    let mut _0: u8;

    bb0: {
        _0 = const 1_u8;
        return;
    }
}

Traitor::{constant#1}: u8 = {
    let mut _0: u8;

    bb0: {
        _0 = const N;
        return;
    }
}

<impl at ui/const-generics/defaults/rp_impl_trait.rs:13:1: 13:37>::{constant#0}: u8 = {
    let mut _0: u8;

    bb0: {
        _0 = const N;
        return;
    }
}

<impl at ui/const-generics/defaults/rp_impl_trait.rs:14:1: 14:27>::{constant#0}: u8 = {
    let mut _0: u8;

    bb0: {
        _0 = const 1_u8;
        return;
    }
}

<impl at ui/const-generics/defaults/rp_impl_trait.rs:14:1: 14:27>::{constant#1}: u8 = {
    let mut _0: u8;

    bb0: {
        _0 = const 1_u8;
        return;
    }
}

fn uwu() -> impl Traitor<N> {
    let mut _0: impl Traitor<N>;

    bb0: {
        _0 = const 1_u32;
        return;
    }
}

uwu::{opaque#0}::{constant#0}: u8 = {
    let mut _0: u8;

    bb0: {
        _0 = const N;
        return;
    }
}

fn owo() -> impl Traitor {
    let mut _0: impl Traitor;

    bb0: {
        _0 = const 1_u64;
        return;
    }
}

fn main() -> () {
    let mut _0: ();
    let _1: impl Trait;
    let _2: impl Trait;
    let _3: impl Traitor<u8::MAX>;
    let _4: impl Traitor;

    bb0: {
        _1 = rawr::<3>() -> bb1;
    }

    bb1: {
        _2 = rawr::<7>() -> bb2;
    }

    bb2: {
        _3 = uwu::<u8::MAX>() -> bb3;
    }

    bb3: {
        _4 = owo() -> bb4;
    }

    bb4: {
        return;
    }
}

main::{constant#0}: u32 = {
    let mut _0: u32;

    bb0: {
        _0 = const 3_u32;
        return;
    }
}

main::{constant#1}: u32 = {
    let mut _0: u32;

    bb0: {
        _0 = const 7_u32;
        return;
    }
}

main::{constant#2}: u8 = {
    let mut _0: u8;

    bb0: {
        _0 = const _;
        return;
    }
}
