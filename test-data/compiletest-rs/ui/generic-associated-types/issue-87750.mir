// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();
    let _1: Rc<Node<i32, RcFamily>>;
    scope 1 {
        debug _list => _1;
    }

    bb0: {
        return;
    }
}

fn Rc(_1: Box<T>) -> Rc<T> {
    let mut _0: Rc<T>;

    bb0: {
        _0 = Rc::<T>(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Rc(_1: Box<T>) -> Rc<T> {
    let mut _0: Rc<T>;

    bb0: {
        _0 = Rc::<T>(move _1);
        return;
    }
}

fn Node::Cons(_1: <P as PointerFamily>::Pointer<Node<T, P>>) -> Node<T, P> {
    let mut _0: Node<T, P>;

    bb0: {
        _0 = Node::<T, P>::Cons(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Node::Cons(_1: <P as PointerFamily>::Pointer<Node<T, P>>) -> Node<T, P> {
    let mut _0: Node<T, P>;

    bb0: {
        _0 = Node::<T, P>::Cons(move _1);
        return;
    }
}
