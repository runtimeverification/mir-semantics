// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/generic-associated-types/issue-80433-reduced.rs:10:1: 10:19>::test_mut(_1: &mut E) -> usize {
    debug self => _1;
    let mut _0: usize;
    let mut _2: !;

    bb0: {
        _2 = core::panicking::panic(const "not yet implemented");
    }
}

fn test_simpler(_1: impl TestMut<Output<'a> = usize>) -> () {
    let mut _0: ();

    bb0: {
        drop(_1) -> bb1;
    }

    bb1: {
        return;
    }
}

fn main() -> () {
    let mut _0: ();
    let _1: ();

    bb0: {
        _1 = test_simpler::<'_, E>(const E {{  }}) -> bb1;
    }

    bb1: {
        return;
    }
}
