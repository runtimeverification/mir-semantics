// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/generic-associated-types/variance_constraints.rs:11:1: 11:13>::make_b(_1: &S) -> &S {
    debug self => _1;
    let mut _0: &S;

    bb0: {
        _0 = _1;
        return;
    }
}

fn main() -> () {
    let mut _0: ();

    bb0: {
        return;
    }
}

fn E::S(_1: &S) -> E<'_> {
    let mut _0: E<'_>;

    bb0: {
        _0 = E::<'_>::S(move _1);
        return;
    }
}

// MIR FOR CTFE
fn E::S(_1: &S) -> E<'_> {
    let mut _0: E<'_>;

    bb0: {
        _0 = E::<'_>::S(move _1);
        return;
    }
}
