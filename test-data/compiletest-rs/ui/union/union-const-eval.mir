// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
const C: U = {
    let mut _0: U;

    bb0: {
        _0 = U { a: const 10_usize };
        return;
    }
}

fn main() -> () {
    let mut _0: ();
    let _1: [u8; 10];
    scope 1 {
        debug a => _1;
        let _2: [u8; 10];
        scope 2 {
            debug b => _2;
        }
    }

    bb0: {
        return;
    }
}

main::{constant#0}: usize = {
    let mut _0: usize;
    let mut _1: U;
    scope 1 {
    }

    bb0: {
        StorageLive(_1);
        _1 = const _;
        _0 = (_1.0: usize);
        StorageDead(_1);
        return;
    }
}

main::{constant#1}: usize = {
    let mut _0: usize;
    let mut _1: U;
    scope 1 {
    }

    bb0: {
        StorageLive(_1);
        _1 = const _;
        _0 = (_1.1: usize);
        StorageDead(_1);
        return;
    }
}
