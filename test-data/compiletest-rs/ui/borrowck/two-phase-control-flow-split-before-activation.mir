// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();
    let mut _1: i32;
    let mut _4: bool;
    let mut _5: &mut i32;
    let _6: ();
    let mut _7: &mut i32;
    scope 1 {
        debug a => _1;
        let mut _2: i32;
        scope 2 {
            debug b => _2;
            let _3: &mut i32;
            scope 3 {
                debug p => _3;
            }
        }
    }

    bb0: {
        _1 = const 0_i32;
        _2 = const 0_i32;
        _4 = maybe() -> bb1;
    }

    bb1: {
        switchInt(move _4) -> [0: bb3, otherwise: bb2];
    }

    bb2: {
        _3 = &mut _1;
        goto -> bb4;
    }

    bb3: {
        _5 = &mut _2;
        _3 = _5;
        goto -> bb4;
    }

    bb4: {
        _7 = move _3;
        _6 = use_::<&mut i32>(move _7) -> bb5;
    }

    bb5: {
        return;
    }
}

fn maybe() -> bool {
    let mut _0: bool;

    bb0: {
        _0 = const false;
        return;
    }
}

fn use_(_1: T) -> () {
    let mut _0: ();

    bb0: {
        drop(_1) -> bb1;
    }

    bb1: {
        return;
    }
}
