// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn join(_1: A, _2: B) -> (RA, RB) {
    debug oper_a => _1;
    debug oper_b => _2;
    let mut _0: (RA, RB);
    let mut _3: RA;
    let mut _4: RB;
    let mut _5: B;
    let mut _6: bool;

    bb0: {
        _6 = const false;
        _6 = const true;
        _3 = <A as FnOnce<()>>::call_once(move _1, const ()) -> [return: bb1, unwind: bb6];
    }

    bb1: {
        _6 = const false;
        _5 = move _2;
        _4 = <B as FnOnce<()>>::call_once(move _5, const ()) -> [return: bb2, unwind: bb3];
    }

    bb2: {
        _0 = (move _3, move _4);
        return;
    }

    bb3 (cleanup): {
        drop(_3) -> [return: bb6, unwind terminate];
    }

    bb4 (cleanup): {
        resume;
    }

    bb5 (cleanup): {
        drop(_2) -> [return: bb4, unwind terminate];
    }

    bb6 (cleanup): {
        switchInt(_6) -> [0: bb4, otherwise: bb5];
    }
}

fn main() -> () {
    let mut _0: ();
    let mut _1: ((X, Y), Z);
    let mut _2: (Pair, Z);
    scope 1 {
        debug _x => const X;
        debug _y => const Y;
        debug _z => const Z;
        scope 2 {
            debug _x => const X;
            debug _y => const Y;
        }
    }

    bb0: {
        _1 = join::<[closure@ui/borrowck/issue-55552-ascribe-wildcard-to-structured-pattern.rs:28:39: 28:41], [closure@ui/borrowck/issue-55552-ascribe-wildcard-to-structured-pattern.rs:28:50: 28:52], (X, Y), Z>(const ZeroSized: [closure@ui/borrowck/issue-55552-ascribe-wildcard-to-structured-pattern.rs:28:39: 28:41], const ZeroSized: [closure@ui/borrowck/issue-55552-ascribe-wildcard-to-structured-pattern.rs:28:50: 28:52]) -> bb1;
    }

    bb1: {
        _2 = join::<[closure@ui/borrowck/issue-55552-ascribe-wildcard-to-structured-pattern.rs:30:51: 30:53], [closure@ui/borrowck/issue-55552-ascribe-wildcard-to-structured-pattern.rs:30:75: 30:77], Pair, Z>(const ZeroSized: [closure@ui/borrowck/issue-55552-ascribe-wildcard-to-structured-pattern.rs:30:51: 30:53], const ZeroSized: [closure@ui/borrowck/issue-55552-ascribe-wildcard-to-structured-pattern.rs:30:75: 30:77]) -> bb2;
    }

    bb2: {
        return;
    }
}

fn main::{closure#0}(_1: [closure@ui/borrowck/issue-55552-ascribe-wildcard-to-structured-pattern.rs:28:39: 28:41]) -> (X, Y) {
    let mut _0: (X, Y);

    bb0: {
        return;
    }
}

fn main::{closure#1}(_1: [closure@ui/borrowck/issue-55552-ascribe-wildcard-to-structured-pattern.rs:28:50: 28:52]) -> Z {
    let mut _0: Z;

    bb0: {
        return;
    }
}

fn main::{closure#2}(_1: [closure@ui/borrowck/issue-55552-ascribe-wildcard-to-structured-pattern.rs:30:51: 30:53]) -> Pair {
    let mut _0: Pair;

    bb0: {
        return;
    }
}

fn main::{closure#3}(_1: [closure@ui/borrowck/issue-55552-ascribe-wildcard-to-structured-pattern.rs:30:75: 30:77]) -> Z {
    let mut _0: Z;

    bb0: {
        return;
    }
}
