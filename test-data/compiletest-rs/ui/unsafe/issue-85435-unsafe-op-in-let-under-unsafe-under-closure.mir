// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();
    let _1: u8;
    let _3: &u8;
    let mut _5: &*const u8;
    scope 1 {
        debug val => _1;
        let _2: *const u8;
        scope 2 {
            debug u8_ptr => _2;
            let _4: [closure@ui/unsafe/issue-85435-unsafe-op-in-let-under-unsafe-under-closure.rs:18:20: 18:22];
            scope 3 {
                debug _closure => _4;
            }
        }
    }

    bb0: {
        _1 = const 5_u8;
        _3 = &_1;
        _2 = &raw const (*_3);
        _5 = &_2;
        _4 = [closure@ui/unsafe/issue-85435-unsafe-op-in-let-under-unsafe-under-closure.rs:18:20: 18:22] { u8_ptr: move _5 };
        return;
    }
}

fn main::{closure#0}(_1: &[closure@ui/unsafe/issue-85435-unsafe-op-in-let-under-unsafe-under-closure.rs:18:20: 18:22]) -> u8 {
    debug u8_ptr => (*((*_1).0: &*const u8));
    let mut _0: u8;
    let mut _2: &*const u8;
    let mut _3: *const u8;
    scope 1 {
        scope 2 {
            debug tmp => _0;
        }
    }

    bb0: {
        _2 = deref_copy ((*_1).0: &*const u8);
        _3 = deref_copy (*_2);
        _0 = (*_3);
        return;
    }
}
