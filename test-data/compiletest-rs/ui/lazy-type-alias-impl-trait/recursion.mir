// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn foo(_1: bool) -> Foo {
    debug b => _1;
    let mut _0: Foo;
    let _2: u32;
    scope 1 {
        debug x => _2;
    }

    bb0: {
        switchInt(_1) -> [0: bb2, otherwise: bb1];
    }

    bb1: {
        _0 = const 42_u32;
        goto -> bb4;
    }

    bb2: {
        _2 = foo(const false) -> bb3;
    }

    bb3: {
        _0 = const 99_u32;
        goto -> bb4;
    }

    bb4: {
        return;
    }
}

fn bar(_1: bool) -> impl Debug {
    debug b => _1;
    let mut _0: impl std::fmt::Debug;
    let _2: u32;
    scope 1 {
        debug x => _2;
    }

    bb0: {
        switchInt(_1) -> [0: bb2, otherwise: bb1];
    }

    bb1: {
        _0 = const 42_u32;
        goto -> bb4;
    }

    bb2: {
        _2 = bar(const false) -> bb3;
    }

    bb3: {
        _0 = const 99_u32;
        goto -> bb4;
    }

    bb4: {
        return;
    }
}

fn main() -> () {
    let mut _0: ();

    bb0: {
        return;
    }
}
