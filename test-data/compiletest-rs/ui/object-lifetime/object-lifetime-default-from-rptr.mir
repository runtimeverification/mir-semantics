// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn Test::foo(_1: &Self) -> () {
    debug self => _1;
    let mut _0: ();

    bb0: {
        return;
    }
}

fn a(_1: &dyn Test, _2: SomeStruct<'_>) -> () {
    debug t => _1;
    debug ss => _2;
    let mut _0: ();

    bb0: {
        (_2.0: &dyn Test) = _1;
        return;
    }
}

fn b(_1: &dyn Test, _2: SomeStruct<'_>) -> () {
    debug t => _1;
    debug ss => _2;
    let mut _0: ();

    bb0: {
        (_2.1: &dyn Test) = _1;
        return;
    }
}

fn c(_1: &dyn Test, _2: SomeStruct<'_>) -> () {
    debug t => _1;
    debug ss => _2;
    let mut _0: ();

    bb0: {
        (_2.0: &dyn Test) = _1;
        return;
    }
}

fn d(_1: &dyn Test, _2: SomeStruct<'_>) -> () {
    debug t => _1;
    debug ss => _2;
    let mut _0: ();

    bb0: {
        (_2.1: &dyn Test) = _1;
        return;
    }
}

fn e(_1: &dyn std::fmt::Display) -> () {
    let mut _0: ();

    bb0: {
        return;
    }
}

fn main() -> () {
    let mut _0: ();
    let _1: ();
    let _2: &dyn std::fmt::Display;
    let _3: &i32;
    let _4: i32;

    bb0: {
        _4 = const 0_i32;
        _3 = &_4;
        _2 = _3 as &dyn std::fmt::Display (Pointer(Unsize));
        _1 = e(_2) -> bb1;
    }

    bb1: {
        return;
    }
}
