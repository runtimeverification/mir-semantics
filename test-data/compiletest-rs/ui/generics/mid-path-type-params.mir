// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/generics/mid-path-type-params.rs:10:1: 10:13>::new(_1: T, _2: U) -> S<T> {
    debug x => _1;
    let mut _0: S<T>;

    bb0: {
        _0 = S::<T> { contents: move _1 };
        drop(_2) -> bb1;
    }

    bb1: {
        return;
    }
}

fn <impl at ui/generics/mid-path-type-params.rs:26:1: 26:25>::new(_1: isize, _2: U) -> S2 {
    debug x => _1;
    let mut _0: S2;

    bb0: {
        _0 = S2 { contents: _1 };
        drop(_2) -> bb1;
    }

    bb1: {
        return;
    }
}

fn main() -> () {
    let mut _0: ();
    let mut _1: S<isize>;
    let mut _2: S2;
    scope 1 {
        scope 2 {
        }
    }

    bb0: {
        _1 = S::<isize>::new::<f64>(const 1_isize, const 1f64) -> bb1;
    }

    bb1: {
        _2 = <S2 as Trait<isize>>::new::<f64>(const 1_isize, const 1f64) -> bb2;
    }

    bb2: {
        return;
    }
}
