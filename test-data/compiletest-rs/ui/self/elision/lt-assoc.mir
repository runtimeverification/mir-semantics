// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/self/elision/lt-assoc.rs:17:1: 17:20>::take_self(_1: Struct<'_>, _2: &u32) -> &u32 {
    debug self => _1;
    debug f => _2;
    let mut _0: &u32;

    bb0: {
        _0 = _2;
        return;
    }
}

fn <impl at ui/self/elision/lt-assoc.rs:17:1: 17:20>::take_AssocType(_1: Struct<'_>, _2: &u32) -> &u32 {
    debug self => _1;
    debug f => _2;
    let mut _0: &u32;

    bb0: {
        _0 = _2;
        return;
    }
}

fn <impl at ui/self/elision/lt-assoc.rs:17:1: 17:20>::take_Box_AssocType(_1: Box<Struct<'_>>, _2: &u32) -> &u32 {
    debug self => _1;
    debug f => _2;
    let mut _0: &u32;

    bb0: {
        _0 = _2;
        drop(_1) -> bb1;
    }

    bb1: {
        return;
    }
}

fn <impl at ui/self/elision/lt-assoc.rs:17:1: 17:20>::take_Box_Box_AssocType(_1: Box<Box<Struct<'_>>>, _2: &u32) -> &u32 {
    debug self => _1;
    debug f => _2;
    let mut _0: &u32;

    bb0: {
        _0 = _2;
        drop(_1) -> bb1;
    }

    bb1: {
        return;
    }
}

fn <impl at ui/self/elision/lt-assoc.rs:17:1: 17:20>::take_Rc_AssocType(_1: Rc<Struct<'_>>, _2: &u32) -> &u32 {
    debug self => _1;
    debug f => _2;
    let mut _0: &u32;

    bb0: {
        _0 = _2;
        drop(_1) -> bb1;
    }

    bb1: {
        return;
    }
}

fn <impl at ui/self/elision/lt-assoc.rs:17:1: 17:20>::take_Box_Rc_AssocType(_1: Box<Rc<Struct<'_>>>, _2: &u32) -> &u32 {
    debug self => _1;
    debug f => _2;
    let mut _0: &u32;

    bb0: {
        _0 = _2;
        drop(_1) -> bb1;
    }

    bb1: {
        return;
    }
}

fn main() -> () {
    let mut _0: ();

    bb0: {
        return;
    }
}
