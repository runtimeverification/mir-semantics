// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/self/elision/ref-assoc.rs:17:1: 17:12>::ref_AssocType(_1: &Struct, _2: &u32) -> &u32 {
    debug self => _1;
    debug f => _2;
    let mut _0: &u32;

    bb0: {
        _0 = _2;
        return;
    }
}

fn <impl at ui/self/elision/ref-assoc.rs:17:1: 17:12>::box_ref_AssocType(_1: Box<&Struct>, _2: &u32) -> &u32 {
    debug self => _1;
    debug f => _2;
    let mut _0: &u32;

    bb0: {
        _0 = _2;
        drop(_1) -> bb1;
    }

    bb1: {
        return;
    }
}

fn <impl at ui/self/elision/ref-assoc.rs:17:1: 17:12>::pin_ref_AssocType(_1: Pin<&Struct>, _2: &u32) -> &u32 {
    debug self => _1;
    debug f => _2;
    let mut _0: &u32;

    bb0: {
        _0 = _2;
        return;
    }
}

fn <impl at ui/self/elision/ref-assoc.rs:17:1: 17:12>::box_box_ref_AssocType(_1: Box<Box<&Struct>>, _2: &u32) -> &u32 {
    debug self => _1;
    debug f => _2;
    let mut _0: &u32;

    bb0: {
        _0 = _2;
        drop(_1) -> bb1;
    }

    bb1: {
        return;
    }
}

fn <impl at ui/self/elision/ref-assoc.rs:17:1: 17:12>::box_pin_ref_AssocType(_1: Box<Pin<&Struct>>, _2: &u32) -> &u32 {
    debug self => _1;
    debug f => _2;
    let mut _0: &u32;

    bb0: {
        _0 = _2;
        drop(_1) -> bb1;
    }

    bb1: {
        return;
    }
}

fn main() -> () {
    let mut _0: ();

    bb0: {
        return;
    }
}
