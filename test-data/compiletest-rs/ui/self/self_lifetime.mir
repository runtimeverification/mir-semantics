// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/self/self_lifetime.rs:6:1: 6:17>::foo(_1: &Foo<'_>) -> &() {
    debug self => _1;
    let mut _0: &();

    bb0: {
        _0 = deref_copy ((*_1).0: &());
        return;
    }
}

fn <impl at ui/self/self_lifetime.rs:11:1: 11:11>::bar(_1: &Foo<'_>, _2: &()) -> &() {
    debug self => _1;
    debug arg => _2;
    let mut _0: &();

    bb0: {
        _0 = _2;
        return;
    }
}

fn main() -> () {
    let mut _0: ();

    bb0: {
        return;
    }
}

fn Foo(_1: &()) -> Foo<'_> {
    let mut _0: Foo<'_>;

    bb0: {
        _0 = Foo::<'_>(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo(_1: &()) -> Foo<'_> {
    let mut _0: Foo<'_>;

    bb0: {
        _0 = Foo::<'_>(move _1);
        return;
    }
}
