// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();
    let mut _1: u8;
    let mut _2: &u8;
    let _3: u8;
    let mut _4: u8;
    let mut _5: &u8;
    let _6: u8;
    let mut _7: u8;
    let mut _8: &u8;
    let _9: u8;
    let mut _10: &u8;
    let _11: u8;
    let mut _12: f32;
    let mut _13: &f32;
    let _14: f32;
    let mut _15: f32;
    let mut _16: &f32;
    let _17: f32;
    let mut _18: f32;
    let mut _19: &f32;
    let _20: f32;
    let mut _21: &f32;
    let _22: f32;
    let mut _23: u8;
    let mut _24: &i32;
    let _25: i32;
    let mut _26: u8;
    let mut _27: &u8;
    let _28: u8;
    let mut _29: u8;
    let mut _30: &u8;
    let _31: u8;
    let mut _32: &i32;
    let _33: i32;
    let mut _35: usize;
    let mut _36: &usize;
    let _37: usize;
    let mut _38: i32;
    let mut _39: &i32;
    let _40: i32;
    let mut _41: i32;
    let mut _42: &i32;
    let _43: i32;
    let mut _44: i32;
    let mut _45: &i32;
    let _46: i32;
    let mut _47: &i32;
    let _48: i32;
    scope 1 {
        scope 2 {
            scope 3 {
                scope 4 {
                    scope 5 {
                        scope 6 {
                            scope 7 {
                                scope 8 {
                                    scope 9 {
                                        scope 10 {
                                            scope 11 {
                                                scope 12 {
                                                    let _34: usize;
                                                    scope 13 {
                                                        debug a => _34;
                                                        scope 14 {
                                                            scope 15 {
                                                                scope 16 {
                                                                    scope 17 {
                                                                        scope 18 {
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _3 = const 0_u8;
        _2 = &_3;
        _1 = <u8 as Add<&u8>>::add(const 0_u8, move _2) -> bb1;
    }

    bb1: {
        _6 = const 0_u8;
        _5 = &_6;
        _4 = <&u8 as Add<u8>>::add(move _5, const 0_u8) -> bb2;
    }

    bb2: {
        _9 = const 0_u8;
        _8 = &_9;
        _11 = const 0_u8;
        _10 = &_11;
        _7 = <&u8 as Add>::add(move _8, move _10) -> bb3;
    }

    bb3: {
        _14 = const 0f32;
        _13 = &_14;
        _12 = <f32 as Add<&f32>>::add(const 0f32, move _13) -> bb4;
    }

    bb4: {
        _17 = const 0f32;
        _16 = &_17;
        _15 = <&f32 as Add<f32>>::add(move _16, const 0f32) -> bb5;
    }

    bb5: {
        _20 = const 0f32;
        _19 = &_20;
        _22 = const 0f32;
        _21 = &_22;
        _18 = <&f32 as Add>::add(move _19, move _21) -> bb6;
    }

    bb6: {
        _25 = const 0_i32;
        _24 = &_25;
        _23 = <u8 as Shl<&i32>>::shl(const 0_u8, move _24) -> bb7;
    }

    bb7: {
        _28 = const 0_u8;
        _27 = &_28;
        _26 = <&u8 as Shl<i32>>::shl(move _27, const 0_i32) -> bb8;
    }

    bb8: {
        _31 = const 0_u8;
        _30 = &_31;
        _33 = const 0_i32;
        _32 = &_33;
        _29 = <&u8 as Shl<&i32>>::shl(move _30, move _32) -> bb9;
    }

    bb9: {
        _34 = const 22_usize;
        _37 = const 44_usize;
        _36 = &_37;
        _35 = <usize as Add<&usize>>::add(_34, move _36) -> bb10;
    }

    bb10: {
        _40 = const 0_i32;
        _39 = &_40;
        _38 = <i32 as Add<&i32>>::add(const 0_i32, move _39) -> bb11;
    }

    bb11: {
        _43 = const 0_i32;
        _42 = &_43;
        _41 = <&i32 as Add<i32>>::add(move _42, const 0_i32) -> bb12;
    }

    bb12: {
        _46 = const 0_i32;
        _45 = &_46;
        _48 = const 0_i32;
        _47 = &_48;
        _44 = <&i32 as Add>::add(move _45, move _47) -> bb13;
    }

    bb13: {
        return;
    }
}
