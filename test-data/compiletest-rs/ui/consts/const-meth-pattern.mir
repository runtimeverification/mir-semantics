// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/consts/const-meth-pattern.rs:5:1: 5:7>::banana() -> bool {
    let mut _0: bool;

    bb0: {
        _0 = const true;
        return;
    }
}

// MIR FOR CTFE
fn <impl at ui/consts/const-meth-pattern.rs:5:1: 5:7>::banana() -> bool {
    let mut _0: bool;

    bb0: {
        _0 = const true;
        return;
    }
}

const ABANANA: bool = {
    let mut _0: bool;

    bb0: {
        ConstEvalCounter;
        _0 = A::banana() -> bb1;
    }

    bb1: {
        return;
    }
}

fn main() -> () {
    let mut _0: ();
    let mut _1: bool;
    let _2: !;

    bb0: {
        _1 = const true;
        switchInt(_1) -> [0: bb1, otherwise: bb2];
    }

    bb1: {
        _2 = begin_panic::<&str>(const "what?");
    }

    bb2: {
        return;
    }
}
