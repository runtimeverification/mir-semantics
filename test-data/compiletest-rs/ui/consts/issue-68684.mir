// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn _a() -> _Enum {
    let mut _0: _Enum;

    bb0: {
        _0 = _Enum::A() -> bb1;
    }

    bb1: {
        return;
    }
}

// MIR FOR CTFE
fn _a() -> _Enum {
    let mut _0: _Enum;

    bb0: {
        ConstEvalCounter;
        _0 = _Enum::A() -> bb1;
    }

    bb1: {
        return;
    }
}

const _A: _Enum = {
    let mut _0: _Enum;

    bb0: {
        ConstEvalCounter;
        _0 = _a() -> bb1;
    }

    bb1: {
        return;
    }
}

fn main() -> () {
    let mut _0: ();

    bb0: {
        return;
    }
}

fn _Enum::A() -> _Enum {
    let mut _0: _Enum;

    bb0: {
        _0 = _Enum::A;
        return;
    }
}

// MIR FOR CTFE
fn _Enum::A() -> _Enum {
    let mut _0: _Enum;

    bb0: {
        _0 = _Enum::A;
        return;
    }
}
