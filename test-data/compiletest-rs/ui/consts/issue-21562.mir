// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
static SARRAY: [i32; 1] = {
    let mut _0: [i32; 1];

    bb0: {
        _0 = [const 11_i32];
        return;
    }
}

SARRAY::{constant#0}: usize = {
    let mut _0: usize;

    bb0: {
        _0 = const 1_usize;
        return;
    }
}

static mystruct: MyStruct = {
    let mut _0: MyStruct;
    let mut _1: *const [i32];
    let mut _2: *const [i32; 1];
    let _3: &[i32; 1];
    let _4: &[i32; 1];

    bb0: {
        StorageLive(_1);
        StorageLive(_2);
        StorageLive(_3);
        StorageLive(_4);
        _4 = const {alloc1: &[i32; 1]};
        _3 = &(*_4);
        _2 = &raw const (*_3);
        _1 = move _2 as *const [i32] (Pointer(Unsize));
        StorageDead(_2);
        _0 = MyStruct { arr: move _1 };
        StorageDead(_3);
        StorageDead(_1);
        return;
    }
}

alloc1 (static: SARRAY, size: 4, align: 4) {
    0b 00 00 00                                     â”‚ ....
}

fn main() -> () {
    let mut _0: ();

    bb0: {
        return;
    }
}
