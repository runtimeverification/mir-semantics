// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();
    scope 1 {
    }

    bb0: {
        return;
    }
}

main::{constant#0}: usize = {
    let mut _0: usize;

    bb0: {
        _0 = const 3_usize;
        return;
    }
}

const FOO: &[(&str, &str)] = {
    let mut _0: &[(&str, &str)];
    let mut _1: &[(&str, &str); 3];
    let _2: &[(&str, &str); 3];
    let _3: [(&str, &str); 3];
    let mut _4: (&str, &str);

    bb0: {
        StorageLive(_1);
        StorageLive(_2);
        StorageLive(_3);
        StorageLive(_4);
        _4 = (const "", const "");
        _3 = [move _4; 3];
        StorageDead(_4);
        _2 = &_3;
        _1 = &(*_2);
        _0 = move _1 as &[(&str, &str)] (Pointer(Unsize));
        StorageDead(_2);
        StorageDead(_1);
        return;
    }
}

FOO::{constant#0}: usize = {
    let mut _0: usize;

    bb0: {
        _0 = const 3_usize;
        return;
    }
}

const BAR: &[(&str, &str); 5] = {
    let mut _0: &[(&str, &str); 5];
    let _1: &[(&str, &str); 5];
    let _2: [(&str, &str); 5];
    let mut _3: (&str, &str);

    bb0: {
        StorageLive(_1);
        StorageLive(_2);
        StorageLive(_3);
        _3 = (const "", const "");
        _2 = [move _3; 5];
        StorageDead(_3);
        _1 = &_2;
        _0 = &(*_1);
        StorageDead(_1);
        return;
    }
}

BAR::{constant#0}: usize = {
    let mut _0: usize;

    bb0: {
        _0 = const 5_usize;
        return;
    }
}

BAR::{constant#1}: usize = {
    let mut _0: usize;

    bb0: {
        _0 = const 5_usize;
        return;
    }
}

const BAA: &[[&str; 12]; 11] = {
    let mut _0: &[[&str; 12]; 11];
    let _1: &[[&str; 12]; 11];
    let _2: [[&str; 12]; 11];
    let mut _3: [&str; 12];

    bb0: {
        StorageLive(_1);
        StorageLive(_2);
        StorageLive(_3);
        _3 = [const ""; 12];
        _2 = [move _3; 11];
        StorageDead(_3);
        _1 = &_2;
        _0 = &(*_1);
        StorageDead(_1);
        return;
    }
}

BAA::{constant#0}: usize = {
    let mut _0: usize;

    bb0: {
        _0 = const 12_usize;
        return;
    }
}

BAA::{constant#1}: usize = {
    let mut _0: usize;

    bb0: {
        _0 = const 11_usize;
        return;
    }
}

BAA::{constant#2}: usize = {
    let mut _0: usize;

    bb0: {
        _0 = const 12_usize;
        return;
    }
}

BAA::{constant#3}: usize = {
    let mut _0: usize;

    bb0: {
        _0 = const 11_usize;
        return;
    }
}
