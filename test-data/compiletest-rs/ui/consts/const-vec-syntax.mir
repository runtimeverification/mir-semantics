// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn f(_1: &[isize]) -> () {
    let mut _0: ();

    bb0: {
        return;
    }
}

fn main() -> () {
    let mut _0: ();
    let _1: [isize; 3];
    let _2: ();
    let mut _3: &[isize];
    let _4: &[isize; 3];
    scope 1 {
        debug v => _1;
    }

    bb0: {
        _1 = [const 1_isize, const 2_isize, const 3_isize];
        _4 = &_1;
        _3 = _4 as &[isize] (Pointer(Unsize));
        _2 = f(move _3) -> bb1;
    }

    bb1: {
        return;
    }
}
