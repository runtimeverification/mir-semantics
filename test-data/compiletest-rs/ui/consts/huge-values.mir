// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/consts/huge-values.rs:8:10: 8:15>::clone(_1: &Foo) -> Foo {
    debug self => _1;
    let mut _0: Foo;

    bb0: {
        return;
    }
}

fn main() -> () {
    let mut _0: ();
    scope 1 {
        scope 2 {
            scope 3 {
                scope 4 {
                    scope 5 {
                    }
                }
            }
        }
    }

    bb0: {
        return;
    }
}

main::{constant#0}: usize = {
    let mut _0: usize;

    bb0: {
        _0 = const 4000000000_usize;
        return;
    }
}

main::{constant#1}: usize = {
    let mut _0: usize;

    bb0: {
        _0 = const 4000000000_usize;
        return;
    }
}

main::{constant#2}: usize = {
    let mut _0: usize;

    bb0: {
        _0 = const 4000000000_usize;
        return;
    }
}

main::{constant#3}: usize = {
    let mut _0: usize;

    bb0: {
        _0 = const 0_usize;
        return;
    }
}

main::{constant#4}: usize = {
    let mut _0: usize;

    bb0: {
        _0 = const 4000000000_usize;
        return;
    }
}

main::{constant#5}: usize = {
    let mut _0: usize;

    bb0: {
        _0 = const 0_usize;
        return;
    }
}

main::{constant#6}: usize = {
    let mut _0: usize;

    bb0: {
        _0 = const 4000000000_usize;
        return;
    }
}
