// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn i(_1: (u32, u32)) -> u32 {
    let mut _0: u32;
    let _2: u32;
    let _3: u32;
    scope 1 {
        debug a => _2;
        debug b => _3;
    }

    bb0: {
        _2 = (_1.0: u32);
        _3 = (_1.1: u32);
        _0 = Add(_2, _3);
        return;
    }
}

// MIR FOR CTFE
fn i(_1: (u32, u32)) -> u32 {
    let mut _0: u32;
    let _2: u32;
    let _3: u32;
    let mut _4: u32;
    let mut _5: u32;
    scope 1 {
        debug a => _2;
        debug b => _3;
    }

    bb0: {
        StorageLive(_2);
        _2 = (_1.0: u32);
        StorageLive(_3);
        _3 = (_1.1: u32);
        StorageLive(_4);
        _4 = _2;
        StorageLive(_5);
        _5 = _3;
        _0 = Add(move _4, move _5);
        StorageDead(_5);
        StorageDead(_4);
        StorageDead(_3);
        StorageDead(_2);
        return;
    }
}

fn main() -> () {
    let mut _0: ();

    bb0: {
        return;
    }
}
