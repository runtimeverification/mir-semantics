// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
static bar: Bar = {
    let mut _0: Bar;
    let mut _1: Foo;

    bb0: {
        StorageLive(_1);
        _1 = Foo::IntVal(const 0_i32);
        _0 = Bar { i: const 0_i32, v: move _1 };
        StorageDead(_1);
        return;
    }
}

fn main() -> () {
    let mut _0: ();

    bb0: {
        return;
    }
}

fn Foo::IntVal(_1: i32) -> Foo {
    let mut _0: Foo;

    bb0: {
        _0 = Foo::IntVal(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo::IntVal(_1: i32) -> Foo {
    let mut _0: Foo;

    bb0: {
        _0 = Foo::IntVal(move _1);
        return;
    }
}

fn Foo::Int64Val(_1: i64) -> Foo {
    let mut _0: Foo;

    bb0: {
        _0 = Foo::Int64Val(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo::Int64Val(_1: i64) -> Foo {
    let mut _0: Foo;

    bb0: {
        _0 = Foo::Int64Val(move _1);
        return;
    }
}
