// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/consts/drop_none.rs:4:1: 4:16>::drop(_1: &mut A) -> () {
    debug self => _1;
    let mut _0: ();

    bb0: {
        return;
    }
}

const FOO: Option<A> = {
    let mut _0: std::option::Option<A>;

    bb0: {
        _0 = Option::<A>::None;
        return;
    }
}

const BAR: () = {
    let mut _0: ();
    let mut _1: (std::option::Option<A>, ());
    let mut _2: std::option::Option<A>;
    let mut _3: ();

    bb0: {
        StorageLive(_1);
        StorageLive(_2);
        _2 = const _;
        StorageLive(_3);
        _3 = ();
        _1 = (move _2, move _3);
        StorageDead(_3);
        StorageDead(_2);
        _0 = (_1.1: ());
        drop(_1) -> [return: bb1, unwind: bb2];
    }

    bb1: {
        StorageDead(_1);
        return;
    }

    bb2 (cleanup): {
        resume;
    }
}

fn main() -> () {
    let mut _0: ();

    bb0: {
        return;
    }
}
