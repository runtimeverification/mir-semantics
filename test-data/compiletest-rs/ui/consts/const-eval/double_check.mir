// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
Foo::A::{constant#0}: isize = {
    let mut _0: isize;

    bb0: {
        _0 = const 5_isize;
        return;
    }
}

Foo::B::{constant#0}: isize = {
    let mut _0: isize;

    bb0: {
        _0 = const 42_isize;
        return;
    }
}

Bar::C::{constant#0}: isize = {
    let mut _0: isize;

    bb0: {
        _0 = const 42_isize;
        return;
    }
}

Bar::D::{constant#0}: isize = {
    let mut _0: isize;

    bb0: {
        _0 = const 99_isize;
        return;
    }
}

static BAR: u8 = {
    let mut _0: u8;

    bb0: {
        _0 = const 42_u8;
        return;
    }
}

static FOO: (&Foo, &Bar) = {
    let mut _0: (&Foo, &Bar);
    let mut _1: &Foo;
    let mut _2: Union;
    let mut _3: &u8;
    let _4: &u8;
    let _5: &u8;
    let mut _6: &Bar;
    let mut _7: Union;
    let mut _8: &u8;
    let _9: &u8;
    let _10: &u8;
    scope 1 {
    }

    bb0: {
        StorageLive(_1);
        StorageLive(_2);
        StorageLive(_3);
        StorageLive(_4);
        StorageLive(_5);
        _5 = const {alloc5: &u8};
        _4 = &(*_5);
        _3 = &(*_4);
        _2 = Union { foo: move _3 };
        StorageDead(_3);
        _1 = (_2.0: &Foo);
        StorageLive(_6);
        StorageLive(_7);
        StorageLive(_8);
        StorageLive(_9);
        StorageLive(_10);
        _10 = const {alloc5: &u8};
        _9 = &(*_10);
        _8 = &(*_9);
        _7 = Union { foo: move _8 };
        StorageDead(_8);
        _6 = (_7.1: &Bar);
        _0 = (move _1, move _6);
        StorageDead(_6);
        StorageDead(_1);
        StorageDead(_10);
        StorageDead(_9);
        StorageDead(_7);
        StorageDead(_5);
        StorageDead(_4);
        StorageDead(_2);
        return;
    }
}

alloc5 (static: BAR, size: 1, align: 1) {
    2a                                              â”‚ *
}

static FOO2: (&Foo, &Bar) = {
    let mut _0: (&Foo, &Bar);
    let mut _1: &Foo;
    let mut _2: &u8;
    let _3: &u8;
    let mut _4: &Bar;
    let mut _5: &u8;
    let _6: &u8;
    scope 1 {
    }

    bb0: {
        StorageLive(_1);
        StorageLive(_2);
        StorageLive(_3);
        _3 = const {alloc5: &u8};
        _2 = &(*_3);
        _1 = move _2 as &Foo (Transmute);
        StorageDead(_2);
        StorageLive(_4);
        StorageLive(_5);
        StorageLive(_6);
        _6 = const {alloc5: &u8};
        _5 = &(*_6);
        _4 = move _5 as &Bar (Transmute);
        StorageDead(_5);
        _0 = (move _1, move _4);
        StorageDead(_4);
        StorageDead(_1);
        StorageDead(_6);
        StorageDead(_3);
        return;
    }
}

alloc5 (static: BAR, size: 1, align: 1) {
    2a                                              â”‚ *
}

fn main() -> () {
    let mut _0: ();

    bb0: {
        return;
    }
}
