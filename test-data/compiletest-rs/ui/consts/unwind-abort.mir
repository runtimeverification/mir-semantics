// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn foo() -> () {
    let mut _0: ();
    let mut _1: !;

    bb0: {
        _1 = begin_panic::<&str>(const "explicit panic") -> unwind terminate;
    }
}

// MIR FOR CTFE
fn foo() -> () {
    let mut _0: ();
    let mut _1: !;

    bb0: {
        StorageLive(_1);
        ConstEvalCounter;
        _1 = begin_panic::<&str>(const "explicit panic") -> unwind terminate;
    }
}

fn bar() -> () {
    let mut _0: ();
    let _1: ();

    bb0: {
        _1 = foo() -> [return: bb1, unwind unreachable];
    }

    bb1: {
        return;
    }
}

// MIR FOR CTFE
fn bar() -> () {
    let mut _0: ();
    let _1: ();

    bb0: {
        StorageLive(_1);
        ConstEvalCounter;
        _1 = foo() -> [return: bb1, unwind unreachable];
    }

    bb1: {
        StorageDead(_1);
        _0 = const ();
        return;
    }
}

fn main() -> () {
    let mut _0: ();
    let _1: ();

    bb0: {
        _1 = bar() -> bb1;
    }

    bb1: {
        return;
    }
}
