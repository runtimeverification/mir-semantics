// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/associated-types/issue-25700-1.rs:8:1: 8:32>::clone(_1: &S<T>) -> S<T> {
    debug self => _1;
    let mut _0: S<T>;

    bb0: {
        _0 = (*_1);
        return;
    }
}

fn main() -> () {
    let mut _0: ();

    bb0: {
        return;
    }
}

fn S(_1: Option<&T>) -> S<T> {
    let mut _0: S<T>;

    bb0: {
        _0 = S::<T>(move _1);
        return;
    }
}

// MIR FOR CTFE
fn S(_1: Option<&T>) -> S<T> {
    let mut _0: S<T>;

    bb0: {
        _0 = S::<T>(move _1);
        return;
    }
}
