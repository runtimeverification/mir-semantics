// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();

    bb0: {
        return;
    }
}

fn ChildWrapper(_1: T) -> ChildWrapper<T> {
    let mut _0: ChildWrapper<T>;

    bb0: {
        _0 = ChildWrapper::<T>(move _1);
        return;
    }
}

// MIR FOR CTFE
fn ChildWrapper(_1: T) -> ChildWrapper<T> {
    let mut _0: ChildWrapper<T>;

    bb0: {
        _0 = ChildWrapper::<T>(move _1);
        return;
    }
}

fn ParentWrapper(_1: T) -> ParentWrapper<T> {
    let mut _0: ParentWrapper<T>;

    bb0: {
        _0 = ParentWrapper::<T>(move _1);
        return;
    }
}

// MIR FOR CTFE
fn ParentWrapper(_1: T) -> ParentWrapper<T> {
    let mut _0: ParentWrapper<T>;

    bb0: {
        _0 = ParentWrapper::<T>(move _1);
        return;
    }
}
