// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn unit() -> impl Into<<() as Trait>::Assoc> {
    let mut _0: impl std::convert::Into<<() as Trait>::Assoc>;

    bb0: {
        return;
    }
}

fn ice() -> () {
    let mut _0: ();
    let _1: ();
    let mut _2: impl std::convert::Into<<() as Trait>::Assoc>;

    bb0: {
        _2 = unit() -> bb1;
    }

    bb1: {
        _1 = <impl Into<<() as Trait>::Assoc> as Into<()>>::into(const ZeroSized: impl Into<<() as Trait>::Assoc>) -> bb2;
    }

    bb2: {
        return;
    }
}

fn main() -> () {
    let mut _0: ();

    bb0: {
        return;
    }
}
