// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn oh_no() -> () {
    let mut _0: ();
    let _1: <Wrap<'_> as Associate>::Associated;

    bb0: {
        _1 = <<Wrap<'_> as Associate>::Associated as Create<T>>::create() -> bb1;
    }

    bb1: {
        drop(_1) -> bb2;
    }

    bb2: {
        return;
    }
}

fn main() -> () {
    let mut _0: ();

    bb0: {
        return;
    }
}
