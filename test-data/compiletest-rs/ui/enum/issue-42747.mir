// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();
    let _1: Foo27;
    scope 1 {
        debug _foo => _1;
    }

    bb0: {
        _1 = Foo27::Empty;
        return;
    }
}

fn Foo0::First(_1: ()) -> Foo0 {
    let mut _0: Foo0;

    bb0: {
        _0 = Foo0::First(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo0::First(_1: ()) -> Foo0 {
    let mut _0: Foo0;

    bb0: {
        _0 = Foo0::First(move _1);
        return;
    }
}

fn Foo0::Second(_1: ()) -> Foo0 {
    let mut _0: Foo0;

    bb0: {
        _0 = Foo0::Second(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo0::Second(_1: ()) -> Foo0 {
    let mut _0: Foo0;

    bb0: {
        _0 = Foo0::Second(move _1);
        return;
    }
}

fn Foo0::Third(_1: ()) -> Foo0 {
    let mut _0: Foo0;

    bb0: {
        _0 = Foo0::Third(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo0::Third(_1: ()) -> Foo0 {
    let mut _0: Foo0;

    bb0: {
        _0 = Foo0::Third(move _1);
        return;
    }
}

fn Foo0::Fourth(_1: ()) -> Foo0 {
    let mut _0: Foo0;

    bb0: {
        _0 = Foo0::Fourth(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo0::Fourth(_1: ()) -> Foo0 {
    let mut _0: Foo0;

    bb0: {
        _0 = Foo0::Fourth(move _1);
        return;
    }
}

fn Foo1::First(_1: Foo0) -> Foo1 {
    let mut _0: Foo1;

    bb0: {
        _0 = Foo1::First(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo1::First(_1: Foo0) -> Foo1 {
    let mut _0: Foo1;

    bb0: {
        _0 = Foo1::First(move _1);
        return;
    }
}

fn Foo1::Second(_1: Foo0) -> Foo1 {
    let mut _0: Foo1;

    bb0: {
        _0 = Foo1::Second(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo1::Second(_1: Foo0) -> Foo1 {
    let mut _0: Foo1;

    bb0: {
        _0 = Foo1::Second(move _1);
        return;
    }
}

fn Foo1::Third(_1: Foo0) -> Foo1 {
    let mut _0: Foo1;

    bb0: {
        _0 = Foo1::Third(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo1::Third(_1: Foo0) -> Foo1 {
    let mut _0: Foo1;

    bb0: {
        _0 = Foo1::Third(move _1);
        return;
    }
}

fn Foo1::Fourth(_1: Foo0) -> Foo1 {
    let mut _0: Foo1;

    bb0: {
        _0 = Foo1::Fourth(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo1::Fourth(_1: Foo0) -> Foo1 {
    let mut _0: Foo1;

    bb0: {
        _0 = Foo1::Fourth(move _1);
        return;
    }
}

fn Foo2::First(_1: Foo1) -> Foo2 {
    let mut _0: Foo2;

    bb0: {
        _0 = Foo2::First(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo2::First(_1: Foo1) -> Foo2 {
    let mut _0: Foo2;

    bb0: {
        _0 = Foo2::First(move _1);
        return;
    }
}

fn Foo2::Second(_1: Foo1) -> Foo2 {
    let mut _0: Foo2;

    bb0: {
        _0 = Foo2::Second(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo2::Second(_1: Foo1) -> Foo2 {
    let mut _0: Foo2;

    bb0: {
        _0 = Foo2::Second(move _1);
        return;
    }
}

fn Foo2::Third(_1: Foo1) -> Foo2 {
    let mut _0: Foo2;

    bb0: {
        _0 = Foo2::Third(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo2::Third(_1: Foo1) -> Foo2 {
    let mut _0: Foo2;

    bb0: {
        _0 = Foo2::Third(move _1);
        return;
    }
}

fn Foo2::Fourth(_1: Foo1) -> Foo2 {
    let mut _0: Foo2;

    bb0: {
        _0 = Foo2::Fourth(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo2::Fourth(_1: Foo1) -> Foo2 {
    let mut _0: Foo2;

    bb0: {
        _0 = Foo2::Fourth(move _1);
        return;
    }
}

fn Foo3::First(_1: Foo2) -> Foo3 {
    let mut _0: Foo3;

    bb0: {
        _0 = Foo3::First(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo3::First(_1: Foo2) -> Foo3 {
    let mut _0: Foo3;

    bb0: {
        _0 = Foo3::First(move _1);
        return;
    }
}

fn Foo3::Second(_1: Foo2) -> Foo3 {
    let mut _0: Foo3;

    bb0: {
        _0 = Foo3::Second(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo3::Second(_1: Foo2) -> Foo3 {
    let mut _0: Foo3;

    bb0: {
        _0 = Foo3::Second(move _1);
        return;
    }
}

fn Foo3::Third(_1: Foo2) -> Foo3 {
    let mut _0: Foo3;

    bb0: {
        _0 = Foo3::Third(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo3::Third(_1: Foo2) -> Foo3 {
    let mut _0: Foo3;

    bb0: {
        _0 = Foo3::Third(move _1);
        return;
    }
}

fn Foo3::Fourth(_1: Foo2) -> Foo3 {
    let mut _0: Foo3;

    bb0: {
        _0 = Foo3::Fourth(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo3::Fourth(_1: Foo2) -> Foo3 {
    let mut _0: Foo3;

    bb0: {
        _0 = Foo3::Fourth(move _1);
        return;
    }
}

fn Foo4::First(_1: Foo3) -> Foo4 {
    let mut _0: Foo4;

    bb0: {
        _0 = Foo4::First(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo4::First(_1: Foo3) -> Foo4 {
    let mut _0: Foo4;

    bb0: {
        _0 = Foo4::First(move _1);
        return;
    }
}

fn Foo4::Second(_1: Foo3) -> Foo4 {
    let mut _0: Foo4;

    bb0: {
        _0 = Foo4::Second(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo4::Second(_1: Foo3) -> Foo4 {
    let mut _0: Foo4;

    bb0: {
        _0 = Foo4::Second(move _1);
        return;
    }
}

fn Foo4::Third(_1: Foo3) -> Foo4 {
    let mut _0: Foo4;

    bb0: {
        _0 = Foo4::Third(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo4::Third(_1: Foo3) -> Foo4 {
    let mut _0: Foo4;

    bb0: {
        _0 = Foo4::Third(move _1);
        return;
    }
}

fn Foo4::Fourth(_1: Foo3) -> Foo4 {
    let mut _0: Foo4;

    bb0: {
        _0 = Foo4::Fourth(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo4::Fourth(_1: Foo3) -> Foo4 {
    let mut _0: Foo4;

    bb0: {
        _0 = Foo4::Fourth(move _1);
        return;
    }
}

fn Foo5::First(_1: Foo4) -> Foo5 {
    let mut _0: Foo5;

    bb0: {
        _0 = Foo5::First(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo5::First(_1: Foo4) -> Foo5 {
    let mut _0: Foo5;

    bb0: {
        _0 = Foo5::First(move _1);
        return;
    }
}

fn Foo5::Second(_1: Foo4) -> Foo5 {
    let mut _0: Foo5;

    bb0: {
        _0 = Foo5::Second(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo5::Second(_1: Foo4) -> Foo5 {
    let mut _0: Foo5;

    bb0: {
        _0 = Foo5::Second(move _1);
        return;
    }
}

fn Foo5::Third(_1: Foo4) -> Foo5 {
    let mut _0: Foo5;

    bb0: {
        _0 = Foo5::Third(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo5::Third(_1: Foo4) -> Foo5 {
    let mut _0: Foo5;

    bb0: {
        _0 = Foo5::Third(move _1);
        return;
    }
}

fn Foo5::Fourth(_1: Foo4) -> Foo5 {
    let mut _0: Foo5;

    bb0: {
        _0 = Foo5::Fourth(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo5::Fourth(_1: Foo4) -> Foo5 {
    let mut _0: Foo5;

    bb0: {
        _0 = Foo5::Fourth(move _1);
        return;
    }
}

fn Foo6::First(_1: Foo5) -> Foo6 {
    let mut _0: Foo6;

    bb0: {
        _0 = Foo6::First(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo6::First(_1: Foo5) -> Foo6 {
    let mut _0: Foo6;

    bb0: {
        _0 = Foo6::First(move _1);
        return;
    }
}

fn Foo6::Second(_1: Foo5) -> Foo6 {
    let mut _0: Foo6;

    bb0: {
        _0 = Foo6::Second(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo6::Second(_1: Foo5) -> Foo6 {
    let mut _0: Foo6;

    bb0: {
        _0 = Foo6::Second(move _1);
        return;
    }
}

fn Foo6::Third(_1: Foo5) -> Foo6 {
    let mut _0: Foo6;

    bb0: {
        _0 = Foo6::Third(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo6::Third(_1: Foo5) -> Foo6 {
    let mut _0: Foo6;

    bb0: {
        _0 = Foo6::Third(move _1);
        return;
    }
}

fn Foo6::Fourth(_1: Foo5) -> Foo6 {
    let mut _0: Foo6;

    bb0: {
        _0 = Foo6::Fourth(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo6::Fourth(_1: Foo5) -> Foo6 {
    let mut _0: Foo6;

    bb0: {
        _0 = Foo6::Fourth(move _1);
        return;
    }
}

fn Foo7::First(_1: Foo6) -> Foo7 {
    let mut _0: Foo7;

    bb0: {
        _0 = Foo7::First(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo7::First(_1: Foo6) -> Foo7 {
    let mut _0: Foo7;

    bb0: {
        _0 = Foo7::First(move _1);
        return;
    }
}

fn Foo7::Second(_1: Foo6) -> Foo7 {
    let mut _0: Foo7;

    bb0: {
        _0 = Foo7::Second(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo7::Second(_1: Foo6) -> Foo7 {
    let mut _0: Foo7;

    bb0: {
        _0 = Foo7::Second(move _1);
        return;
    }
}

fn Foo7::Third(_1: Foo6) -> Foo7 {
    let mut _0: Foo7;

    bb0: {
        _0 = Foo7::Third(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo7::Third(_1: Foo6) -> Foo7 {
    let mut _0: Foo7;

    bb0: {
        _0 = Foo7::Third(move _1);
        return;
    }
}

fn Foo7::Fourth(_1: Foo6) -> Foo7 {
    let mut _0: Foo7;

    bb0: {
        _0 = Foo7::Fourth(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo7::Fourth(_1: Foo6) -> Foo7 {
    let mut _0: Foo7;

    bb0: {
        _0 = Foo7::Fourth(move _1);
        return;
    }
}

fn Foo8::First(_1: Foo7) -> Foo8 {
    let mut _0: Foo8;

    bb0: {
        _0 = Foo8::First(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo8::First(_1: Foo7) -> Foo8 {
    let mut _0: Foo8;

    bb0: {
        _0 = Foo8::First(move _1);
        return;
    }
}

fn Foo8::Second(_1: Foo7) -> Foo8 {
    let mut _0: Foo8;

    bb0: {
        _0 = Foo8::Second(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo8::Second(_1: Foo7) -> Foo8 {
    let mut _0: Foo8;

    bb0: {
        _0 = Foo8::Second(move _1);
        return;
    }
}

fn Foo8::Third(_1: Foo7) -> Foo8 {
    let mut _0: Foo8;

    bb0: {
        _0 = Foo8::Third(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo8::Third(_1: Foo7) -> Foo8 {
    let mut _0: Foo8;

    bb0: {
        _0 = Foo8::Third(move _1);
        return;
    }
}

fn Foo8::Fourth(_1: Foo7) -> Foo8 {
    let mut _0: Foo8;

    bb0: {
        _0 = Foo8::Fourth(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo8::Fourth(_1: Foo7) -> Foo8 {
    let mut _0: Foo8;

    bb0: {
        _0 = Foo8::Fourth(move _1);
        return;
    }
}

fn Foo9::First(_1: Foo8) -> Foo9 {
    let mut _0: Foo9;

    bb0: {
        _0 = Foo9::First(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo9::First(_1: Foo8) -> Foo9 {
    let mut _0: Foo9;

    bb0: {
        _0 = Foo9::First(move _1);
        return;
    }
}

fn Foo9::Second(_1: Foo8) -> Foo9 {
    let mut _0: Foo9;

    bb0: {
        _0 = Foo9::Second(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo9::Second(_1: Foo8) -> Foo9 {
    let mut _0: Foo9;

    bb0: {
        _0 = Foo9::Second(move _1);
        return;
    }
}

fn Foo9::Third(_1: Foo8) -> Foo9 {
    let mut _0: Foo9;

    bb0: {
        _0 = Foo9::Third(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo9::Third(_1: Foo8) -> Foo9 {
    let mut _0: Foo9;

    bb0: {
        _0 = Foo9::Third(move _1);
        return;
    }
}

fn Foo9::Fourth(_1: Foo8) -> Foo9 {
    let mut _0: Foo9;

    bb0: {
        _0 = Foo9::Fourth(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo9::Fourth(_1: Foo8) -> Foo9 {
    let mut _0: Foo9;

    bb0: {
        _0 = Foo9::Fourth(move _1);
        return;
    }
}

fn Foo10::First(_1: Foo9) -> Foo10 {
    let mut _0: Foo10;

    bb0: {
        _0 = Foo10::First(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo10::First(_1: Foo9) -> Foo10 {
    let mut _0: Foo10;

    bb0: {
        _0 = Foo10::First(move _1);
        return;
    }
}

fn Foo10::Second(_1: Foo9) -> Foo10 {
    let mut _0: Foo10;

    bb0: {
        _0 = Foo10::Second(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo10::Second(_1: Foo9) -> Foo10 {
    let mut _0: Foo10;

    bb0: {
        _0 = Foo10::Second(move _1);
        return;
    }
}

fn Foo10::Third(_1: Foo9) -> Foo10 {
    let mut _0: Foo10;

    bb0: {
        _0 = Foo10::Third(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo10::Third(_1: Foo9) -> Foo10 {
    let mut _0: Foo10;

    bb0: {
        _0 = Foo10::Third(move _1);
        return;
    }
}

fn Foo10::Fourth(_1: Foo9) -> Foo10 {
    let mut _0: Foo10;

    bb0: {
        _0 = Foo10::Fourth(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo10::Fourth(_1: Foo9) -> Foo10 {
    let mut _0: Foo10;

    bb0: {
        _0 = Foo10::Fourth(move _1);
        return;
    }
}

fn Foo11::First(_1: Foo10) -> Foo11 {
    let mut _0: Foo11;

    bb0: {
        _0 = Foo11::First(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo11::First(_1: Foo10) -> Foo11 {
    let mut _0: Foo11;

    bb0: {
        _0 = Foo11::First(move _1);
        return;
    }
}

fn Foo11::Second(_1: Foo10) -> Foo11 {
    let mut _0: Foo11;

    bb0: {
        _0 = Foo11::Second(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo11::Second(_1: Foo10) -> Foo11 {
    let mut _0: Foo11;

    bb0: {
        _0 = Foo11::Second(move _1);
        return;
    }
}

fn Foo11::Third(_1: Foo10) -> Foo11 {
    let mut _0: Foo11;

    bb0: {
        _0 = Foo11::Third(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo11::Third(_1: Foo10) -> Foo11 {
    let mut _0: Foo11;

    bb0: {
        _0 = Foo11::Third(move _1);
        return;
    }
}

fn Foo11::Fourth(_1: Foo10) -> Foo11 {
    let mut _0: Foo11;

    bb0: {
        _0 = Foo11::Fourth(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo11::Fourth(_1: Foo10) -> Foo11 {
    let mut _0: Foo11;

    bb0: {
        _0 = Foo11::Fourth(move _1);
        return;
    }
}

fn Foo12::First(_1: Foo11) -> Foo12 {
    let mut _0: Foo12;

    bb0: {
        _0 = Foo12::First(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo12::First(_1: Foo11) -> Foo12 {
    let mut _0: Foo12;

    bb0: {
        _0 = Foo12::First(move _1);
        return;
    }
}

fn Foo12::Second(_1: Foo11) -> Foo12 {
    let mut _0: Foo12;

    bb0: {
        _0 = Foo12::Second(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo12::Second(_1: Foo11) -> Foo12 {
    let mut _0: Foo12;

    bb0: {
        _0 = Foo12::Second(move _1);
        return;
    }
}

fn Foo12::Third(_1: Foo11) -> Foo12 {
    let mut _0: Foo12;

    bb0: {
        _0 = Foo12::Third(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo12::Third(_1: Foo11) -> Foo12 {
    let mut _0: Foo12;

    bb0: {
        _0 = Foo12::Third(move _1);
        return;
    }
}

fn Foo12::Fourth(_1: Foo11) -> Foo12 {
    let mut _0: Foo12;

    bb0: {
        _0 = Foo12::Fourth(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo12::Fourth(_1: Foo11) -> Foo12 {
    let mut _0: Foo12;

    bb0: {
        _0 = Foo12::Fourth(move _1);
        return;
    }
}

fn Foo13::First(_1: Foo12) -> Foo13 {
    let mut _0: Foo13;

    bb0: {
        _0 = Foo13::First(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo13::First(_1: Foo12) -> Foo13 {
    let mut _0: Foo13;

    bb0: {
        _0 = Foo13::First(move _1);
        return;
    }
}

fn Foo13::Second(_1: Foo12) -> Foo13 {
    let mut _0: Foo13;

    bb0: {
        _0 = Foo13::Second(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo13::Second(_1: Foo12) -> Foo13 {
    let mut _0: Foo13;

    bb0: {
        _0 = Foo13::Second(move _1);
        return;
    }
}

fn Foo13::Third(_1: Foo12) -> Foo13 {
    let mut _0: Foo13;

    bb0: {
        _0 = Foo13::Third(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo13::Third(_1: Foo12) -> Foo13 {
    let mut _0: Foo13;

    bb0: {
        _0 = Foo13::Third(move _1);
        return;
    }
}

fn Foo13::Fourth(_1: Foo12) -> Foo13 {
    let mut _0: Foo13;

    bb0: {
        _0 = Foo13::Fourth(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo13::Fourth(_1: Foo12) -> Foo13 {
    let mut _0: Foo13;

    bb0: {
        _0 = Foo13::Fourth(move _1);
        return;
    }
}

fn Foo14::First(_1: Foo13) -> Foo14 {
    let mut _0: Foo14;

    bb0: {
        _0 = Foo14::First(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo14::First(_1: Foo13) -> Foo14 {
    let mut _0: Foo14;

    bb0: {
        _0 = Foo14::First(move _1);
        return;
    }
}

fn Foo14::Second(_1: Foo13) -> Foo14 {
    let mut _0: Foo14;

    bb0: {
        _0 = Foo14::Second(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo14::Second(_1: Foo13) -> Foo14 {
    let mut _0: Foo14;

    bb0: {
        _0 = Foo14::Second(move _1);
        return;
    }
}

fn Foo14::Third(_1: Foo13) -> Foo14 {
    let mut _0: Foo14;

    bb0: {
        _0 = Foo14::Third(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo14::Third(_1: Foo13) -> Foo14 {
    let mut _0: Foo14;

    bb0: {
        _0 = Foo14::Third(move _1);
        return;
    }
}

fn Foo14::Fourth(_1: Foo13) -> Foo14 {
    let mut _0: Foo14;

    bb0: {
        _0 = Foo14::Fourth(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo14::Fourth(_1: Foo13) -> Foo14 {
    let mut _0: Foo14;

    bb0: {
        _0 = Foo14::Fourth(move _1);
        return;
    }
}

fn Foo15::First(_1: Foo14) -> Foo15 {
    let mut _0: Foo15;

    bb0: {
        _0 = Foo15::First(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo15::First(_1: Foo14) -> Foo15 {
    let mut _0: Foo15;

    bb0: {
        _0 = Foo15::First(move _1);
        return;
    }
}

fn Foo15::Second(_1: Foo14) -> Foo15 {
    let mut _0: Foo15;

    bb0: {
        _0 = Foo15::Second(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo15::Second(_1: Foo14) -> Foo15 {
    let mut _0: Foo15;

    bb0: {
        _0 = Foo15::Second(move _1);
        return;
    }
}

fn Foo15::Third(_1: Foo14) -> Foo15 {
    let mut _0: Foo15;

    bb0: {
        _0 = Foo15::Third(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo15::Third(_1: Foo14) -> Foo15 {
    let mut _0: Foo15;

    bb0: {
        _0 = Foo15::Third(move _1);
        return;
    }
}

fn Foo15::Fourth(_1: Foo14) -> Foo15 {
    let mut _0: Foo15;

    bb0: {
        _0 = Foo15::Fourth(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo15::Fourth(_1: Foo14) -> Foo15 {
    let mut _0: Foo15;

    bb0: {
        _0 = Foo15::Fourth(move _1);
        return;
    }
}

fn Foo16::First(_1: Foo15) -> Foo16 {
    let mut _0: Foo16;

    bb0: {
        _0 = Foo16::First(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo16::First(_1: Foo15) -> Foo16 {
    let mut _0: Foo16;

    bb0: {
        _0 = Foo16::First(move _1);
        return;
    }
}

fn Foo16::Second(_1: Foo15) -> Foo16 {
    let mut _0: Foo16;

    bb0: {
        _0 = Foo16::Second(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo16::Second(_1: Foo15) -> Foo16 {
    let mut _0: Foo16;

    bb0: {
        _0 = Foo16::Second(move _1);
        return;
    }
}

fn Foo16::Third(_1: Foo15) -> Foo16 {
    let mut _0: Foo16;

    bb0: {
        _0 = Foo16::Third(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo16::Third(_1: Foo15) -> Foo16 {
    let mut _0: Foo16;

    bb0: {
        _0 = Foo16::Third(move _1);
        return;
    }
}

fn Foo16::Fourth(_1: Foo15) -> Foo16 {
    let mut _0: Foo16;

    bb0: {
        _0 = Foo16::Fourth(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo16::Fourth(_1: Foo15) -> Foo16 {
    let mut _0: Foo16;

    bb0: {
        _0 = Foo16::Fourth(move _1);
        return;
    }
}

fn Foo17::First(_1: Foo16) -> Foo17 {
    let mut _0: Foo17;

    bb0: {
        _0 = Foo17::First(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo17::First(_1: Foo16) -> Foo17 {
    let mut _0: Foo17;

    bb0: {
        _0 = Foo17::First(move _1);
        return;
    }
}

fn Foo17::Second(_1: Foo16) -> Foo17 {
    let mut _0: Foo17;

    bb0: {
        _0 = Foo17::Second(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo17::Second(_1: Foo16) -> Foo17 {
    let mut _0: Foo17;

    bb0: {
        _0 = Foo17::Second(move _1);
        return;
    }
}

fn Foo17::Third(_1: Foo16) -> Foo17 {
    let mut _0: Foo17;

    bb0: {
        _0 = Foo17::Third(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo17::Third(_1: Foo16) -> Foo17 {
    let mut _0: Foo17;

    bb0: {
        _0 = Foo17::Third(move _1);
        return;
    }
}

fn Foo17::Fourth(_1: Foo16) -> Foo17 {
    let mut _0: Foo17;

    bb0: {
        _0 = Foo17::Fourth(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo17::Fourth(_1: Foo16) -> Foo17 {
    let mut _0: Foo17;

    bb0: {
        _0 = Foo17::Fourth(move _1);
        return;
    }
}

fn Foo18::First(_1: Foo17) -> Foo18 {
    let mut _0: Foo18;

    bb0: {
        _0 = Foo18::First(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo18::First(_1: Foo17) -> Foo18 {
    let mut _0: Foo18;

    bb0: {
        _0 = Foo18::First(move _1);
        return;
    }
}

fn Foo18::Second(_1: Foo17) -> Foo18 {
    let mut _0: Foo18;

    bb0: {
        _0 = Foo18::Second(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo18::Second(_1: Foo17) -> Foo18 {
    let mut _0: Foo18;

    bb0: {
        _0 = Foo18::Second(move _1);
        return;
    }
}

fn Foo18::Third(_1: Foo17) -> Foo18 {
    let mut _0: Foo18;

    bb0: {
        _0 = Foo18::Third(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo18::Third(_1: Foo17) -> Foo18 {
    let mut _0: Foo18;

    bb0: {
        _0 = Foo18::Third(move _1);
        return;
    }
}

fn Foo18::Fourth(_1: Foo17) -> Foo18 {
    let mut _0: Foo18;

    bb0: {
        _0 = Foo18::Fourth(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo18::Fourth(_1: Foo17) -> Foo18 {
    let mut _0: Foo18;

    bb0: {
        _0 = Foo18::Fourth(move _1);
        return;
    }
}

fn Foo19::First(_1: Foo18) -> Foo19 {
    let mut _0: Foo19;

    bb0: {
        _0 = Foo19::First(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo19::First(_1: Foo18) -> Foo19 {
    let mut _0: Foo19;

    bb0: {
        _0 = Foo19::First(move _1);
        return;
    }
}

fn Foo19::Second(_1: Foo18) -> Foo19 {
    let mut _0: Foo19;

    bb0: {
        _0 = Foo19::Second(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo19::Second(_1: Foo18) -> Foo19 {
    let mut _0: Foo19;

    bb0: {
        _0 = Foo19::Second(move _1);
        return;
    }
}

fn Foo19::Third(_1: Foo18) -> Foo19 {
    let mut _0: Foo19;

    bb0: {
        _0 = Foo19::Third(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo19::Third(_1: Foo18) -> Foo19 {
    let mut _0: Foo19;

    bb0: {
        _0 = Foo19::Third(move _1);
        return;
    }
}

fn Foo19::Fourth(_1: Foo18) -> Foo19 {
    let mut _0: Foo19;

    bb0: {
        _0 = Foo19::Fourth(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo19::Fourth(_1: Foo18) -> Foo19 {
    let mut _0: Foo19;

    bb0: {
        _0 = Foo19::Fourth(move _1);
        return;
    }
}

fn Foo20::First(_1: Foo19) -> Foo20 {
    let mut _0: Foo20;

    bb0: {
        _0 = Foo20::First(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo20::First(_1: Foo19) -> Foo20 {
    let mut _0: Foo20;

    bb0: {
        _0 = Foo20::First(move _1);
        return;
    }
}

fn Foo20::Second(_1: Foo19) -> Foo20 {
    let mut _0: Foo20;

    bb0: {
        _0 = Foo20::Second(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo20::Second(_1: Foo19) -> Foo20 {
    let mut _0: Foo20;

    bb0: {
        _0 = Foo20::Second(move _1);
        return;
    }
}

fn Foo20::Third(_1: Foo19) -> Foo20 {
    let mut _0: Foo20;

    bb0: {
        _0 = Foo20::Third(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo20::Third(_1: Foo19) -> Foo20 {
    let mut _0: Foo20;

    bb0: {
        _0 = Foo20::Third(move _1);
        return;
    }
}

fn Foo20::Fourth(_1: Foo19) -> Foo20 {
    let mut _0: Foo20;

    bb0: {
        _0 = Foo20::Fourth(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo20::Fourth(_1: Foo19) -> Foo20 {
    let mut _0: Foo20;

    bb0: {
        _0 = Foo20::Fourth(move _1);
        return;
    }
}

fn Foo21::First(_1: Foo20) -> Foo21 {
    let mut _0: Foo21;

    bb0: {
        _0 = Foo21::First(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo21::First(_1: Foo20) -> Foo21 {
    let mut _0: Foo21;

    bb0: {
        _0 = Foo21::First(move _1);
        return;
    }
}

fn Foo21::Second(_1: Foo20) -> Foo21 {
    let mut _0: Foo21;

    bb0: {
        _0 = Foo21::Second(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo21::Second(_1: Foo20) -> Foo21 {
    let mut _0: Foo21;

    bb0: {
        _0 = Foo21::Second(move _1);
        return;
    }
}

fn Foo21::Third(_1: Foo20) -> Foo21 {
    let mut _0: Foo21;

    bb0: {
        _0 = Foo21::Third(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo21::Third(_1: Foo20) -> Foo21 {
    let mut _0: Foo21;

    bb0: {
        _0 = Foo21::Third(move _1);
        return;
    }
}

fn Foo21::Fourth(_1: Foo20) -> Foo21 {
    let mut _0: Foo21;

    bb0: {
        _0 = Foo21::Fourth(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo21::Fourth(_1: Foo20) -> Foo21 {
    let mut _0: Foo21;

    bb0: {
        _0 = Foo21::Fourth(move _1);
        return;
    }
}

fn Foo22::First(_1: Foo21) -> Foo22 {
    let mut _0: Foo22;

    bb0: {
        _0 = Foo22::First(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo22::First(_1: Foo21) -> Foo22 {
    let mut _0: Foo22;

    bb0: {
        _0 = Foo22::First(move _1);
        return;
    }
}

fn Foo22::Second(_1: Foo21) -> Foo22 {
    let mut _0: Foo22;

    bb0: {
        _0 = Foo22::Second(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo22::Second(_1: Foo21) -> Foo22 {
    let mut _0: Foo22;

    bb0: {
        _0 = Foo22::Second(move _1);
        return;
    }
}

fn Foo22::Third(_1: Foo21) -> Foo22 {
    let mut _0: Foo22;

    bb0: {
        _0 = Foo22::Third(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo22::Third(_1: Foo21) -> Foo22 {
    let mut _0: Foo22;

    bb0: {
        _0 = Foo22::Third(move _1);
        return;
    }
}

fn Foo22::Fourth(_1: Foo21) -> Foo22 {
    let mut _0: Foo22;

    bb0: {
        _0 = Foo22::Fourth(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo22::Fourth(_1: Foo21) -> Foo22 {
    let mut _0: Foo22;

    bb0: {
        _0 = Foo22::Fourth(move _1);
        return;
    }
}

fn Foo23::First(_1: Foo22) -> Foo23 {
    let mut _0: Foo23;

    bb0: {
        _0 = Foo23::First(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo23::First(_1: Foo22) -> Foo23 {
    let mut _0: Foo23;

    bb0: {
        _0 = Foo23::First(move _1);
        return;
    }
}

fn Foo23::Second(_1: Foo22) -> Foo23 {
    let mut _0: Foo23;

    bb0: {
        _0 = Foo23::Second(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo23::Second(_1: Foo22) -> Foo23 {
    let mut _0: Foo23;

    bb0: {
        _0 = Foo23::Second(move _1);
        return;
    }
}

fn Foo23::Third(_1: Foo22) -> Foo23 {
    let mut _0: Foo23;

    bb0: {
        _0 = Foo23::Third(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo23::Third(_1: Foo22) -> Foo23 {
    let mut _0: Foo23;

    bb0: {
        _0 = Foo23::Third(move _1);
        return;
    }
}

fn Foo23::Fourth(_1: Foo22) -> Foo23 {
    let mut _0: Foo23;

    bb0: {
        _0 = Foo23::Fourth(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo23::Fourth(_1: Foo22) -> Foo23 {
    let mut _0: Foo23;

    bb0: {
        _0 = Foo23::Fourth(move _1);
        return;
    }
}

fn Foo24::First(_1: Foo23) -> Foo24 {
    let mut _0: Foo24;

    bb0: {
        _0 = Foo24::First(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo24::First(_1: Foo23) -> Foo24 {
    let mut _0: Foo24;

    bb0: {
        _0 = Foo24::First(move _1);
        return;
    }
}

fn Foo24::Second(_1: Foo23) -> Foo24 {
    let mut _0: Foo24;

    bb0: {
        _0 = Foo24::Second(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo24::Second(_1: Foo23) -> Foo24 {
    let mut _0: Foo24;

    bb0: {
        _0 = Foo24::Second(move _1);
        return;
    }
}

fn Foo24::Third(_1: Foo23) -> Foo24 {
    let mut _0: Foo24;

    bb0: {
        _0 = Foo24::Third(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo24::Third(_1: Foo23) -> Foo24 {
    let mut _0: Foo24;

    bb0: {
        _0 = Foo24::Third(move _1);
        return;
    }
}

fn Foo24::Fourth(_1: Foo23) -> Foo24 {
    let mut _0: Foo24;

    bb0: {
        _0 = Foo24::Fourth(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo24::Fourth(_1: Foo23) -> Foo24 {
    let mut _0: Foo24;

    bb0: {
        _0 = Foo24::Fourth(move _1);
        return;
    }
}

fn Foo25::First(_1: Foo24) -> Foo25 {
    let mut _0: Foo25;

    bb0: {
        _0 = Foo25::First(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo25::First(_1: Foo24) -> Foo25 {
    let mut _0: Foo25;

    bb0: {
        _0 = Foo25::First(move _1);
        return;
    }
}

fn Foo25::Second(_1: Foo24) -> Foo25 {
    let mut _0: Foo25;

    bb0: {
        _0 = Foo25::Second(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo25::Second(_1: Foo24) -> Foo25 {
    let mut _0: Foo25;

    bb0: {
        _0 = Foo25::Second(move _1);
        return;
    }
}

fn Foo25::Third(_1: Foo24) -> Foo25 {
    let mut _0: Foo25;

    bb0: {
        _0 = Foo25::Third(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo25::Third(_1: Foo24) -> Foo25 {
    let mut _0: Foo25;

    bb0: {
        _0 = Foo25::Third(move _1);
        return;
    }
}

fn Foo25::Fourth(_1: Foo24) -> Foo25 {
    let mut _0: Foo25;

    bb0: {
        _0 = Foo25::Fourth(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo25::Fourth(_1: Foo24) -> Foo25 {
    let mut _0: Foo25;

    bb0: {
        _0 = Foo25::Fourth(move _1);
        return;
    }
}

fn Foo26::First(_1: Foo25) -> Foo26 {
    let mut _0: Foo26;

    bb0: {
        _0 = Foo26::First(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo26::First(_1: Foo25) -> Foo26 {
    let mut _0: Foo26;

    bb0: {
        _0 = Foo26::First(move _1);
        return;
    }
}

fn Foo26::Second(_1: Foo25) -> Foo26 {
    let mut _0: Foo26;

    bb0: {
        _0 = Foo26::Second(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo26::Second(_1: Foo25) -> Foo26 {
    let mut _0: Foo26;

    bb0: {
        _0 = Foo26::Second(move _1);
        return;
    }
}

fn Foo26::Third(_1: Foo25) -> Foo26 {
    let mut _0: Foo26;

    bb0: {
        _0 = Foo26::Third(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo26::Third(_1: Foo25) -> Foo26 {
    let mut _0: Foo26;

    bb0: {
        _0 = Foo26::Third(move _1);
        return;
    }
}

fn Foo26::Fourth(_1: Foo25) -> Foo26 {
    let mut _0: Foo26;

    bb0: {
        _0 = Foo26::Fourth(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo26::Fourth(_1: Foo25) -> Foo26 {
    let mut _0: Foo26;

    bb0: {
        _0 = Foo26::Fourth(move _1);
        return;
    }
}

fn Foo27::First(_1: Foo26) -> Foo27 {
    let mut _0: Foo27;

    bb0: {
        _0 = Foo27::First(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo27::First(_1: Foo26) -> Foo27 {
    let mut _0: Foo27;

    bb0: {
        _0 = Foo27::First(move _1);
        return;
    }
}

fn Foo27::Second(_1: Foo26) -> Foo27 {
    let mut _0: Foo27;

    bb0: {
        _0 = Foo27::Second(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo27::Second(_1: Foo26) -> Foo27 {
    let mut _0: Foo27;

    bb0: {
        _0 = Foo27::Second(move _1);
        return;
    }
}

fn Foo27::Third(_1: Foo26) -> Foo27 {
    let mut _0: Foo27;

    bb0: {
        _0 = Foo27::Third(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo27::Third(_1: Foo26) -> Foo27 {
    let mut _0: Foo27;

    bb0: {
        _0 = Foo27::Third(move _1);
        return;
    }
}

fn Foo27::Fourth(_1: Foo26) -> Foo27 {
    let mut _0: Foo27;

    bb0: {
        _0 = Foo27::Fourth(move _1);
        return;
    }
}

// MIR FOR CTFE
fn Foo27::Fourth(_1: Foo26) -> Foo27 {
    let mut _0: Foo27;

    bb0: {
        _0 = Foo27::Fourth(move _1);
        return;
    }
}
