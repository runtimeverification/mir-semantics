// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/statics/static-methods-in-traits2.rs:8:1: 8:20>::from(_1: T) -> f64 {
    debug n => _1;
    let mut _0: f64;
    let mut _2: &T;

    bb0: {
        _2 = &_1;
        _0 = <T as NumConv>::to_float(move _2) -> [return: bb1, unwind: bb3];
    }

    bb1: {
        drop(_1) -> bb2;
    }

    bb2: {
        return;
    }

    bb3 (cleanup): {
        drop(_1) -> [return: bb4, unwind terminate];
    }

    bb4 (cleanup): {
        resume;
    }
}

fn <impl at ui/statics/static-methods-in-traits2.rs:16:1: 16:21>::to_float(_1: &f64) -> f64 {
    debug self => _1;
    let mut _0: f64;

    bb0: {
        _0 = (*_1);
        return;
    }
}

fn main() -> () {
    let mut _0: ();
    let mut _1: f64;
    scope 1 {
    }

    bb0: {
        _1 = <f64 as Number>::from::<f64>(const 0f64) -> bb1;
    }

    bb1: {
        return;
    }
}
