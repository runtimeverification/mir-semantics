// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn force(_1: T) -> () {
    let mut _0: ();

    bb0: {
        drop(_1) -> bb1;
    }

    bb1: {
        return;
    }
}

fn main() -> () {
    let mut _0: ();
    let _1: ();
    let _2: ();
    let _3: ();
    let _4: ();
    let _5: ();
    let _6: ();
    let _7: ();
    let _8: ();
    let _9: ();
    let _10: ();
    let _11: ();
    let _12: ();
    let _13: ();
    let _14: ();
    let _15: ();
    let _16: ();
    let _17: ();
    let _18: ();
    let _19: ();
    let _20: ();
    let _21: ();
    let _22: ();
    let _23: ();
    let _24: ();
    let _25: ();
    let _26: ();
    let _27: ();
    let _28: ();
    let _29: ();
    let _30: ();
    let _31: ();
    let _32: ();
    let _33: ();
    let _34: ();

    bb0: {
        _1 = force::<u16>(const _) -> bb1;
    }

    bb1: {
        _2 = force::<u128>(const _) -> bb2;
    }

    bb2: {
        _3 = force::<i8>(const _) -> bb3;
    }

    bb3: {
        _4 = force::<i32>(const _) -> bb4;
    }

    bb4: {
        _5 = force::<u64>(const _) -> bb5;
    }

    bb5: {
        _6 = force::<u128>(const _) -> bb6;
    }

    bb6: {
        _7 = force::<i8>(const _) -> bb7;
    }

    bb7: {
        _8 = force::<u32>(const _) -> bb8;
    }

    bb8: {
        _9 = force::<i128>(const _) -> bb9;
    }

    bb9: {
        _10 = force::<u128>(const _) -> bb10;
    }

    bb10: {
        _11 = force::<u8>(const _) -> bb11;
    }

    bb11: {
        _12 = force::<u16>(const _) -> bb12;
    }

    bb12: {
        _13 = force::<i64>(const _) -> bb13;
    }

    bb13: {
        _14 = force::<i128>(const _) -> bb14;
    }

    bb14: {
        _15 = force::<i8>(const _) -> bb15;
    }

    bb15: {
        _16 = force::<i32>(const _) -> bb16;
    }

    bb16: {
        _17 = force::<u64>(const _) -> bb17;
    }

    bb17: {
        _18 = force::<u128>(const _) -> bb18;
    }

    bb18: {
        _19 = force::<i8>(const _) -> bb19;
    }

    bb19: {
        _20 = force::<u32>(const _) -> bb20;
    }

    bb20: {
        _21 = force::<i128>(const _) -> bb21;
    }

    bb21: {
        _22 = force::<u128>(const _) -> bb22;
    }

    bb22: {
        _23 = force::<u8>(const _) -> bb23;
    }

    bb23: {
        _24 = force::<u16>(const _) -> bb24;
    }

    bb24: {
        _25 = force::<i64>(const _) -> bb25;
    }

    bb25: {
        _26 = force::<i128>(const _) -> bb26;
    }

    bb26: {
        _27 = force::<u8>(const _) -> bb27;
    }

    bb27: {
        _28 = force::<i8>(const _) -> bb28;
    }

    bb28: {
        _29 = force::<i8>(const _) -> bb29;
    }

    bb29: {
        _30 = force::<i32>(const _) -> bb30;
    }

    bb30: {
        _31 = force::<i32>(const _) -> bb31;
    }

    bb31: {
        _32 = force::<u32>(const _) -> bb32;
    }

    bb32: {
        _33 = force::<u128>(const _) -> bb33;
    }

    bb33: {
        _34 = force::<i128>(const _) -> bb34;
    }

    bb34: {
        return;
    }
}

const main::X: u16 = {
    let mut _0: u16;

    bb0: {
        _0 = const -1f64 as u16 (FloatToInt);
        return;
    }
}

const main::X: u128 = {
    let mut _0: u128;

    bb0: {
        _0 = const -100f64 as u128 (FloatToInt);
        return;
    }
}

const main::X: i8 = {
    let mut _0: i8;

    bb0: {
        _0 = const _ as i8 (FloatToInt);
        return;
    }
}

const main::X: i32 = {
    let mut _0: i32;

    bb0: {
        _0 = const _ as i32 (FloatToInt);
        return;
    }
}

const main::X: u64 = {
    let mut _0: u64;

    bb0: {
        _0 = const _ as u64 (FloatToInt);
        return;
    }
}

const main::X: u128 = {
    let mut _0: u128;

    bb0: {
        _0 = const _ as u128 (FloatToInt);
        return;
    }
}

const main::X: i8 = {
    let mut _0: i8;

    bb0: {
        _0 = const _ as i8 (FloatToInt);
        return;
    }
}

const main::X: u32 = {
    let mut _0: u32;

    bb0: {
        _0 = const _ as u32 (FloatToInt);
        return;
    }
}

const main::X: i128 = {
    let mut _0: i128;

    bb0: {
        _0 = const _ as i128 (FloatToInt);
        return;
    }
}

const main::X: u128 = {
    let mut _0: u128;

    bb0: {
        _0 = const _ as u128 (FloatToInt);
        return;
    }
}

const main::X: u8 = {
    let mut _0: u8;

    bb0: {
        _0 = const _ as u8 (FloatToInt);
        return;
    }
}

const main::X: u16 = {
    let mut _0: u16;

    bb0: {
        _0 = const _ as u16 (FloatToInt);
        return;
    }
}

const main::X: i64 = {
    let mut _0: i64;

    bb0: {
        _0 = const _ as i64 (FloatToInt);
        return;
    }
}

const main::X: i128 = {
    let mut _0: i128;

    bb0: {
        _0 = const _ as i128 (FloatToInt);
        return;
    }
}

const main::X: i8 = {
    let mut _0: i8;

    bb0: {
        _0 = const _ as i8 (FloatToInt);
        return;
    }
}

const main::X: i32 = {
    let mut _0: i32;

    bb0: {
        _0 = const _ as i32 (FloatToInt);
        return;
    }
}

const main::X: u64 = {
    let mut _0: u64;

    bb0: {
        _0 = const _ as u64 (FloatToInt);
        return;
    }
}

const main::X: u128 = {
    let mut _0: u128;

    bb0: {
        _0 = const _ as u128 (FloatToInt);
        return;
    }
}

const main::X: i8 = {
    let mut _0: i8;

    bb0: {
        _0 = const _ as i8 (FloatToInt);
        return;
    }
}

const main::X: u32 = {
    let mut _0: u32;

    bb0: {
        _0 = const _ as u32 (FloatToInt);
        return;
    }
}

const main::X: i128 = {
    let mut _0: i128;

    bb0: {
        _0 = const _ as i128 (FloatToInt);
        return;
    }
}

const main::X: u128 = {
    let mut _0: u128;

    bb0: {
        _0 = const _ as u128 (FloatToInt);
        return;
    }
}

const main::X: u8 = {
    let mut _0: u8;

    bb0: {
        _0 = const _ as u8 (FloatToInt);
        return;
    }
}

const main::X: u16 = {
    let mut _0: u16;

    bb0: {
        _0 = const _ as u16 (FloatToInt);
        return;
    }
}

const main::X: i64 = {
    let mut _0: i64;

    bb0: {
        _0 = const _ as i64 (FloatToInt);
        return;
    }
}

const main::X: i128 = {
    let mut _0: i128;

    bb0: {
        _0 = const _ as i128 (FloatToInt);
        return;
    }
}

const main::X: u8 = {
    let mut _0: u8;

    bb0: {
        _0 = const 256f64 as u8 (FloatToInt);
        return;
    }
}

const main::X: i8 = {
    let mut _0: i8;

    bb0: {
        _0 = const -129f64 as i8 (FloatToInt);
        return;
    }
}

const main::X: i8 = {
    let mut _0: i8;

    bb0: {
        _0 = const 128f64 as i8 (FloatToInt);
        return;
    }
}

const main::X: i32 = {
    let mut _0: i32;

    bb0: {
        _0 = const 2147483648f64 as i32 (FloatToInt);
        return;
    }
}

const main::X: i32 = {
    let mut _0: i32;

    bb0: {
        _0 = const -2147483904f64 as i32 (FloatToInt);
        return;
    }
}

const main::X: u32 = {
    let mut _0: u32;

    bb0: {
        _0 = const 4294967296f64 as u32 (FloatToInt);
        return;
    }
}

const main::X: u128 = {
    let mut _0: u128;

    bb0: {
        _0 = const 1.0E+40f64 as u128 (FloatToInt);
        return;
    }
}

const main::X: i128 = {
    let mut _0: i128;

    bb0: {
        _0 = const 1.0E+40f64 as i128 (FloatToInt);
        return;
    }
}
