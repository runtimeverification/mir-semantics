// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn require_unsafe() -> usize {
    let mut _0: usize;

    bb0: {
        _0 = const 1_usize;
        return;
    }
}

// MIR FOR CTFE
fn require_unsafe() -> usize {
    let mut _0: usize;

    bb0: {
        _0 = const 1_usize;
        return;
    }
}

fn main() -> () {
    let mut _0: ();

    bb0: {
        return;
    }
}

main::{constant#0}: () = {
    let mut _0: ();
    let _1: usize;

    bb0: {
        StorageLive(_1);
        ConstEvalCounter;
        _1 = require_unsafe() -> bb1;
    }

    bb1: {
        StorageDead(_1);
        _0 = const ();
        return;
    }
}
