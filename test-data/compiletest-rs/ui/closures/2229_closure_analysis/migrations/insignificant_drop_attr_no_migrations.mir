// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/closures/2229_closure_analysis/migrations/insignificant_drop_attr_no_migrations.rs:13:1: 13:37>::drop(_1: &mut InsignificantDropPoint) -> () {
    debug self => _1;
    let mut _0: ();

    bb0: {
        return;
    }
}

fn insignificant_drop_does_not_need_migration() -> () {
    let mut _0: ();
    let _1: (InsignificantDropPoint, InsignificantDropPoint);
    let mut _2: InsignificantDropPoint;
    let mut _3: InsignificantDropPoint;
    let _5: ();
    scope 1 {
        debug t => _1;
        let _4: [closure@ui/closures/2229_closure_analysis/migrations/insignificant_drop_attr_no_migrations.rs:23:13: 23:15];
        scope 2 {
            debug c => _4;
        }
    }

    bb0: {
        _2 = InsignificantDropPoint { x: const 4_i32, y: const 9_i32 };
        _3 = InsignificantDropPoint { x: const 4_i32, y: const 9_i32 };
        _1 = (move _2, move _3);
        _4 = [closure@ui/closures/2229_closure_analysis/migrations/insignificant_drop_attr_no_migrations.rs:23:13: 23:15] { t: move _1 };
        _5 = <[closure@ui/closures/2229_closure_analysis/migrations/insignificant_drop_attr_no_migrations.rs:23:13: 23:15] as FnOnce<()>>::call_once(move _4, const ()) -> bb1;
    }

    bb1: {
        return;
    }
}

fn insignificant_drop_does_not_need_migration::{closure#0}(_1: [closure@ui/closures/2229_closure_analysis/migrations/insignificant_drop_attr_no_migrations.rs:23:13: 23:15]) -> () {
    debug t => (_1.0: (InsignificantDropPoint, InsignificantDropPoint));
    let mut _0: ();
    let _2: InsignificantDropPoint;
    scope 1 {
        debug _t => _2;
    }

    bb0: {
        _2 = move ((_1.0: (InsignificantDropPoint, InsignificantDropPoint)).0: InsignificantDropPoint);
        drop(_2) -> [return: bb1, unwind: bb4];
    }

    bb1: {
        drop(((_1.0: (InsignificantDropPoint, InsignificantDropPoint)).1: InsignificantDropPoint)) -> bb3;
    }

    bb2 (cleanup): {
        resume;
    }

    bb3: {
        return;
    }

    bb4 (cleanup): {
        drop(((_1.0: (InsignificantDropPoint, InsignificantDropPoint)).1: InsignificantDropPoint)) -> [return: bb2, unwind terminate];
    }
}

fn generic_struct_with_insignificant_drop_does_not_need_migration() -> () {
    let mut _0: ();
    let _1: GenericStruct<InsignificantDropPoint>;
    let mut _2: InsignificantDropPoint;
    let mut _3: InsignificantDropPoint;
    let _5: ();
    scope 1 {
        debug t => _1;
        let _4: [closure@ui/closures/2229_closure_analysis/migrations/insignificant_drop_attr_no_migrations.rs:35:13: 35:15];
        scope 2 {
            debug c => _4;
        }
    }

    bb0: {
        _2 = InsignificantDropPoint { x: const 4_i32, y: const 9_i32 };
        _3 = InsignificantDropPoint { x: const 4_i32, y: const 9_i32 };
        _1 = GenericStruct::<InsignificantDropPoint>(move _2, move _3);
        _4 = [closure@ui/closures/2229_closure_analysis/migrations/insignificant_drop_attr_no_migrations.rs:35:13: 35:15] { t: move _1 };
        _5 = <[closure@ui/closures/2229_closure_analysis/migrations/insignificant_drop_attr_no_migrations.rs:35:13: 35:15] as FnOnce<()>>::call_once(move _4, const ()) -> bb1;
    }

    bb1: {
        return;
    }
}

fn generic_struct_with_insignificant_drop_does_not_need_migration::{closure#0}(_1: [closure@ui/closures/2229_closure_analysis/migrations/insignificant_drop_attr_no_migrations.rs:35:13: 35:15]) -> () {
    debug t => (_1.0: GenericStruct<InsignificantDropPoint>);
    let mut _0: ();
    let _2: InsignificantDropPoint;
    scope 1 {
        debug _t => _2;
    }

    bb0: {
        _2 = move ((_1.0: GenericStruct<InsignificantDropPoint>).0: InsignificantDropPoint);
        drop(_2) -> [return: bb1, unwind: bb4];
    }

    bb1: {
        drop(((_1.0: GenericStruct<InsignificantDropPoint>).1: InsignificantDropPoint)) -> bb3;
    }

    bb2 (cleanup): {
        resume;
    }

    bb3: {
        return;
    }

    bb4 (cleanup): {
        drop(((_1.0: GenericStruct<InsignificantDropPoint>).1: InsignificantDropPoint)) -> [return: bb2, unwind terminate];
    }
}

fn main() -> () {
    let mut _0: ();
    let _1: ();
    let _2: ();

    bb0: {
        _1 = insignificant_drop_does_not_need_migration() -> bb1;
    }

    bb1: {
        _2 = generic_struct_with_insignificant_drop_does_not_need_migration() -> bb2;
    }

    bb2: {
        return;
    }
}

fn GenericStruct(_1: T, _2: T) -> GenericStruct<T> {
    let mut _0: GenericStruct<T>;

    bb0: {
        _0 = GenericStruct::<T>(move _1, move _2);
        return;
    }
}

// MIR FOR CTFE
fn GenericStruct(_1: T, _2: T) -> GenericStruct<T> {
    let mut _0: GenericStruct<T>;

    bb0: {
        _0 = GenericStruct::<T>(move _1, move _2);
        return;
    }
}
