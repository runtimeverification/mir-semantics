// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();
    let mut _1: Struct;
    let mut _2: std::string::String;
    let mut _4: &mut Struct;
    scope 1 {
        debug s => _1;
        let mut _3: [closure@ui/closures/2229_closure_analysis/run_pass/disjoint-capture-in-same-closure.rs:18:17: 18:19];
        scope 2 {
            debug c => _3;
        }
    }

    bb0: {
        _2 = String::new() -> bb1;
    }

    bb1: {
        _1 = Struct { x: const 10_i32, y: const 10_i32, s: move _2 };
        _4 = &mut _1;
        _3 = [closure@ui/closures/2229_closure_analysis/run_pass/disjoint-capture-in-same-closure.rs:18:17: 18:19] { s: move _4 };
        drop(_1) -> bb2;
    }

    bb2: {
        return;
    }
}

fn main::{closure#0}(_1: &mut [closure@ui/closures/2229_closure_analysis/run_pass/disjoint-capture-in-same-closure.rs:18:17: 18:19]) -> () {
    debug s => (*((*_1).0: &mut Struct));
    let mut _0: ();
    let mut _2: std::string::String;
    let mut _3: &mut Struct;
    let mut _4: &mut Struct;
    let mut _5: &mut Struct;
    let mut _6: &mut Struct;
    let mut _7: &mut Struct;
    let mut _8: &mut Struct;
    let mut _9: &mut Struct;

    bb0: {
        _3 = deref_copy ((*_1).0: &mut Struct);
        _4 = deref_copy ((*_1).0: &mut Struct);
        ((*_3).0: i32) = Add(((*_4).0: i32), const 10_i32);
        _5 = deref_copy ((*_1).0: &mut Struct);
        _6 = deref_copy ((*_1).0: &mut Struct);
        ((*_5).1: i32) = Add(((*_6).1: i32), const 42_i32);
        _2 = <String as From<&str>>::from(const "new") -> bb1;
    }

    bb1: {
        _7 = deref_copy ((*_1).0: &mut Struct);
        drop(((*_7).2: std::string::String)) -> [return: bb2, unwind: bb3];
    }

    bb2: {
        _8 = deref_copy ((*_1).0: &mut Struct);
        ((*_8).2: std::string::String) = move _2;
        return;
    }

    bb3 (cleanup): {
        _9 = deref_copy ((*_1).0: &mut Struct);
        ((*_9).2: std::string::String) = move _2;
        resume;
    }
}
