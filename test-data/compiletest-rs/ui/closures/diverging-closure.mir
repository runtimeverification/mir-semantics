// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();
    let _1: [closure@ui/closures/diverging-closure.rs:6:16: 6:23];
    let _2: !;
    let mut _3: &[closure@ui/closures/diverging-closure.rs:6:16: 6:23];
    scope 1 {
        debug func => const ZeroSized: [closure@ui/closures/diverging-closure.rs:6:16: 6:23];
    }

    bb0: {
        _3 = &_1;
        _2 = <[closure@ui/closures/diverging-closure.rs:6:16: 6:23] as Fn<()>>::call(move _3, const ());
    }
}

fn main::{closure#0}(_1: &[closure@ui/closures/diverging-closure.rs:6:16: 6:23]) -> ! {
    let mut _0: !;
    let _2: !;

    bb0: {
        _2 = begin_panic::<&str>(const "oops");
    }
}
