// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn T::dummy(_1: &Self) -> () {
    debug self => _1;
    let mut _0: ();

    bb0: {
        return;
    }
}

fn main() -> () {
    let mut _0: ();
    let _1: &dyn T;
    let _2: &S;
    let _3: S;
    let mut _5: *const S;
    let _6: &S;
    let _7: S;
    let _9: &S;
    let _10: S;
    let mut _12: &mut S;
    let mut _13: S;
    let mut _15: *mut S;
    let mut _16: &mut S;
    let mut _17: S;
    let mut _19: &mut S;
    let mut _20: S;
    let mut _22: &S;
    let _23: &mut S;
    let mut _24: S;
    let mut _26: *const S;
    let _27: &mut S;
    let mut _28: S;
    scope 1 {
        debug x => _1;
        let _4: *const dyn T;
        scope 2 {
            debug x => _4;
            let _8: *const S;
            scope 3 {
                debug x => _8;
                let _11: &mut dyn T;
                scope 4 {
                    debug x => _11;
                    let _14: *mut dyn T;
                    scope 5 {
                        debug x => _14;
                        let _18: *mut S;
                        scope 6 {
                            debug x => _18;
                            let _21: &dyn T;
                            scope 7 {
                                debug x => _21;
                                let _25: *const dyn T;
                                scope 8 {
                                    debug x => _25;
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _2 = &_3;
        _1 = _2 as &dyn T (Pointer(Unsize));
        _6 = &_7;
        _5 = &raw const (*_6);
        _4 = move _5 as *const dyn T (Pointer(Unsize));
        _9 = &_10;
        _8 = &raw const (*_9);
        _12 = &mut _13;
        _11 = _12 as &mut dyn T (Pointer(Unsize));
        _16 = &mut _17;
        _15 = &raw mut (*_16);
        _14 = move _15 as *mut dyn T (Pointer(Unsize));
        _19 = &mut _20;
        _18 = &raw mut (*_19);
        _23 = &mut _24;
        _22 = &(*_23);
        _21 = move _22 as &dyn T (Pointer(Unsize));
        _27 = &mut _28;
        _26 = &raw const (*_27);
        _25 = move _26 as *const dyn T (Pointer(Unsize));
        return;
    }
}
