// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();
    let _1: (i32, i32);
    scope 1 {
        debug x => _1;
    }

    bb0: {
        _1 = (const 1_i32, const 2_i32);
        return;
    }
}

fn issue_36540() -> () {
    let mut _0: ();
    let _1: i32;
    let _2: std::cell::Cell<i32>;
    scope 1 {
        debug i32 => _1;
        scope 2 {
            debug x => _1;
        }
    }

    bb0: {
        _1 = const 0_i32;
        _2 = Cell::<i32>::new(_1) -> bb1;
    }

    bb1: {
        return;
    }
}

fn issue_36540::<impl at ui/macros/type-macros-simple.rs:19:5: 19:59>::index(_1: &dyn Trait<(i32, T)>, _2: i32) -> &i32 {
    debug self => _1;
    debug i => _2;
    let mut _0: &i32;
    let mut _3: !;

    bb0: {
        _3 = core::panicking::panic(const "not implemented");
    }
}

fn S(_1: i32, _2: T) -> S<T> {
    let mut _0: issue_36540::S<T>;

    bb0: {
        _0 = S::<T>(move _1, move _2);
        return;
    }
}

// MIR FOR CTFE
fn S(_1: i32, _2: T) -> S<T> {
    let mut _0: issue_36540::S<T>;

    bb0: {
        _0 = S::<T>(move _1, move _2);
        return;
    }
}
