// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn Bound::dummy(_1: &Self) -> () {
    debug self => _1;
    let mut _0: ();

    bb0: {
        return;
    }
}

fn <impl at ui/where-clauses/where-clause-bounds-inconsistency.rs:15:1: 15:20>::a(_1: &bool, _2: T) -> () {
    debug self => _1;
    let mut _0: ();

    bb0: {
        drop(_2) -> bb1;
    }

    bb1: {
        return;
    }
}

fn <impl at ui/where-clauses/where-clause-bounds-inconsistency.rs:15:1: 15:20>::b(_1: &bool, _2: T) -> () {
    debug self => _1;
    let mut _0: ();

    bb0: {
        drop(_2) -> bb1;
    }

    bb1: {
        return;
    }
}

fn <impl at ui/where-clauses/where-clause-bounds-inconsistency.rs:15:1: 15:20>::c(_1: &bool, _2: T) -> () {
    debug self => _1;
    let mut _0: ();

    bb0: {
        drop(_2) -> bb1;
    }

    bb1: {
        return;
    }
}

fn <impl at ui/where-clauses/where-clause-bounds-inconsistency.rs:15:1: 15:20>::d(_1: &bool, _2: T) -> () {
    debug self => _1;
    let mut _0: ();

    bb0: {
        drop(_2) -> bb1;
    }

    bb1: {
        return;
    }
}

fn main() -> () {
    let mut _0: ();

    bb0: {
        return;
    }
}
