// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/impl-trait/in-trait/reveal.rs:10:1: 10:16>::f() -> Box<String> {
    let mut _0: std::boxed::Box<std::string::String>;
    let mut _1: std::string::String;

    bb0: {
        _1 = String::new() -> bb1;
    }

    bb1: {
        _0 = Box::<String>::new(move _1) -> bb2;
    }

    bb2: {
        return;
    }
}

fn main() -> () {
    let mut _0: ();
    let _1: std::boxed::Box<std::string::String>;
    scope 1 {
        debug x => _1;
    }

    bb0: {
        _1 = <() as Foo>::f() -> bb1;
    }

    bb1: {
        drop(_1) -> bb2;
    }

    bb2: {
        return;
    }
}
