// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
const <impl at ui/impl-trait/issue-68532.rs:5:1: 5:15>::N: usize = {
    let mut _0: usize;

    bb0: {
        _0 = const 68_usize;
        return;
    }
}

fn <impl at ui/impl-trait/issue-68532.rs:5:1: 5:15>::foo(_1: &A<'_>) -> () {
    debug self => _1;
    let mut _0: ();
    let _2: [i32; 68];
    scope 1 {
        debug _b => _2;
    }

    bb0: {
        _2 = [const 0_i32; 68];
        return;
    }
}

<impl at ui/impl-trait/issue-68532.rs:5:1: 5:15>::foo::{constant#0}: usize = {
    let mut _0: usize;

    bb0: {
        _0 = const _;
        return;
    }
}

fn main() -> () {
    let mut _0: ();

    bb0: {
        return;
    }
}

fn A(_1: &()) -> A<'_> {
    let mut _0: A<'_>;

    bb0: {
        _0 = A::<'_>(move _1);
        return;
    }
}

// MIR FOR CTFE
fn A(_1: &()) -> A<'_> {
    let mut _0: A<'_>;

    bb0: {
        _0 = A::<'_>(move _1);
        return;
    }
}
