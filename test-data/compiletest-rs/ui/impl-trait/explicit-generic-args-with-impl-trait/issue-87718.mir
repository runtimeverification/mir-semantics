// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn f(_1: impl AsRef<T>, _2: impl AsRef<T>) -> () {
    let mut _0: ();

    bb0: {
        drop(_2) -> [return: bb1, unwind: bb3];
    }

    bb1: {
        drop(_1) -> bb2;
    }

    bb2: {
        return;
    }

    bb3 (cleanup): {
        drop(_1) -> [return: bb4, unwind terminate];
    }

    bb4 (cleanup): {
        resume;
    }
}

fn main() -> () {
    let mut _0: ();
    let _1: ();

    bb0: {
        _1 = f::<[u8], &str, &[u8; 1]>(const "a", const b"a") -> bb1;
    }

    bb1: {
        return;
    }
}

alloc1 (size: 1, align: 1) {
    61                                              â”‚ a
}
