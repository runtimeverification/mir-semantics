// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn assert_static(_1: T) -> () {
    let mut _0: ();

    bb0: {
        drop(_1) -> bb1;
    }

    bb1: {
        return;
    }
}

fn capture_lifetime() -> () {
    let mut _0: ();

    bb0: {
        return;
    }
}

fn test_lifetime() -> () {
    let mut _0: ();
    let _1: ();

    bb0: {
        _1 = assert_static::<fn() {capture_lifetime::<'_>}>(capture_lifetime::<'_>) -> bb1;
    }

    bb1: {
        return;
    }
}

fn main() -> () {
    let mut _0: ();

    bb0: {
        return;
    }
}
