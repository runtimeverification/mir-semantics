// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn foo(_1: T) -> () {
    debug _t => _1;
    let mut _0: ();

    bb0: {
        drop(_1) -> bb1;
    }

    bb1: {
        return;
    }
}

fn main() -> () {
    let mut _0: ();
    let _1: std::string::String;
    let _2: main::A<'_, &str>;
    scope 1 {
        debug a1 => _1;
        debug a2 => _2;
    }

    bb0: {
        return;
    }
}

fn A(_1: &B) -> A<'_, B> {
    let mut _0: main::A<'_, B>;

    bb0: {
        _0 = A::<'_, B>(move _1);
        return;
    }
}

// MIR FOR CTFE
fn A(_1: &B) -> A<'_, B> {
    let mut _0: main::A<'_, B>;

    bb0: {
        _0 = A::<'_, B>(move _1);
        return;
    }
}
