name: 'Test'
on:
  pull_request:
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  code-quality-checks:
    name: 'Code Quality Checks'
    runs-on: ubuntu-latest
    steps:
      - name: 'Check out code'
        uses: actions/checkout@v3
      - name: 'Install Poetry'
        uses: Gr1N/setup-poetry@v8
      - name: 'Run code quality checks'
        run: make -C kmir check

  unit-tests:
    needs: code-quality-checks
    name: 'Unit Tests'
    runs-on: ubuntu-latest
    steps:
      - name: 'Check out code'
        uses: actions/checkout@v3
      - name: 'Install Poetry'
        uses: Gr1N/setup-poetry@v8
      - name: 'Run unit tests'
        run: make -C kmir test-unit

  integration-tests:
    needs: code-quality-checks
    name: 'Integration Tests'
    runs-on: [self-hosted, linux, normal]
    steps:
      - name: 'Check out code'
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.JENKINS_GITHUB_PAT }}
          submodules: recursive
      - name: 'Set up Docker'
        uses: ./.github/actions/with-docker
        with:
          container-name: mir-semantics-ci-${{ github.sha }}
      - name: 'Run integration tests'
        run: docker exec --user user mir-semantics-ci-${GITHUB_SHA} make -C kmir test-integration
      - name: 'Tear down Docker'
        if: always()
        run: docker stop --time 0 mir-semantics-ci-${GITHUB_SHA}

  nix:
    name: 'Nix'
    needs: code-quality-checks
    runs-on: ubuntu-latest
    timeout-minutes: 300
    steps:
      - name: 'Check out code'
        uses: actions/checkout@v3
      - name: 'Install Nix'
        uses: cachix/install-nix-action@v22
        with:
          install_url: https://releases.nixos.org/nix/nix-2.13.3/install
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }} 
      - name: 'Nix Build KMIR'
        run: GC_DONT_GC=1 nix build . --extra-experimental-features 'nix-command flakes' --print-build-logs
      - name: 'Nix Test KMIR'
        run: GC_DONT_GC=1 nix build --extra-experimental-features 'nix-command flakes' --print-build-logs .#kmir-test